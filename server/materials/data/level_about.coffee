import epigraph from "../lib/epigraph"
import label from "../lib/label"
import level from "../lib/level"
import page from "../lib/page"

dist_cons = () ->
    page("\nО дистанционных консультациях и дистанционных контестах по воскресеньям", String.raw"""
        <h3>О дистанционных консультациях по воскресеньям</h3>
        <p>В этом году вместо очных занятий я планирую проводить по воскресеньям дистанционные консультации (в zoom или т.п.)
        В консультациях могут принимать участие все желающие ученики курса (не только нижегородские школьники).
        Консультации проводятся именно в формате консультаций: я отвечаю на конкретные ваши вопросы. </p>
        <p>Чтобы участвовать в консультации, надо мне заранее написать. Основываясь на тех, кто напишет, их пожеланиях по времени и моих возможностях по времени,
        я выберу время проведения консультации. На следующую неделю надо писать заново.
        Желательно писать мне о своем желании участвовать в очередной консультации не позднее пятницы, тогда больше шансов, что я смогу подобрать время.
        Если никто мне не написал, то консультацию я проводить не буду.</p>
        <p>Возможно проведение консультации в субботу, а не в воскресенье, если будет такое желание, если у меня будет возможность, и если не будет
        желающих, кто может только в воскресенье.</p>
        <p>Ориентировочное время проведения консультации — не больше часа. Если будет много желающих, имейте в виду, 
        что я не смогу всем вопросам уделить много времени.</p>
        <h3>О дистанционных контестах</h3>
        <p>Школьникам уровня 3 и выше я настоятельно рекомендую, в дополнение к основному алгопрогу, решать codeforces.
        Я готов каждую неделю ставить какой-нибудь старый cf-раунд, чтобы все желающие его прорешали, и потом можно будет обсудить эти задачи
        на дистанционной консультации. Обсуждать тоже будем в формате консультации, т.е. в виде ответов на конкретные вопросы
        (а не последовательного разбора задач), но если несколько человек писали один контест, это может быть довольно продуктивно.</p>
        <p>Аналогично основной консультации, пишите заранее, если хотите, чтобы я вам поставил контест.</p>
    """, {id: "dist_cons"})

module20927_21 = () ->
    page("\nО бесплатности занятий для нижегородских школьников", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h3>Занятия и правда бесплатные?</h3>
        <p>Да, занятия для школьников из Нижегородской области бесплатные. (Для студентов и всех остальных занятия платные, можете не читать этот текст.) </p>
        
        <h3>Но есть какие-то требования или условия?</h3>
        <p>Я, естественно, хочу от вас чего-то попросить за то, что я с вами занимаюсь. А именно, если эти занятия вам действительно полезны, и вы собираетесь применять полученные знания на какой-нибудь олимпиаде, конкурсе или подобном мероприятии, то я прошу вас указывать меня как вашего учителя, или преподавателя кружка и т.п. Особенно это касается, конечно, ситуации, если вы будете участвовать в олимпиадах высокого уровня (ну, начиная с городской/областной).</p>
        
        <h3>Но ведь я занимаюсь и где-то еще...</h3>
        <p>Конечно. Я поэтому прошу вас сначала понять, насколько этот курс вам полезен по сравнению с другими занятиями. Если подавляющую часть своих знаний вы получили где-то еще (на уроках в школе, на другом кружке или спецкурсе, от родителей и т.п.), и ваш результат на олимпиаде будет в первую очередь результатом других занятий — то, конечно, меня не надо указывать. Если вы получали важные знания как здесь, так и на других занятиях — значит, укажите и меня, и другого преподавателя. На многих олимпиадах можно указать нескольких преподавателей, или можно отдельно указать школьного учителя и преподавателя кружка, и т.п. Если же вы все знания получили только здесь, а другие занятия вам практически не помогли — я буду благодарен, если вы укажете только меня.</p>
        
        <h3>Но школа будет против указывать кого-то постороннего...</h3>
        <p>Попробуйте объяснить вашему учителю или завучу ситуацию. Объясните, что ваши результаты будут во многом определяться именно тем, что вы занимались на этом курсе (а если это не так, и вам эти занятия не помогли, — то, см. предыдущий вопрос, и не надо меня указывать); что если бы вы здесь не занимались, то ваш результат был бы хуже. Может быть, попросите ваших родителей помочь объяснить. В крайнем случае напишите мне, я могу связаться с некоторыми школами города. Или дайте учителю или завучу мой телефон, пусть позвонят.</p>
        
        <h3>Но заявку подает школа, я не могу на нее повлиять...</h3>
        <p>На многих олимпиадах на регистрации перед началом олимпиады вы можете проверить, кто у вас указан как учитель, и исправить. Кроме того, если вы прошли на олимпиаду сравнительно высокого уровня, то можете заранее подойти к вашему учителю или завучу и попросить указать меня в заявке на следующую олимпиаду.</p>
        
        <h3>А как вас указывать?</h3>
        В большинстве случаев достаточно указать фамилию, имя и отчество — Калинин Петр Андреевич. Если это какой-то очень официальный текст (титульный лист какого-нибудь доклада и т.п.), то можете добавить «к.ф.-м.н.» (что значит кандидат физико-математических наук), но лучше сначала уточните у кого-нибудь или у меня. Если надо указать должность и место работы, можно писать просто «algoprog.ru», в крайнем случае можно написать «старший разработчик, Яндекс» (хотя, строго говоря, это не имеет отношения к нашим занятиям). Если надо указать мой телефон, он есть на главной страничке курса. Если надо что-то еще, то свяжитесь со мной.
        
        <h3>А еще?</h3>
        <p>Вторая вещь, о которой я вас попрошу — если вам эти занятия оказались полезными, и у вас есть друзья или знакомые, которые являются достаточно умными школьниками, хорошо знают математику, участвуют в олимпиадах, или просто интересуются программированием — расскажите им про эти занятия.</p>
        </div>
    """)

module16024_1 = () ->
    page("Про свои ноутбуки на занятиях", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про свои ноутбуки</h1>
        <p>Иногда бывает, что на занятиях не хватает компьютеров (особенно в начале учебного года). Поэтому вы <b>можете приносить свои ноутбуки</b>, но на следующих условиях:</p>
        <ol>
        <li>Вы сами несете ответственность за свой ноутбук. Я не готов решать какие-либо проблемы, связанные с ноутбуком, начиная от отсутствующей зарядки или отсутствующего интернета (см. ниже), поломки его вами или другими школьниками, и до даже его пропажи (хотя и надеюсь, что такого не будет). Если вы и ваши родители не уверены, стоит ли вам брать с собой ноутбук — не берите.</li>
        <li>Обеспечивайте доступ в интернет на своем ноутбуке самостоятельно. Проще всего — имейте с собой usb-модем или научитесь раздавать доступ в интернет со своего телефона. Убедитесь, что у вас достаточно трафика для работы, или заранее подключите пакет трафика (я думаю, если вы собираетесь только работать на алгопроге, то сотни мегабайт будет более чем достаточно). Лучше проверьте заранее, что все работает. Вы можете также объединиться, чтобы в группе друзей один человек раздавал интернет на всех, но договаривайтесь об этом самостоятельно и заранее, а также читайте следующие пункты.</li>
        <li>Убедитесь, что у вас на ноутбуке нет вирусов и других программ, которые могут захотеть скачать большое количество данных из интернета; вирусы еще могут подписать вас на какие-нибудь платные мобильные рассылки, а многие программы с функцией автообновления могут расходовать много трафика без предупреждения. Если вы используете интернет друга, или предоставляете свой интернет друзьям, то риск скачивания большого объема данных тем более возрастает. (В частности, именно поэтому я сам не раздаю интернет со своего телефона.)</li>
        <li>Имейте с собой все нужные зарядки (для ноутбука и для телефона, хотя телефон проще подключать к ноутбуку). Имейте также с собой <b>удлинитель</b> метра на 3 как минимум, а то и на 5 метров, т.к. в наших аудиториях у многих столов или нет розеток, или их мало.</li>
        <li>Заранее установите требуемые для работы программы — среду программирования и/или среды разработки, какие вы используете; для команд также убедитесь, что у вас установлено всё, что требуется для всей вашей команды.</li>
        <li>Для команд нет большого смысла приносить более 1 ноутбука на команду.</li>
        </ol></div>
    """)

module20927_23 = () ->
    page("Для учителей и родителей", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Для учителей и родителей</h2>
        <p>Я про это уже написал в FAQ, но на всякий случай повторю здесь. Я рассматриваю занятия ваших детей здесь как добровольные, и не собираюсь от них требовать чего-либо, заставлять и т.д. Если школьник не хочет заниматься, или не может себя заставить — я не буду от него ничего требовать. У меня банально нет никакого канала влияния на него.</p>
        
        <p>Но вы можете влиять на школьника, поэтому, если вы хотите, чтобы от занятий был какой-то результат, то следите за тем, как ваш школьник занимается. Слева, в меню сайта, есть "сводные таблицы", там можно отслеживать прогресс каждого школьника. Школьник также может показать вам, какие задачи он пытался сдавать, каков был результат проверки и т.д. Там же есть "Таблица по неделям кто что решал", в ней указывается, кто достиг какого уровня, а также по неделям кто сколько задач решил. Цвет ячейки в "таблице по неделям" обозначает, насколько хороший результат показал школьник на очередной неделе: ярко-зеленый — очень хорошо, светло-зеленый — средненько, белый — вообще ничего даже не пытался. Наконец, вы всегда можете связаться со мной.</p>
        
        <p>Отдельное обращение к учителям: часто бывает так, что сильным школьникам на школьных уроках информатики просто скучно. Если ваш школьник занимается по этому курсу, разрешите ему во время урока решать задачи, читать теорию этого курса! И, конечно, если у вас есть сильные ученики — расскажите им об этом курсе!</p>
        
        <p>И еще одно замечание. Пожалуйста, прочитайте раздел <a href="/material/module-20927_21" onclick="window.goto('/material/module-20927_21')();return false;">"О бесплатности занятий"</a>. А именно, если ваши школьники благодаря моим занятиям будут достигать хороших результатов, то постарайтесь сделать так, чтобы я был указан их учителем/преподавателем на тех олимпиадах и подобных мероприятиях, где они будут применять полученные здесь знания.</p></div>
    """)

module20927_25 = () ->
    page("\nПро самостоятельность", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Про самостоятельность</h2>
        
        <p>Отдельно хочу вас написать про вашу самостоятельность. Я ожидаю, что при работе в курсе (независимо от того, работаете вы в заочном курсе, на воскресных занятиях или в лицее 40) вы будете проявлять способность к достаточно самостоятельной работе. В заочном курсе самостоятельность подразумевается сама собой, но и в при очных занятиях я хочу, чтобы вы не просто тупо писали то, что я вам рассказал, но и могли думать сами.</p>
        
        <p>Это обозначает, во-первых, не будут сам вас торопить или заставлять решать задачи. Хотите — решайте, не хотите — ну и не решайте, мне же проще — меньше проверять. Я не буду стоять у вас над душой и что-то с вас требовать.</p>
        
        <p>Во-вторых, не ожидайте, что на занятиях или в теоретических материалах на сайте будет отражено <i>абсолютно всё</i>, что может вам потребоваться для решения задач. Вполне возможно, что в каких-нибудь задачах вы обнаружите, что требуется что-то, что мы "не проходили". Не страшно. Вы всегда можете меня спросить, а лучше — сначала исследовать вопрос самостоятельно (в вашей любимой книжке, или в интернете), а если не получится, то спросить меня. Я вас не съем за такие вопросы, наоборот, я буду очень рад, если вы увидите, что в какой-то задаче требуется что-то дополнительное, и сможете четко спросить, что именно вам требуется.</p>
        
        <p>В-третьих, если вы чего-то не поняли на занятии, в моем комментарии к вашему решению, в теоретических материалах или где еще; или если вы не понимаете, почему не работает ваша программа, то просто подойдите ко мне и спросите (или напишите мне). Не ожидайте, что я вам все очень подробно объясню с первого раза или что я вам буду писать сверхподробные комментарии к решениям. Я объясняю и пишу как раз с расчетом что, если вы что-то не поняли, то вы переспросите.</p></div>
    """)

module20927_9 = () ->
    page("\nИнструкция для тех, кто здесь в первый раз (или \"Что надо сделать, чтобы начать заниматься?\")", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Инструкция для тех, кто здесь в первый раз</h1>
        <h2>Для школьников</h2>
        Если вы хотите начать заниматься в этом курсе, то сделайте следующее:
        <ol>
        <li>Во-первых, можно просто придти на специальное очное занятие для начинающих (см. информацию об очных занятиях в разделе "О курсе"). Но можно начать (и продолжать) заниматься и дома, не дожидаясь очного занятия, можно и вообще на очные занятия не ходить. Все инструкции ниже идут как раз для случая, если вы хотите начать заниматься из дома.</li>
        <li><a href="/register" onclick="window.goto('/register')();return false;">Зарегистрируйтесь на этом сайте</a>. При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>
        <li>Напишите мне любым из указанных в <a href="/material/about" onclick="window.goto('/material/about')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, школу, класс, город. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля"; если вы участвовали в каких-либо олимпиадах по математике или программированию, укажите это. (Это не значит, что здесь будет какой-то отбор, я готов принять в курс всех желающих. Но я просто хочу заранее знать, какой у вас уже есть опыт.) </li>
        <li>Прочитайте, или хотя бы просмотрите, все тексты разделе "О курсе".</li>
        <li>Далее:
        <ul>
        <li>Если вы — начинающий, т.е. не знаете никакой язык программирования на уровне, позволяющем вам уверенно писать простые программы, то начинайте с <a href="/material/1" onclick="window.goto('/material/1')();return false;">уровня 1</a>. Там последовательно разбираются различные стороны языка программирования — начните их последовательно проходить. Вам надо будет выбрать, на каком языке программирования работать, я советую начинающим питон.</li>
        <li>Если вы какие-то программы писать умеете, но не очень уверенно, то выберите на уровнях <a href="/material/1%D0%90" onclick="window.goto('/material/1%D0%90')();return false;">1А</a> или <a href="/material/1%D0%91" onclick="window.goto('/material/1%D0%91')();return false;">1Б</a> первую тему, которую не очень уверенно знаете, и начинайте с нее.</li>
        <li>Если вы на выбранном вами языке программирования можете достаточно уверенно писать простые программы, то начните с темы "вещественные числа" на <a href="/material/1%D0%91" onclick="window.goto('/material/1%D0%91')();return false;">уровне 1Б</a>, и после этого переходите к уровню 1В и далее. Вполне возможно, что эти задачи вам покажутся простыми, и вы их очень быстро решите, но, возможно, над некоторыми вам придется подумать, а заодно я посмотрю на ваш стиль программирования и на разного рода мелкие моменты, которые вы можете не знать, пусть даже и хорошо пишите программы. Перед тем, как начинать решать задачи, прочитайте в разделе "О курсе" текст "Работа с сайтом...".</li>
        <li>Если вы — уже очень сильно продолжающий, т.е. умеете уверенно писать простые задачи (и, скорее всего, вы уже участник региональных олимпиад), то напишите мне и ждите инструкций.</li>
        </ul>
        </li></ol>
        
        <h2>Для студентов и старше</h2>
        <ul>
        <li><a href="/register" onclick="window.goto('/register')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.msk.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>
        <li>Напишите мне любым из указанных в <a href="/material/about" onclick="window.goto('/material/about')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>
        <li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе".</li>
        <li>Дождитесь ответа и дальнейших инструкций от меня.
        </li>
        </ul></div>
    """)

module20927_3 = () ->
    epigraph("There are nine and sixty ways of constructing tribal lays,\nAnd every single one of them is right!", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:right;width:100%;padding-bottom:2ex;"><i>There are nine and sixty ways of constructing tribal lays,<br>
        And every single one of them is right!</i><br><br>
        Rudyard Kipling. In the Neolithic Age<br><br><br>
        Есть девять и шестьдесят способов писать песни племен<br>
        И каждый из них без исключения верный!<br><br>
        Редьярд Киплинг. В эпоху Неолита</div>
        
        <p>У каждой задачи есть очень много решений, и многие из них — верные. Не следует ожидать, что у каждой задачи есть единственное правильное решение; бывают решения лучше, бывают решения хуже, но почти всегда есть два-три существенно разных решения, которые все весьма хороши, и из которых сложно выбрать одно лучшее. Будьте готовы к этому, будьте готовы видеть эти разные решения и разные подходы.</p>
        
        <p>В частности, если у вас есть ошибка в программе, то обычно есть много способов ее исправить. Поэтому не удивляйтесь, если вы меня спрашиваете, как исправить ошибку, а я вам предлагаю несколько вариантов исправления.</p></div>
    """)

###
module20927_33 = () ->
    page(" \nПро дополнительные лекции по воскресеньям", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про дополнительные лекции</h1>
        
        <p>Я планирую время от времени по воскресеньям на занятии проводить дополнительные лекции на разные темы, не связанные напрямую с алгопрогом и вообще с алгоритмами — но которые серьезный программист по идее должен знать.</p>
        
        <p>Эти лекции совершенно не нужны для занятий на алгопроге, да и по бóльшей части для олимпиад тоже (хотя отчасти и будут полезны, особенно про командную строку). Но они очень полезны для вашего кругозора.</p><p>
        
        </p><p>Цель таких лекций — дать вам общее представление о той или иной теме. Я не буду ставить целью чтобы вы сразу научились чему-то новому, я буду ставить целью чтобы вы узнали о существовании чего-то нового и поняли, что надо искать и про что читать в интернете, чтобы с этим разобраться. </p>
        
        <p>Лекции будут проходить в среднем раз в две недели по воскресеньям  в аудитории 114 в 15.00, и длиться примерно 30-60 минут. На них можно приходить и тем, кто зарегистрировался на занятие в 14.00, и тем, кто зарегистрировался на занятие в 15.30, и тем, кто не регистрировался на занятия вообще.</p>
        
        <p>Предварительный список тем (я готов принимать от вас запросы на какие-либо еще темы):</p><p>
        
        </p><ul>
        <li><b>6 октября</b>: Командная строка</li>
        <li><b>27 октября</b>: Far manager</li>
        <li><b>16 февраля</b>: Системы контроля версий</li>
        <li>TeX и LaTeX</li>
        <li>...</li>
        </ul>
        
        <p>Запрошенные темы (не обещаю, что расскажу, но подумаю):</p>
        
        <ul>
        <li>Нейронные сети и их обучение</li>
        <li>Компиляторы, интерпретаторы, ассемблер и т.д.</li>
        <li>История языков программирования</li>
        </ul></div>
    """)
###

pay = () ->
    page("Стоимость и порядок оплаты занятий", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix">
        <h1>Стоимость и порядок оплаты занятий</h1>
        
        <h2>Для учеников лицея 40</h2>
        <p>Для учеников лицея 40 <b>занятия бесплатны</b> (т.к. мне проведение занятий оплачивает лицей 40).</p>

        <h2>Для школьников из Нижегородской области</h2>
        <p>До 30 июня 2025 года занятия для нижегородских школьников бесплатны.</p>
        <p>С 1 июля 2025 года для нижегородских школьников есть два варианта занятий:</p>
        <ul>
        <li>Вы занимаетесь полностью самостоятельно. Я не смотрю и не проверяю ваши решения (ваши решения будут автоматически засчитываться), вы не обращаетесь ко мне с вопросами «почему мое решение не работает», и т.д. В таком случае занятия для вас бесплатные.</li>
        <li>Вы полноценно занимаетесь на алгопроге, я проверяю ваши решения, вы можете обращаться ко мне с любыми вопросами и т.д. В таком занятия платные, стоимость составляет 50% от стоимость занятий для не-нижегородских школьников (см. ниже) .</li>
        </ul>
        
        <p><b>Формально вы считаетесь нижегородским школьником</b>, если можете участвовать во Всероссийской олимпиаде школьников по информатике и имеете теоретическую возможность, пройдя школьный и муниципальный этапы, участвовать в региональном этапе ВсОШ в Нижегородской области (т.е. в Нижегородской областной олимпиаде школьников по информатике). Как правило, это обозначает, что вы должны учиться в школе, находящейся на территории Нижегородской области, хотя бывают исключения.</p>
        
        <p>Если у меня возникнут подозрения, являетесь ли вы нижегородским школьников или нет, я могу попросить вас как-то это подтвердить.</p>
        
        <p>Прочитайте, пожалуйста, отдельный текст <a href="/material/module-20927_21" onclick="window.goto('/material/module-20927_21')();return false;">про бесплатность занятий для нижегородских школьников</a>.</p>
        
        <h2>Для всех остальных</h2>
        
        <p>Занятия для всех остальных (не-нижегородских школьников, а также не-школьников) платные. Точнее, собственно все материалы в курсе бесплатные, вы можете просматривать сайт как не-зарегистрированный пользователь. Во многих задачах есть ссылки на информатикс или на codeforces, вы можете сдавать решения там. Но любая деятельность, требующая аккаунта на алгопроге, для которой недостаточно возможностей не-зарегистрированного пользователя — платная. Я беру деньги за возможность отправки решений на проверку напрямую с алгопрога, за то, что я добавлю вас в сводные таблицы, буду просматривать и комментировать ваши решения, отвечать на ваши вопросы (заочно) и т.д., а также за доступ к разделам «Хорошие решения» и «Найди ошибку».</p>
        
        <p>Стоимость занятий определяется следующим образом:</p>

        <table class="table table-striped table-condensed table-hover">
        <tbody>
        <tr><td>Лицей 40 г. Н. Новгород</td><td>Бесплатно</td></tr>
        <tr><td>Нижегородские школьники (см. определение выше)</td><td>Бесплатно или платно, см. выше</td></tr>
        <tr><td>Россия, 7 класс и младше</td><td>3000 рублей в месяц</td></tr>
        <tr><td>Россия, 8 класс</td><td>3500 рублей в месяц</td></tr>
        <tr><td>Россия, 9 класс</td><td>4000 рублей в месяц</td></tr>
        <tr><td>Россия, 10 класс</td><td>5000 рублей в месяц</td></tr>
        <tr><td>Россия, 11 класс</td><td>5000 рублей в месяц</td></tr>
        <tr><td>Не российские школьники</td><td>5000 рублей в месяц</td></tr>
        <tr><td>Не школьники (студенты и старше)</td><td>5000 рублей в месяц</td></tr>
        </tbody></table>

        <p>Оплата не обязательно привязана к 1 числу месяца; например, вы можете оплатить занятия с 20 числа одного месяца по 20 число другого месяца.</p>

        <p>Для новых учащихся первая неделя занятий в курсе бесплатна.</p>
        
        <h3>Дополнительные правила</h3>
        <p>Стоимость занятий для школьников фиксируется на тот момент, когда я активировал вам аккаунт в конкретном учебном году, и до конца учебного года; если в дальнейшем я буду поднимать стоимость занятий, то вы продолжите заниматься по старой цене (до конца учебного года, а если будете заниматься успешно, то и на следующий год и т.д.).</p>
        
        <p>Для студентов стоимость занятий фиксируется на момент первой оплаты и пожизненно.</p>
        
        <p>Для нижегородских школьников, занимавшихся в моем курсе более-менее успешно (условно говоря, набравших рейтинг 4000 или выше, но может обсуждаться индивидуально), действует пожизненная скидка 50% на занятия после того, как они закончат школу.</p>
        
        <p>Границей учебного года (для определения "успешно занимающихся школьников", а также для "перевода" в следующий класс или в статус студентов) считается 1 июля.</p>
        
        <h3>Подтверждение</h3>
        
        <p>Если вы — не-нижегородский школьник младше 10 класса (т.е. стоимость занятий для вас ниже, чем для студентов), то вам надо подвердить это. Проще всего (для российских школьников) — вы можете взять в школе справку о том, что вы учитесь в таком-то классе, написать на ней ваш логин на алгопроге и прислать мне фотографию. Если вы почему-то не можете взять справку в школе, то вы можете прислать фотографию какого-нибудь диплома или грамоты с указанием школы, класса и года, в крайнем случае прислать мне ссылку на какую-нибудь официальную страничку в интернете, где указаны ваши имя, фамилия, класс и школа (например, это могут быть результаты какой-нибудь олимпиады, конкурса или т.п., это может быть какая-нибудь новость на сайте вашей школы и т.д.). Возможно, я еще попрошу ссылку на ваш профиль в социальных сетях. Возможны и другие варианты подтверждения — напишите мне, как вы можете подтвердить ваш класс.</p>
        
        <p>Если вы не можете подтвердить свое право на сниженную стоимость занятий, вы можете заниматься по студенческой стоимости.</p>
        
        <h3>Скидки для успешных школьников</h3>
        
        <p>Для школьников существует дополнительная акция: если вы успешно занимались в курсе, и остаетесь школьником на следующий год, то на следующий год для вас сохраняется та же стоимость обучения, которая была и в этом году. Школьник считается успешно занимавшимся, если за год он решил минимум 70 задач, не считая задач уровней 1А и 1Б.</p>
        
        <p>Например, если 8-классник успешно занимался в курсе в течение года, то когда он перейдет в 9 класс, он продолжит заниматься по той же цене. Если он и в 9 классе будет успешно заниматься, то и в 10 классе он будет заниматься по той же цене, и т.д. Если, к примеру, в 10 классе он не будет успешно заниматься, то в 11 классе стоимость занятий для него сбросится на ту стоимость, которая будет установлена для 11 классов в соответствующем году.</p>
        
        <h2>Оплата</h2>
        <p>Оплатить занятия можно банковской картой <a href="/payment" onclick="window.goto('/payment')();return false;">на сайте</a>.</p>
        <p>Оплата возможна только российскими картами. Если у вас нет возможности оплачивать занятия российской картой, напишите мне, что-нибудь придумаем.</p>
        
        <h2>Правила насчет перерывов и возвратов денег</h2>
        <p>Стоимость не зависит от того, насколько вы активны в курсе (если вы решаете много, то я буду на вас тратить больше времени, чем если вы решаете мало, а вы платите одну и ту же сумму). Более того, многие люди, естественно, занимаются не каждый день, но довольно странно брать деньги только за те дни, когда вы занимались, потому что это наказывает активных учеников. Поэтому единицей оплаты является месяц, и даже если вы не занимаетесь какое-то небольшое количество дней, все равно эти дни должны быть оплачены. Формальная политика такая:</p>
        <ul>
        <li>При продлении оплаты не позже, чем через 6 дней после окончания предыдущего оплаченного срока, новый оплаченный срок начисляется «встык» к предыдущему, т.е. не с даты оплаты, а с даты окончания предыдущего срока. Если вы продлеваете оплату позже, чем через 6 дней после окончания оплаченного срока, то новый оплаченный срок начисляется со дня оплаты.</li>
        <li>Если вы по объективным непредвиденным причинам не могли заниматься в курсе более 5 дней подряд (сломали руку и т.п.), то я вам верну деньги за весь период, когда вы не могли заниматься*. Предсказуемые вещи типа поездок, сессии и т.п. сюда не считаются.</li>
        <li>Если вы по каким бы то ни было причинам не занимались более 10 дней подряд, то я вам верну половину денег за этот период*.</li>
        <li>Если вы заранее предупреждаете меня о том, что не сможете заниматься более 10 дней подряд, то я могу вернуть вам деньги за этот период.</li>
        <li>Конечно, если я по каким-то причинам не мог проверять ваши решения и отвечать на ваши письма в течение более чем недели подряд, то я вам верну деньги за весь этот период*.</li>
        </ul>
        <p>* Любые возвраты денег осуществляются только по вашему запросу. Запросить возврат надо не позже 14 дней с момента окончания того периода, за который вы просите вернуть деньги. Если вы обращаетесь ко мне позже, я имею право отказать.</p>
        <p>Конечно, в любом случае, вместо возврата денег, если вы хотите, я могу просто продлить оплаченный период на срок, соответствующий сумме возврата.</p>
        </div>
    """, {id: "pay"})

module20927_13 = () ->
    page("\nПро засчитывание и игнорирование решений", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix">
        <h2>Про засчитывание и игнорирование решений</h2> 
        <p>Я буду просматривать, по возможности, все ваши решения, и комментировать их тем или иным образом. Тем решениям, которые я просмотрю, я буду присваивать новый статус: 
        </p><ul>
        <li>"Зачтено" — задача написана более-менее нормально, ура. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы можете увидеть мои комментарии. Если там комментария нет, значит, задача решена весьма хорошо. Если есть комментарий, то он обычно указывает, что можно улучшить.</li>
        <li>"Проигнорировано" — мне что-то весьма не понравилось в вашем коде. На страничке просмотра кода вашей посылки (по ссылке "Подробнее") под кодом вы увидите мои комментарии, объясняющие, что именно мне не понравилось. Исправьте это и пересдайте решение.</li></ul><p></p>
        
        <p>Если вы не понимаете комментарий, спросите, я объясню подробнее.</p>
        
        <p>Посылки со статусом "Зачтено" отмечаются в таблице зеленым.</p>
        
        <p>Посылки со статусом "Проигнорировано" отмечаются в таблице синим.</p>
        
        <p>Не относитесь к "игнорам" как к издевательству над вами. Я постараюсь игнорить только те программы, которые можно довольно существенно улучшить (например, существенно сократив количество кода). Помните, что ваша цель — не только написать программу, которая пройдет все тесты, но и вообще научиться программировать. Фактически, "Проигнорировано" я ставлю тогда, когда считаю, что комментарий, который я пишу к вашей посылке, настолько важен, что вам обязательно его стоит прочитать; "игнор" — это такой способ обратить ваше внимание на комментарий.</p>
        
        <p>То, что вы сумели, пусть и не самым оптимальным образом, написать программу и сдать ее — это очень круто, но еще круче будет, если вы узнаете и поймете, как то же самое можно сделать еще проще. Считайте, что в большинстве задач написать программу, чтобы она прошла все тесты — это, грубо говоря, 70% успеха, но получить по ней "Зачтено" — это оставшиеся 30%.</p>
        
        <p>Все комментарии (в том числе и к зачтенным посылкам, и даже к неуспешным) вы также можете просмотреть в правой колонка не сайте.</p>
        <p><a href="https://blog.algoprog.ru/why-ignore/">Подробнее про то, какие решения я игнорирую.</a></p>
        </div>
    """)

module20927_39 = () ->
    page("«Стажировка» на алгопроге", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>«Стажировка» на алгопроге</h1>
        <p>Что летом делают большинство нормальных студентов-программистов? Стажируются в IT-компаниях. Школьников обычно на такие стажировки не зовут, да и участвовать школьникам в стажировках обычно сложно.</p>
        
        <p>Поэтому я подумал, чем алгопрог хуже IT-компаний? И решил организовать возможность некоего аналога стажировок на алгопроге. А именно, если вы хотите, то можете поучаствовать в развитии самой платформы алгопрога. Если вы всегда хотели добавить на алгопрог какую-нибудь фичу, то вы сможете этим заняться. Или у меня для вас есть список вещей, которые я давно хочу сделать на алгопроге, но все не успеваю, и вы можете заняться ими.</p>
        
        <p>Это, конечно, будет довольно сильно отличаться от обычных задач, которые вы решаете на алгопроге. Вам придется разбираться в довольно объемном уже существующем (и очень грязном) коде алгопрога, вам придется разбираться в наверняка незнакомом языке программирования (Coffeescript, но не бойтесь — он несложный и поначалу весьма похож на питон), вам придется разбираться со множеством технологий, с которыми вы возможно еще не работали (git, MongoDB, node.js, React, немного Redux), вам придется разбираться с HTML и браузерным Javascript, вам придется много гуглить и читать, причем скорее всего по-английски (ну или через переводчик) — но я верю, что если вы абсолютно уверенно решаете как минимум задачи уровней 1А и 1Б, и не боитесь самостоятельно разбираться с возникающими проблемами, то вы вполне можете и со всем этим разобраться.</p>
        
        <p>Исходный код алгопрога вот: <a href="https://github.com/petr-kalinin/algoprog">https://github.com/petr-kalinin/algoprog</a>. Список доделок, которыми вы можете заняться, вот: <a href="https://github.com/petr-kalinin/algoprog/issues">https://github.com/petr-kalinin/algoprog/issues</a>, или вы можете обсудить со мной и предложить что-то свое.</p>
        
        <p>В отличие от классических стажировок, я не буду требовать от вас какой-то регулярности в работе (ну собственно как и с обычными задачами на алгопроге), и не буду вам платить денег :) — но обещаю, что буду вникать в то, что вы делаете, и помогать. А вы внесете свой вклад в развитие алгопрога, и получите много нового разнообразного опыта.</p>
        
        <p>Кроме того, в отличие от классических стажировок, я не смогу вам уделять столько внимания, сколько обычно уделяет руководитель стажеру в IT-компаниях. Вам придется очень во многом разбираться самостоятельно, я буду скорее направлять ваши действия, а не давать конкретные детальные указания. Будьте к этому готовы.</p>
        
        <p>В общем, если вы хотите в этом поучаствовать, пишите. Распространяется на всех, кто занимается на алгопроге (не обязательно школьников) и имеет уровень минимум 1В. Только лето (с мая по август включительно).</p></div>
    """, {id: "internship"})

sis = () ->
    page("Про Летнюю компьютерную школу", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><center><img src="https://lksh.ru/sis/scripts/logo.png" style="background:#000055;padding:10px;width:80%"></center>
        <h1>Летняя компьютерная школа — 2022</h1>
        
        <!--<p><b><font size=+1>NEW (29.03.2017):</font></b> <a href="https://docs.google.com/document/d/1Jc8JWvVeIMdTQGmqRgVMUFl6-xEvLOCGa43RwLP1QuE/pub">Советы по поступлению</a></p>-->
        
        <p><a href="https://lksh.ru">Летняя компьютерная школа (ЛКШ)</a> — это летняя школа для учащихся средних и старших классов, занимающихся программированием. ЛКШ проходит в две смены по три недели (в июле и в конце июля-августе, каждый школьник может поехать только в одну смену), <b>в 2022 году планируется только одна смена</b>. Традиционным местом проведения школы являлась база отдыха "Берендеевы Поляны" в Костромской области, но последнее время смены нередко проводятся и в других местах.</p>
        
        <p>В ЛКШ приезжают школьники со всей России; преподавателями являются учителя школ и преподаватели вузов Москвы, Санкт-Петербурга и других городов, организаторы и члены жюри различных олимпиад, сильные студенты российских вузов. (Я многие годы ездил в ЛКШ преподавателем, правда, в этом году не планирую ехать.) В ЛКШ очень хорошая учебная программа, также очень хорошая внеучебная программа. От Нижегородской области (и от лицея 40) туда регулярно ездят несколько школьников (см., например, <a href="https://poldnev.ru/lksh/cities/Nizhny_Novgorod">здесь</a>). Более подробная информация про ЛКШ <a href="https://lksh.ru/sis/2022/august.shtml">здесь</a>, еще много информации в <a href="https://vk.com/sis">группе вКонтакте</a>.</p>
        
        <!--
        <p>В этом году июльская смена пройдет с 4 по 24 июля на базе отдыха «Берендеевы поляны» в Костромской области (это самое стандартное место для ЛКШ). Августовская смена <b>предварительно</b> пройдет в Эстонии в отеле «Laagna» с 31 июля по 20 августа. Вступительная работа будет опубликована ориентировочно 25 марта, выполнить её нужно будет до 22 апреля.</p> -->
        
        <p>Я <b>очень рекомендую</b> всем школьникам, кто может, и при этом имеет достаточный уровень программирования, туда поехать.</p>
        <!-- А именно:</p>
        <ul>
        <li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>
        <li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>
        <li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>
        </ul>-->
        <p>Отбор в ЛКШ осуществляется по результатам выполнения вступительной работы, которую надо написать в мае, см. информацию на сайте.</p>
        
        <p>Еще раз: <b>ЛКШ — это очень и очень круто и полезно!</b> Поэтому всем, кто имеет уровень хоть сколько-то выше начального, имеет смысл туда поехать.</p>
        
        <p>Правда, есть проблема: участие в ЛКШ платное (ЛКШ проводится группой инициативных преподавателей и не имеет государственной поддержки), стоимость участия (19 дней: проживание, питание, занятия) будет предварительно 60 тыс. рублей,
        с возможностью получения кешбека при условии оплаты картой МИР (20 тыс. рублей).</p>
        
        <!--<p>Школьники, расскажите про ЛКШ своим родителям! Если у ваших родителей есть какие-то вопросы, пусть звонят мне. <b>Если вы уже планируете лето, постарайтесь запланировать поездку в ЛКШ.</b> (Я специально говорю вам про ЛКШ настолько заранее, т.к. знаю, что многие планируют лето еще зимой.) Ближе к поступлению я тут напишу более подробную информацию. Если возникают какие-то вопросы, обращайтесь. См. также советы по поступлению в ЛКШ ниже.</p>-->
        
        <p>Сайт школы со всей информацией — <a href="https://lksh.ru">lksh.ru</a>.</p>
        
        <!-- <p><b><font color=red>NEW:</font></b> <a href="https://docs.google.com/document/d/e/2PACX-1vQkAIuVK7ZErO0mVYd8hVcYOKCP6m9r3dQ5VhzOkrfn6cNw0Aj3tZ2zkQFdN4Fw4v1f7CIsVmuMh-Rt/pub">Советы по поступлению в ЛКШ</a></p> -->
        
        <p>Ролик про ЛКШ разных лет (довольно старый уже; другие, тоже старые, видео есть на <a href="https://www.youtube.com/user/pakalinin">моем канале</a>):</p>
        
        <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/4nVl5MHeqIY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
    """, {id: "sis"})

summerSchools = () ->
    page("Про летние школы в целом", String.raw"""
        <h1>Про летние школы</h1>
        <p>Летом проходит много разных летних школ. Ниже я перечислю наиболее известные школы по олимпиадному программированию. 
        Для поступления в большинство школ нужно выполнить вступительную работу.
        Всем школьникам, у кого уровень хотя бы 1Г, имеет смысл попробовать попаcть хотя бы в одну из них. 
        (Не надо гнаться за кучей школ; вполне достаточно съездить в какую-нибудь одну, максимум две.)</p>

        <p>В этом году в связи с текущей ситуацией возможны различные изменения и вариации в формате проведения школ; следите за их сайтами и другими источниками информации.</p>

        <p><b><a href="https://lksh.ru">Летняя компьютерная школа (ЛКШ)</a></b> — самая крутая и самая известная. Если можете, обязательно постарайтесь поступить и поехать в нее. 
        Про нее на сайте есть <a href="/material/sis">отдельный материал</a>.</p>

        <p><b><a href="https://www.sicamp.ru/">Летний компьютерный лагерь (ЛКЛ)</a></b> — отдельная школа, но по сути сделанная по образцу и подобию ЛКШ, и уже давно считается эдаким «младшим братом» ЛКШ. 
        Правда, на сайте школы пока информация только прошлого года.</p>

        <p><b><a href="https://cs.hse.ru/csss/">Летняя школа по компьютерным наукам</a></b></p>

        <p>Также, возможно, мы проведем <b>небольшую онлайн-школу для учеников алгопрога</b>, примерно по аналогии с тем, как были зимние сборы перед региональной олимпиадой. Но школа скорее всего будет полностью онлайн, и не факт, что будет.</p>

        <p>Возможно, вы найдете <b>какие-нибудь еще школы</b>. Напишите мне про них, я вам посоветую, имеет смысл туда ехать или нет. Грубый критерий — чтобы школу вообще имело смысл рассматривать, надо 1) чтобы в школе была достаточно понятная программа обучения (чтобы не оказалось, что для вас там слишком просто, или слишком сложно, или вообще не интересно), и 2) чтобы школу организовывали люди, имеющие опыт организации или выступления на олимпиадах высокого уровня (в частности, если вы вообще не можете найти имен организаторов школы — это обычно плохой признак).</p>

        <p>В частности, отдельно упомяну так называемую <b>Летнюю школу программирования NlogN</b> (<a href="https://volgacamp.ru/">сайт</a>, <a href="https://nlogn.info/camp">еще один сайт</a>). <b>Это очень подозрительная школа!</b> Прошлые годы
        огранизаторы пытались паразитировать на названии «Летняя компьютерная школа», и на традиционном месте проведения настоящей ЛКШ (база «Берендеевы поляны»), хотя эта школа никакого отношения
        к ЛКШ не имеет. Более того, эту школу проводит МИСИС, они неоднократно попадались на очень вольной трактовке фактов
        в рекламных материалах, поэтому я бы не верил ничему, что проводит МИСИС.</p>

        <hr/>

        <p>Помимо моего описания выше, есть также полезная сводная <a href="https://docs.google.com/spreadsheets/d/1FBbcQNCa1F405tYNesrg3Idkz-yofI8BPq14coVAUyk/edit#gid=1629853855">табличка от М.Г. Паньковой</a> (там также есть эта N log N, но см. выше).</p>


    """, {id: "summerSchools"})

nnoi = () ->
    page("Про Нижегородскую олимпиаду им. В.Д. Лелюха", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про Нижегородскую городскую олимпиаду им. В.Д. Лелюха</h1>
        <p>28 мая 2022 года состоится XVIII Нижегородская олимпиада школьников по информатике им. В.Д. Лелюха. Я рекомендую подавать заявку всем школьникам моего курса, которые являются учениками школ города Нижнего Новгорода (не области!), и имеющим уровень как минимум 1В. Можете подать заявку и если у вас уровень ниже, но, возможно, задачи даже отбора вам покажутся сложными.</p>
        
        <p>Для участия в олимпиаде надо подать заявку. Информация про олимпиаду и порядок подачи заявок выставлена на <a href="http://olympiads.nnov.ru">сайте олимпиады</a> в разделе "Новости" и разослана по части школ; если до вашей школы информация не дошла, покажите информацию с сайта своим учителям или завучам.</p>

        <p><b>Обратите внимание, что срок подачи заявок — до 19 мая включительно!</b></p>
        
        <p>Отбор на олимпиаду будет проводиться из числа заполнивших заявку по итогам районной и школьной олимпиад, также будет проведен дополнительный заочный отборочный тур 21 мая. Подробная информация есть на сайте олимпиады, а также информация будет разослана после заполнения заявок.</p>
        
        <p>На этой олимпиаде я (слегка) участвую в организации , поэтому я не буду вам писать про нее столь подробно, как про другие олимпиады. Но изучите сайт олимпиады, посмотрите задания прошлых лет, чтобы понимать, чего ожидать. И прочитайте и применяйте те же рекомендации, которые я пишу по другим олимпиадам.</p>
        </div>
    """, {id: "nnoi_about"})

work_with_site = () ->
    page("\nРабота с сайтом, отправка решений и просмотр моих комментариев", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Работа с сайтом</h2>
        <h3>Теоретические материалы</h3>
        <p>По многим темам на сайте представлен некоторый теоретический материал. Прежде чем приступать к решению задач, прочитайте соответствующую теорию.
        Например, зайдите на уровень 1А (внутри уровня 1), там есть раздел "Арифметические операции", и в этом разделе две ссылки — "Начало работы c питоном и Wing IDE" и "Задачи на арифметические операции". Вот "Начало работы c питоном и Wing IDE" — это соответствующая теория (в данном случае самые основы работы на питоне, включая базовые арифметические операции). Прочитайте эту теорию, прежде чем решать соответствующие задачи. (Конечно, если вы основы своего языка программирования знаете, то нет смысла читать самую базовую теорию, но тогда вы и начинаете, наверное, со следующих тем).</p>
        <h3>Задачи</h3>
        <p>Основное, что вы будете делать на наших занятиях — это решать задачи. Большинство задач будут требовать написания программы, которая считывает (с клавиатуры или из файла) некоторые данные, по ним вычисляет новые данные, и результат выводит на экран или сохраняет в файл.</p>
        <p>Написанную вами программу вы можете (и должны) отправить на проверку. Этот сайт предоставляет возможность автоматической проверки ваших программ — вы сразу (в течение максимум одной-двух минут) получаете результат проверки: работает ваша программа корректно или нет. Кроме того, я буду видеть все ваши попытки, которые вы отправляете на сайт, и смогу их комментировать, писать замечания и т.д., а вы сможете эти комментарии видеть и по ним улучшать свои программы.</p>
        
        <h3>Пример задачи</h3>
        <p>Зайдите на уровень 1А (внутри уровня 1). Там есть ссылка "Задачи на арифметические операции". Зайдите туда. Вы увидите список задач: "Дележ яблок - 1", "Дележ яблок - 2", и т.д., до "Разность времен". Это и есть набор задач (коротко говорят "контест"), которые вам предлагается прорешать для закрепления знаний по первой теме курса — арифметическим операциям. 
        </p><p>Все названия задач — ссылки, по ним открывается собственно задача. Откройте задачу "Дележ яблок - 1". Вы видите ее условие: "N школьников делят K яблок поровну, неделящийся остаток остается в корзинке. Сколько яблок достанется каждому школьнику? Программа получает на вход числа N и K и должна вывести искомое количество яблок." Ниже идет пример: при вводе данных "3 14" программа должна вывести "4".</p>
        <p>Условие задачи четко описывает, что должна делать ваша программа: для любых значений N и K она должна вычислить и вывести ответ на задачу. В более серьезных задачах в условии всегда указываются ограничения на допустимые N и K, но в задачах для начинающих на этом сайте считается, что N и K "разумные" (в частности, помещаются в тип данных int в C/C++); в "разумность" в данном случае входит и то, что оба числа положительны.</p>
        <p>Пример нужен только для проверки того, что вы верно поняли условие, формат входных данных, и смогли проверить программу на простейшем тесте. Тем не менее, ваша программа должна работать не только на тесте из примера, но и на других допустимых тестах.</p>
        
        <h3>Написание решения</h3>
        Данная задача решается достаточно легко. Нам надо, конечно, завести две переменные, N и K, считать их с клавиатуры, и вывести неполное частное от деления K на N (обратите внимание, именно K на N, а не N на K!). Программа будет выглядеть так:
        <pre>n = int(input())
        k = int(input())
        print(k // n)</pre>
        
        Обратите внимание на следующие особенности (в вашем учебнике может быть написано не так — надо делать так, как написано тут, а не в учебнике. Возможно, чего-то из описанного здесь вы не поймете — тогда просто пропускайте этот пункт).
        <ul>
        <li>Мы не выводим никаких "приглашений" типа "введите N". В условии задачи четко написано, что именно наша программа должна выводить на экран, и там ничего не сказано про то, что надо выводить приглашения. Поэтому любой лишний вывод на экран будет рассмотрен как нарушение формата вывода.</li>
        <li>Нет никаких "проверок на дурака", например, нет проверки "а вдруг N=0?", или "а вдруг ввели не число?". Аналогично предыдущему, это в наших задачах не требуется. В более серьезных задачах в условии будут стоять ограничения на допустимые значения N, и никто не будет тестировать вашу программу с N, не удовлетворяющим этим ограничениям. В этой задаче считается, что N&gt;0 всегда.</li>
        <li>Мы не ставим в конце программы пустой <code>input()</code> (или <code>getch();</code> в c++) или другую задержку работы. Это тоже не требуется; информация, выведенная на экран, все равно сохраняется и ее все равно можно посмотреть.</li>
        <li>Мы посчитали и сразу вывели ответ, не сохраняя его в промежуточную переменную. Можно было сохранить:
        <pre>ans = k / n
        print(ans)
        </pre>
        В этой простой программе проще вывести сразу, но если выражение будет сложнее, то можно и сохранить.</li>
        </ul>
        <p>Сохраните эту программу в какой-нибудь файл. Запомните как имя файла, так и ту директорию (папку), куда вы сохранили файл.</p>
        
        <p>Теперь протестируйте программу. Запустите ее и повводите разные тесты.</p>
        
        <p>Введите для начала тест из примера: "3 14" и убедитесь, что она вывела 4.</p>
        
        <p>В этой задаче на каждый тест ответ однозначно определен (например, на пример из условия ответ может быть только 4). Бывают задачи, когда на каждый тест может быть несколько правильных вариантов ответа, в таких задачах в условии обычно написано "если есть несколько решений, выведите любое" или присутствует какая-нибудь подобная фраза. В таком случае ваша программа не обязана выдавать ответ, точно совпадающий с тем, что указан в примере — достаточно, чтобы он был одним из правильных. Аналогично, в дальнейшем, при тестировании вашей программы на сайте (см. ниже) по каждому тесту будет допускаться любой из правильный ответов.</p>
        
        <p>Придумайте еще несколько примеров к этой задаче. Постарайтесь, чтобы они были разнообразными: чтобы были разные N, K, и разные ответы. Например, введите "5 25" и проверьте, что ответ 5. Придумайте сами еще несколько примеров. Важно: прежде чем вводить каждый пример в программу, сначала в уме вычислите ответ, и только потом запустите программу и проверьте, что она вывела именно то, что вы и ожидали. Старайтесь всегда знать ответ на свой пример ДО запуска программы.</p>
        
        <p>Если программа написана правильно, то она правильно отработает на ваших тестах. Тогда ее можно сдавать на проверку на сайт (говорят "сдать/послать на проверку в тестирующую систему" или просто "сдать в систему").</p>
        
        <h3>Отправка на проверку</h3>
        <p>Вернитесь на страницу с условием задачи. Ниже условия есть раздел "Отправить решение" (он есть только если вы зарегистрированы на сайте и залогинены). Нажмите кнопку "Выбор файла" и выберите файл с вашим решением. Убедитесь, что вы выбираете файл .pas/.py (с исходным кодом), а не .o или .exe (уже скомпилированную программу)! Убедитесь, что в выпадающем списке рядом выбран правильный язык (в частности, если вы пишете на PascalABC, то надо его выбрать вручную), и нажмите кнопку "Отправить".</p>
        
        <p>Ваша программа отсылается на сервер, который ее компилирует и проверяет путем запуска на нескольких тестовых примерах. Эти тестовые примеры вам неизвестны, но в каждой конкретной задаче всегда одинаковы (т.е. если вы будете посылать несколько раз, то каждый раз тестовые примеры будут одни и те же). В данном случае тестирующая система запустит вашу программу несколько раз, каждый раз сымитирует ввод с клавиатуры значений N и K из очередного тестового примера, и проверит, что ваша программа выводит правильный ответ.</p>
        
        <p>Под формой для отправки находится таблица, перечисляющая все ваши попытки (также говорят "посылки") по этой задаче. Изначально там, конечно, никакой таблицу нет. После того, как вы отправили ваше решение, оно появится в этой таблице (через некоторое время — примерно через минуту). В колонке "Статус" отображается результат тестирования вашей программы. Сразу после того, как вы отправили программу, вы можете увидеть там "Компилирование" или "Тестирование", что обозначает, что ваша задача тестируется. Таблица обновляется автоматически, дождитесь, пока в колонке "Статус" не появится окончательный результат проверки.</p>
        
        <p>Основные результаты проверки, которые вы можете увидеть:
        </p><ul>
        <li>OK — ваша программа правильно прошла все тесты, ура!</li>
        <li>Ошибка компиляции — ваша программа не скомпилировалась</li>
        <li>Частичное решение — ваша программа прошла не все тесты (может быть, даже не прошла ни одного). Значит, ваша программа работает не совсем верно (или совсем неверно), постарайтесь найти ошибки.</li>
        <li>Бывают еще статусы "Зачтено" и "Проигнорировано", но они не ставятся автоматически, поэтому про них ниже.</li>
        </ul>
        
        <p>На кажую строчку в таблице посылок можно нажать, после чего откроется окошко с подробной информацией о посылке. Во-первых, там будет полный код вашей программы, поэтому вы всегда сможете проверить, отправили ли вы именно то, что хотели; если вы решали задачи из школы, то придя домой, вы сможете посмотреть коды всех ваших программ, и т.д.</p>
        
        <p>Во-вторых, в открывшемся окне есть закладка "Протокол", где отображается протокол тестирования вашей программы. Если ваша программа не скомпилировалась (статус "Ошибка компиляции"), то там будет протокол компиляции: будут указаны ошибки, найденные в программе. Если же ваша программа скомпилировалась, то там будет протокол тестирования: по каждому тесту будет приведена информация о том, прошел этот тест (OK) или нет. В задаче "Дележ яблок - 1" всего 6 тестов, поэтому в таблице должно быть 6 строк. Если ваша посылка получила статус "ОК", то все 6 строк будут ОК; иначе какие-то тесты будут иметь другой статус (из названия статуса обычно понятно, что это значит).</p>
        
        <p>Таким образом, вы можете видеть, какие (по номерам) тесты у вас пройдены, а какие нет. Но вы не можете узнать, какой именно это тест (в нашей задаче — какие именно там N и K). Это сделано для того, чтобы вы учились сами тестировать свое решение и сами находить примеры, на которых оно не работает, а не рассматривали тестирующую систему как волшебный ящик, выдающий вам примеры, на которых ваша программа не работает. Поэтому если ваша программа не работает, то ищите сами примеры, на которых она ошибается. Если вы не можете их найти, то напишите мне, попробуем разобраться вместе. В крайнем случае у меня есть доступ ко всем тестовым данным, поэтому если я не смогу найти ошибку просто посмотрев код вашей программы, я смогу посмотреть, что там за тест, на котором ваша программа не работает.</p>
        
        <p>Но вообще, старайтесь проверять задачу до того, как ее отправлять в систему (и этому мы будем отдельно учиться). Рассматривайте неудачные попытки как конкретную неудачу, и старайтесь делать как можно меньше неудачных попыток. Вообще, на многих олимпиадах у вас будет только одна возможность сдать задачу, и если она не пройдет какие-то тесты, то возможности исправиться у вас уже не будет!</p>
        
        <h3>Засчитывание и игнорирование решений, комментарии к решению</h3>
        <p>Я буду просматривать все ваши решения: при наличии времени — все вообще посылки, в том числе и неуспешные, если же у меня времени будет мало, а посылок много — то только посылки со статусом ОК.</p>
        
        <p>В успешных посылках я буду просматривать ваш код на предмет следующего:
        </p><ul>
        <li>Во-первых, я буду смотреть, нет ли в коде каких-то ошибок, которые смогли миновать тесты тестирующей системы. Бывает так, что в коде какая-нибудь совсем неожиданная ошибка, и тестирующая система ее может пропустить (хотя тесты в тестирующей системе обычно подготовлены хорошо, и как правило все ошибки в коде проявляются при тестировании) — я буду смотреть, нет ли у вас таких ошибок.</li>
        <li>Также я буду смотреть, нет ли у меня каких-либо замечаний по коду, пусть и не являющихся ошибками, но являющихся общими пожеланиями. Например, может быть, что-то можно сделать проще, или что-то надо сделать по-другому, и т.д.</li>
        </ul>
        <p>Если к вашей программе у меня будут какие-либо замечания или комментарии, я их напишу, и вы сможете их увидеть. Во-первых, они появятся на сайте в правой колонке в разделе "Комментарии"; во-вторых, в каждой посылке, в окошке, открываемом по ссылке "подробнее", есть специальная закладка "комментарии". Соответственно, как только я прокомментирую вашу посылку, вы увидите комментарий. Обычно я стараюсь просматривать все посылки в течение суток, хотя иногда бывают и бОльшие задержки, до нескольких дней.</p>
        
        <p>Помимо собственно написания комментария, я по каждой вашей посылке принимаю решение — либо я принимаю это решение (пусть и с небольшими замечаниями), либо я потребую от вас это решение переписать с учетом моих замечаний. В первом случае я меняю статус посылки на "Зачтено" (т.е. вы будете видеть именно "Зачтено" вместо "ОК" в таблице с вашими посылками), во втором случае я меняю статус на "Проигнорировано". Соответственно, в первом случае просто примите к сведению замечания, которые я написал (а бывает так, что я и никаких замечаний не пишу), хотя можете и переписать решение, если хотите. Во втором случае обязательно перепишите решение с учетом этих замечаний.</p>
        <p>(<a href="https://blog.algoprog.ru/why-ignore/">Подробнее про то, за что я игнорирую решения</a>.)</p>
        
        <p>В сводной таблице решения "ОК" (т.е. которые я еще не посмотрел) отображаются с желтым фоном, решения "Зачтено" (т.е. которые я принял) — с зеленым фоном, проигнорированные решения не учитываются в общем количестве решенных вами задач, просто соответствующая задача в сводной таблице отображаются с синим фоном.</p>
        
        <p>Я буду стараться также писать комментарии по вашим неуспешным посылкам — указывать на ошибку или советовать, где ее поискать, и т.п. Я, конечно, не всегда буду писать их сразу как увижу вашу попытку, и не всегда буду полностью сообщать о найденной ошибке — ведь обычно вам полезно будет все-таки найти ошибку более-менее самостоятельно, я постараюсь вам давать наводящие советы (но, конечно, это зависит от ошибки). В общем, если вы пытались сделать задачу, но она не проходит тесты, то возможно в течение суток я вам напишу совет в комментарии к вашей посылке.</p>
        
        <p>Иногда я могу не успевать просмотреть все ваши неуспешные посылки, или не пишу комментарий по каким-то еще причинам. В таком случае, если вы хотите получить комментарий по какой-нибудь из них, просто напишите мне.</p>
        
        <h3>Хорошие решения</h3>
        <p>После того, как я засчитываю вам решение (ставлю статус "Зачтено"), у вас появляется доступ к "хорошим решения" по соответствующей задаче — на странице задачи, над формой для отправки решения, появляется ссылка на "хорошие решения".</p>
        
        <p>"Хорошие решения" — это несколько (до 5 штук) решений, которые сдавали другие ученики курса, и которые, на мой взгляд, написаны достаточно хорошо и могут считаться образцом решения этой задачи. Смотрите их, особенно по тем задачам, где я вам зачел решение с какими-либо комментариями (но вообще полезно смотреть "хорошие решения" и по всем зачтенным задачам вообще). Сравните "хорошие решения" с вашим решением, возможно, вы увидите, что что-то можно сделать проще, или вообще найдете другие полезные идеи.</p>
        
        <p>Я стараюсь в "хороших решениях" по возможности поддерживать баланс разных языков (т.е. как правило среди "хороших решений" есть решения на разных языках). Но смотрите и решения на вашем языке, и на других языках, даже которых вы не знаете — как правило, понять алгоритм можно даже на языках, которых вы вообще не знаете. С другой стороны, для вашего языка в "хороших решениях" вы можете найти и какие-нибудь интересные чисто языковые тонкости и приёмы.</p>
        
        <p>Кроме того, нередко в "хороших решениях" я показываю разные подходы к решению задачи, нередко там встречаются вообще разные алгоритмы. Если вы видите, что "хорошее решение" сильно отличается от вашего, полезно разобраться, как оно вообще работает.</p>
        
        <p>При этом понимайте, что на самом деле по многим задачам на сайте сданы уже сотни решений, и на самом деле "хороших" из них десятки, если не больше. Вы видите максимум пять из них, просто потому, что смотреть десятки более-менее одинаковых решений смысла нет. Вы увидите какие-то пять из них, которым повезло, что я их отметил как "хорошие", но это "везение" часто определяется случайностью, ну и указанными выше принципами про разнообразие языков и подходов. То есть вы видите не пять самых лучших решений, а пять случайных из числа достаточно хороших.</p>
        
        <p>Поэтому не надо считать, что если ваше личное решение не попало в "хорошие", то оно хуже "хороших". Оно может быть столь же хорошо, или даже чем-то лучше "хороших", просто ему не повезло. Если вы видите, что "хорошие" решения написаны столь же чисто и понятно, как ваше — значит, ваше тоже могло бы быть "хорошим". И наоборот, если ваше решение попало в "хорошие", это не обозначает, что оно намного лучше всех остальных :) По той же причине авторы "хороших решений" не подписаны.</p>
        
        <p>С другой стороны, если вы посмотрели "хорошие решения", и считаете, что ваше решение заметно лучше всех "хороших", напишите мне, может быть, я и ваше решение добавлю в "хорошие". (Хотя обычно я назначаю решение "хорошим" одновременно с тем, как я его засчитываю, поэтому если ваше решение действительно заметно лучше других хороших, как правило, я его сделаю "хорошим" еще до того, как вы сможете посмотреть "хорошие решения" :) .)</p>
        
        <h3>Сводная таблица</h3>
        <p>Все ваши посылки по нашим задачам отображаются в сводных таблицах, ссылки на которые есть в меню сайта. А именно, каждая клетка в основной части этой таблицы указывает статистику посылок от конкретного школьника по конкретной задаче. Если в клетке стоит знак "+", значит, задача сдана успешно ("ОК" или "Зачтено"), если "-" — значит, человек пытался сдавать задачу, но прошел не все тесты. Число после значка (если оно есть) указывает количество неуспешных попыток (если они есть). Например:
        </p><ul>
        <li>Пустая клетка обозначает, что задача не сдавалась вообще;</li>
        <li>"+" обозначает, что задача сдана с первой попытки;</li>
        <li>обозначения "-" не бывает;</li>
        <li>"+2" обозначает, что задача сдана с третьей попытки (две неуспешные попытки и потом успешная);</li>
        <li>"-2" обозначает, что по задаче были только две неуспешные попытки и всё.</li>
        </ul><p></p>
        
        <p>Фон ячейки обозначает статус задачи относительно вердиктов "Зачтено" и "Проигнорировано":
        </p><ul>
        <li>Желтый фон — статус "ОК", т.е. я еще не смотрел эту задачу;</li>
        <li>Зеленый фон — статус "Зачтено";</li>
        <li>Синий фон — статус "Проигнорировано", при этом сама проигнорированная попытка считается неуспешной.</li>
        </ul><p></p>
        
        <p>В последних двух колонках таблицы указывается общее количество решенных задач и общее количество неуспешных ("штрафных") попыток (учитываются только те задачи, по которым в итоге была получена правильная программа, проигнорированные попытки не учитываются). Таблица отсортирована по общему количеству решенных задач, а при равном числе решенных задач — по количеству штрафных попыток.</p>
        
        <p>Еще у таблицы есть следующая особенность: в ней появляются только школьники, которые удовлетворяют сразу двум требованиям: во-первых, я их должен активировать их учетную запись, во-вторых, у школьника должна быть хотя бы одна попытка сдачи задачи. Поэтому если вы еще ничего не пытались сдавать, не удивляйтесь, что вас нет в таблице. Если же вы уже пытались что-то сдавать, а в таблице вас нет, то напишите мне — возможно, я забыл вас активировать.</p>
        
        <p>Аналогично, наборы задач (контесты) появляются в сводной таблице только когда хотя бы кто-нибудь отправит какое-нибудь решение по какой-нибудь задаче этого контеста.</p>
        
        <h3>Терминология</h3>
        Выше я уже ввел некоторую специфическую терминологию, которая используется в олимпиадном программировании, на всякий случай повторю ее тут:
        <ul>
        <li>Контест — любой набор задач, каким-то образом сгруппированный и выделенный от остальных. В пределах контеста задачи обычно занумерованы (1, 2, 3, ... или A, B, C, ... и т.п.) Это может быть отдельный тур олимпиады, или набор задач к какому-нибудь занятию или на какую-нибудь тему, и т.д. В рамках наших занятий "контестом" мы называем набор задач, доступных по каждой отдельной ссылке со странички соответствующего уровня. Например, "Задачи на арифметические операции" — это отдельный контест.</li>
        <li>Посылка (синонимы: попытка, сабмит) — отдельная ваша попытка сдать задачу в тестирующую систему; также программа, которую вы сдали в этой попытке.</li>
        <li>Штрафная попытка (обычно в контексте сводного рейтинга) — попытка, которая не прошла все тесты.</li>
        <li>Тест — это отдельный тестовый пример, подготовленный авторами задачи, чтобы на нем проверять ваши программы. Обычно по каждой задаче автор задачи подготавливает от 5 до 60 тестов, и программы, которые вы сдаете на проверку, проверяются по очереди на всех этих тестах. Чтобы попытка считалась успешной, надо, чтобы программа прошла все тесты, т.е. на все тесты дала правильный ответ. (На других олимпиадах могут быть другие правила.)</li>
        </ul></div>
    """)

module20927_7 = () ->
    page("FAQ для студентов и старше", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><div style="text-align:center;"><font size="+2">Занятия алгоритмическим программированием для студентов, выпускников вузов и вообще всех желающих</font></div>
        
        <h3>Что это за курс?</h3>
        <p>Это курс по алгоритмическому программированию (алгоритмы, структуры данных и т.д.)</p>
        
        <p>Он в первую очередь рассчитан на школьников и в качестве подготовки к школьным олимпиадами (и многие материалы в курсе написаны именно как для школьников), но также в курсе могут заочно заниматься (и реально занимаются) вообще все желающие: студенты, выпускники вузов и т.д. Занятия для нижегородских школьников бесплатные, для всех остальных — платные.</p>
        
        <p>Эта страничка — она как раз для студентов, выпускников и т.д., а не для школьников. Для школьников есть <a href="/material/module-20927_5" onclick="window.goto('/material/module-20927_5')();return false;">отдельная страничка</a>.</p>
        
        <h3>Чему тут учат?</h3>
        <p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science.</p>
        
        <h3>Чему тут НЕ учат?</h3>
        <p>Мы не занимаемся "техническими" вопросами:</p>
        <ul>
        <li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>
        <li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>
        <li>Использованием различных фреймворков, библиотек и т.д.</li>
        </ul>
        <p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>
        
        <h3>Вы действительно будете учить?</h3>
        <p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты в разделе "О курсе") и задать любой вопрос.</p>
        
        <h3>Какой язык программирования?</h3>
        <p>Вообще говоря, какой хотите, из тех, что позволяют писать консольные приложения и поддерживаются этим сайтом. Это C++, Java, Python, C#, PHP, Ruby, Perl, Pascal, Basic, даже 1С. </p>
        
        <p>При этом, если вы еще не знаете никакого языка программирования, то я рекомендую Python. На страничке курса есть материалы для начинающих по питону. Если вы знаете какой-то из перечисленных в предыдущем абзаце языков, то можете использовать его; но вообще все продвинутые темы (начиная с уровня 2) не зависят от языка.</p>
        
        <p>Лично я лучше всего знаю C++, питон и паскаль; по этим языкам я смогу вам достаточно подробно помогать. По другим языкам я не смогу вам подсказывать по различным тонкостям языка, хотя, как показывает опыт, для алгоритмов это не очень существенно.</p>
        
        <h3>А какие изначальные знания требуются?</h3>
        <p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. каждый участник курса занимается в своем ритме и режиме), поэтому я ожидаю здесь людей с широким спектром начальных знаний: от студентов младших курсов, только начинающих программировать, до уже профессиональных программистов, желающих улучшить свои знания в области алгоритмов.</p>
        
        <h3>Что надо сделать, чтобы начать заниматься?</h3>
        <ul>
        <li><a href="/register" onclick="window.goto('/register')();return false;">Зарегистрируйтесь на сайте</a> (для этого вас попросят еще зарегистрироваться на сайте informatics.msk.ru). При регистрации укажите свое настоящее имя и правильный населенный пункт, чтобы я вас мог отличить среди других пользователей сайта.</li>
        <li>Напишите мне любым из указанных в <a href="/material/about" onclick="window.goto('/material/about')();return false;">разделе "О курсе"</a> способов. В письме укажите, как вас зовут, где вы учитесь/работаете. Кроме того, напишите вкратце, какой ваш опыт в программировании, или вы будете заниматься "с нуля".</li>
        <li>Прочитайте, или хотя бы просмотрите, все тексты в разделе "О курсе".</li>
        <li>Дождитесь ответа и дальнейших инструкций от меня.
        </li>
        </ul>
        <p></p>
        
        <h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>
        <p>К курсу можно присоединится в любое время. Все равно занимающиеся имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>
        <p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д.</p>
        
        <h3>Занятия только заочные?</h3>
        <p>Да, очных занятий для не-школьников нет. А если бы и были, то стоили бы намного дороже.</p>
        
        <h3>А кто вообще вы такой?</h3>
        <p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>
        
        <p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>
        
        <p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимали мои команды; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>
        
        <p>Вы всегда можете связаться со мной, контактные данные указаны в разделе "О курсе".</p>
        
        <h3>А что за сайт informatics.msk.ru?</h3>
        <p>Informatics.msk.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>
        
        <p>Мой курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>
    """)

module20927_1 = () ->
    epigraph("Надо думать головой!", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Надо думать головой!</h2>
        <p>Девиз нашего курса — «Надо думать головой!»</p>
        
        <p>Это обозначает, что все время при работе на спецкурсе вам надо думать. Вам нужно думать над тем, как решать те или иные задачи, как сделать много что еще. У вас не будет универсальных рецептов, которые позволят решить все задачи — наоборот, самые лучшие, самые интересные задачи — те, где от вас требуется что-то придумать.</p>
        
        <p>Кроме того, к любой получаемой информации, ко всему, что написано в учебниках, ко всему, что я вам говорю, что написано на страничку курса, относитесь всегда критически. Думайте, пытайтесь понять, почему это написано, почему вам советуют делать так, а не иначе. В учебниках, в том, что вам говорят другие люди, и тем более в моих материалах и советах легко могут быть ошибки, опечатки, наконец, вы, возможно, найдете более простые способы добиться того же — поэтому никогда не принимайте на веру то, что вы где-нибудь прочитали, всегда обдумывайте и перерабатывайте полученную информацию. Может так оказаться, что в одном месте вы прочитаете одну информацию, а в другом месте — диаметрально противоположную — подумайте, проверьте (см. ниже), и поймите, как делать лучше.</p>
        
        <p>Кроме того, не бойтесь экспериментировать! Если вы не уверены, можно ли в питоне/паскале/... написать ту или иную команду, отработает ли она так, как вы ожидаете — попробуйте: напишите и проверьте. Если вы точно не помните, как пишется какая-нибудь команда — попробуйте перебрать варианты, пока не получится. Если вы в разных местах прочитали совсем разную информацию о том, как что-то надо сделать — возьмите и проверьте, какой способ работает! Не бойтесь пробовать, не бойтесь экспериментировать — так вы научитесь намного большему, чем если просто будете строго следовать тому, что написано в каких-либо учебниках, что вам кто-то сказал.</p></div>
    """)

module20927_35 = () ->
    page("\nО лицензии на материалы сайта", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>О лицензии на материалы этого сайта</h2>
        <h3>Исходный код сайта</h3>
        Исходный код собственно сайта algoprog.ru написан мною (Петром Калининым) и распространяется по лицензии <a href="https://www.gnu.org/licenses/agpl">GNU Affero General Public License</a>. Скачать исходный код можно с сайта <a href="https://github.com/petr-kalinin/algoprog">github.com/petr-kalinin/algoprog</a>.
        
        <h3>Теоретические материалы</h3>
        <p>На этом сайте есть различные теоретические материалы с разной степенью понятности с точки зрения лицензии.</p>
        <p>Материалы, в которых лицензия указана явно, распространяются по указанной в них лицензии.</p>
        <p>Материалы, размещенные на других сайтах, на которые с сайта algoprog.ru проставлена только ссылка, распространяются по лицензии, определяемой указанным сайтом.</p>
        <p>Материалы, в которых лицензия явно не указана, но автором которых являюсь я (это большинство материалов, размещенных непосредственно на сайте algoprog.ru), распространяются по лицензии <a href="https://creativecommons.org/licenses/by-sa/4.0/">Creative Commons Attribution-ShareAlike (CC BY-SA) 4.0</a>.</p>
        <p>Если вы не уверены, какая лицензия распространяется на конкретный материал, спросите меня.</p>
        
        <h3>Условия задач</h3>
        <p>Условия задач взяты с сайта <a href="https://informatics.msk.ru">informatics.msk.ru</a>, где они в большинстве случаев собраны с различных олимпиад. Условия лицензии на них не ясны.</p>
        </div>
    """, {id: "license"})

module20927_27 = () ->
    page("\nРекомендуемая литература", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Рекомендуемая литература</h2>
        <h3>Для начинающих — для изучения языка</h3>
        <h4>Питон</h4>
        <p>По питону, как ни странно, книжек не очень много, и вот именно учебных, направленных на школьников, я пока не видел (но я еще поищу). Поэтому, если хотите, можете купить какую-нибудь книжку, которая вам понравится.</p>
        
        <p>Но зато по питону есть очень много ресурсов в интернете; если вы будете задавать поиск по конкретным вопросам, то для питона вы получите адекватный ответ намного более вероятно, чем для паскаля. Поэтому я далеко не уверен, что вам надо покупать бумажную книжку по питону, лучше используйте интернет.</p>
        
        <p>В частности, очень рекомендую вам сайт <a href="https://pythontutor.ru/">https://pythontutor.ru/</a>. Там достаточно адекватная теория, и очень удобный визуальный отладчик питона.</p>
        <h4>Паскаль</h4>
        <p>Здесь приведен список книг, которые можно использовать для изучения языка программирования Pascal. При этом имейте в виду, что большинство из них описывает среду Turbo Pascal (или Borland Pascal, что то же самое); она является весьма устаревшей и в некоторых деталях отличается от среды Free Pascal, которую мы изучаем. Кроме того, во многих книжках есть разного рода устаревшие подходы к написанию программ. </p>
        <p>Большинство из этих книг можно скачать из интернета, или купить; в частности, ряд книг я видел недавно в магазине Дирижабль на Б. Покровской.</p>
        <p>В принципе, можно учиться и по другим книгам, не указанным здесь. Главное — чтобы это был именно учебник по основам языка программирования Pascal (Delphi скорее всего не подойдет). Прежде чем выбирать книгу, посмотрите, как в ней излагается простейший материал. Мне не понравились книги, которые сначала определяют "алфавит языка" и прочие заумные понятия, и только потом приступают к изучению языка; я считаю, что лучше начать изучение языка на простых примерах и только потом переходить к общим вещам. Если найдете книгу, которая вам понравится, скажите мне, чтобы я ее добавил сюда.</p>
        <p>При этом я не читал подробно ни одну из этих книг, я только поверхностно их просмотрел. Поэтому если у вас будут какие-либо комментарии по ним, то тоже скажите мне.</p>
        <ul>
        <li><b>Ушаков Д. М., Юркова Т. А. Паскаль для школьников</b> — мне очень понравилась; эта книга, пожалуй, ближе всего к тому, как я хочу строить обучение языку.</li>
        <li><b>Деревенец О. В. Песни о Паскале </b> (свободна распространяема с сайта <a href="https://oleg-derevenets.narod.ru/">https://oleg-derevenets.narod.ru/</a>) — очень необычный стиль изложения, возможно, понравится школьникам. Очень подробно и хорошо рассказывают про среду Free Pascal. Правда, порядок изучения тем весьма отличается от запланированного мной, но тем не менее, книга весьма неплохая.</li>
        <li><b>Кашаев С. М., Шерстнева Л. В. Паскаль для школьников. Подготовка к ЕГЭ</b> — довольно неплохой подробный учебник.</li>
        <li><b>Андреева Е. В. Программирование — это так просто, программирование — это так сложно</b>. Елена Владимировна Андреева (в отличие от авторов всех остальных учебников) — очень известный в олимпиадной информатике учитель, подготовившая многих сильных олимпиадников, многократный член жюри заключительного этапа Всероссийской олимпиады школьников. Эта книга довольно популярна в обучении олимпиадному программированию, вы можете встретить ссылки на нее во многих разных местах. Тем не менее, книга написана с точки зрения «формального» подхода, когда внимание уделяется в первую очередь полноте и строгости изложения, а не понятности и количеству примеров. Поэтому мне кажется, что она подходит скорее как справочник, или как дополнение к материалу, который я рассказываю на занятиях.
        </li><li><b>Культин Н. Б. Turbo pascal в задачах и примерах</b> — фактически только примеры, без теории.</li>
        <li><b>Павловская Т. А. Паскаль. Программирование на языке высокого уровня. Практикум</b> — не очень много теории, довольно много примеров.</li>
        <li><b>Рапаков Г. Г., Ржеуцкая С. Ю. Turbo Pascal для студентов и школьников</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>
        <li><b>Семакин И. Г., Шестаков А. П. Основы программирования</b> — более-менее обычный учебник, ничего особенного, на самом деле мне даже не очень понравился.</li>
        </ul>
        
        <p>Кроме того, следующие книги я видел, но они мне весьма не понравились. Я не рекомендую вам их использовать, хотя, возможно, кому-то они покажутся проще. Если сочтете, что какая-то книга тут находится незаслуженно, тоже напишите мне — на самом деле, я смотрел весьма поверхностно.</p>
        <ul>
        <li><b>Кетков Ю. Л., Кетков А. Ю. Свободное программное обеспечение. FREE PASCAL для студентов и школьников</b></li>
        <li><b>Фаронов В. В. Turbo Pascal 7.0. Учебный курс</b></li>
        </ul>
        
        <p>Наконец, непосредственно на этом сайте есть много теоретического материала — надо зайти на главную страницу сайта и далее следовать по ссылкам на разные темы или на разные курсы. К сожалению, качество материала здесь очень и очень сильно варьируется, от довольно плохого до довольно хорошего.</p>
        
        <h3>Для продолжающих — для изучения алгоритмов</h3>
        <p>К сожалению, нет хороших полноценных учебников по алгоритмам. Те книги, которые я указываю ниже, считаются довольно хорошими книгами, но покрывают материалы нашего курса далеко не полностью и/или зачастую содержат много дополнительной или не всегда нужной информации. Я стараюсь на страничке курса давать ссылки на полезные материалы по разным темам; также я всегда готов вам рассказывать нужные темы на занятиях. Соответственно, я предполагаю, что изучать нужные темы вы будете именно по материалам, на которые есть ссылки со странички курса, и/или по моим рассказам, а литература, указанная ниже — скорее вспомогательные книги.</p>
        
        <ul>
        <li><b>Т. Кормен, Ч. Лейзерсон, Р. Ривест «Алгоритмы. Построение и анализ»</b> (во втором издании к авторам присоединился еще К. Штайн). Самая популярная книга по алгоритмам, книга, которую должен знать каждый уважающий себя крутой программист. Довольно хорошая, но довольно продвинутая (вряд ли ее стоит читать школьникам ниже 3-4 уровня), и местами чересчур теоретизирована (рассчитана скорее на студентов, а не на школьников).</li>
        <li><b>А. Шень. Программирование: теоремы и задачи</b> (свободно доступна с сайта <a href="https://www.mccme.ru/free-books/">https://www.mccme.ru/free-books/</a>). Тоже довольно известная книга, и написанная в расчете на в том числе школьников, хотя на мой взгляд дает местами лишний или чересчур глубокий материала, а часть материала, наоборот, можно было бы изложить более детально. Но все равно весьма рекомендую.</li>
        <li><b>Д. Кнут. Искусство программирования.</b>. (В ранних изданиях русского перевода — Искусство программирования для ЭВМ.) Классическая и очень-очень известная монография, но содержит очень много информации, которую тяжело фильтровать на более и менее важную, очень тяжело читается, и чувствуется, что первое издание было почти 50 лет назад (!) (проблема скорее не в устаревании материала, а в устаревании способа подачи, например, примеры даются на ассемблерно-подобном языке, а не на языке высокого уровня или псевдокоде).</li>
        </ul></div>
    """)

raion_olympiad = () ->
    page("Про районную/городскую олимпиаду", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про районную/городскую олимпиаду</h1>
        <p><font color="red">Эта информация касается Нижегородской области. В других регионах могут быть отличия.</font></p>
        
        <p>Районная олимпиада, она же городская в ряде городов области (формально "муниципальный этап Всероссийской олимпиады школьников") пройдет, по текущей информации, <b>14 декабря</b>. Участие в ней принимают те, кто хорошо написал школьную олимпиаду. Критериев прохода со школьной на районную я точно не знаю, и они зависят от района, поэтому уточняйте в школе. Кроме того, в олимпиаде принимают участие призеры и победители районной олимпиады прошлого года, даже если они не участвовали в школьной олимпиаде этого года.</p>
        
        <p>Участники районной олимпиады, хорошо ее написавшие, проходят на областную. Механизм здесь примерно следующий: все районы пишут по одним и тем же задачам. Все результаты сводятся в сводную таблица по всем районам области. В этой таблице проводят границу, и все школьники, набравшие больше определенного количества баллов, проходят на область. Это пороговое количество баллов определяется тем, чтобы на область прошло столько школьников, сколько область может принять; по разным классам порог разный.</p>
        
        <p>Чего стоит ожидать на районной олимпиаде? Примерно того же, что и на школьной (см. <a href="/material/module-16024_3" onclick="window.goto('/material/module-16024_3')();return false;">соответствующий текст</a>), возможно, задачи будут сложнее. На страничке курса давно висит ссылка на <a href="/raion_archive.pdf">архив прошлогодних районных олимпиад</a>, посмотрите задачи там, очень рекомендую над ними подумать. Я не думаю, что будут требоваться какие-то более продвинутые знания, но прочитайте текст про школьную олимпиаду еще раз и учитывайте то, что там написано. На районной олимпиаде более вероятно, чем на школьной, что потребуются алгоритмы уровня 2-3. По опыту прошлых лет, может быть одна реально сложная задача. (Но в ее практически никто не решает.)</p>
        
        <p><b>В прошлые годы я проводил специальное занятие про районную олимпиаду, записи этих занятий есть на страничке «О курсе». Также там есть архив старых олимпиад.</b></p>
        
        <p>Последние шесть лет задачи районной олимпиады составляет другое жюри, поэтому в первую очередь смотрите на задачи последних 6 лет, а не более старые. При этом последние годы год от года уровень и сложность задач очень сильно меняются, поэтому сложно предсказать, что будет в этом году.</p>

        <p>Возможно, в этом году задачи будут сложные или странные; возможно, наоброт, будут достаточно адекватными. В любом случае помните,
        что ваша задача — выступить хорошо относительно других участников районной олимпиады, а не решить всё. Если задачи будут сложными, не пугайтесь: они будут сложными не только для вас, но и для других участников, значит, все выступят не очень хорошо. Постарайтесь просто 
        решить по максимуму что сможете.</p>

        <p>Также имейте в виду (и я про это уже писал в тексте про школьную олимпиаду), что у вас будут оцениваться также и неполные решения.
        Если не можете написать задачу на полный балл, попробуйте написать хоть что-нибудь, что наберет хоть сколько-то баллов.</p>
        
        <p>Обязательно убедитесь заранее (спросите учителей в школе, чтобы они спросили организаторов районной олимпиады), что вам предоставят нужное ПО (нужный Питон, или Паскаль, или c++ с нужной средой и т.д.). Если есть какие-то проблемы, звоните, но это очень хорошо бы сделать заранее.</p>
        
        <p>Последние годы районная олимпиада проходила в системе Яндекс.Контест, скорее всего и в этом году будет так же. Тогда вы сможете в течение тура отправлять решения на проверку в тестирующую систему и узнавать результаты. Скорее всего, по каждой задаче будет выбрано ваше лучшее решение (набирающее больше всего баллов), и именно этот результат и будет вашим результатом по задаче. Я не знаю, будут ли в этом году штрафы за неверные попытки, в прошлые годы не было. </p>
        
        <p>Количество отправок решений на проверку скорее всего будет ограничено, оно будет указано в тестирующей системе. В прошлые годы в качестве примера было приведено ограничение в 100 попыток, что на самом деле очень много и фактически эквивалентно бесконечному количеству попыток (вряд ли кто из вас реально израсходует 100 попыток), но в реальности может оказаться меньше.</p>
        
        <p>Это обозначает, что все будет довольно похоже на то, как вы работаете на сайте и как было на школьной олимпиаде (только, в отличие от сайта, частичные решения тоже оцениваются). Если у вас программа не прошла тесты, вы можете ее пересдать. Поэтому, в частности, если за неудачные попытки нет штрафов, то не обязательно поначалу тщательно тестировать простые задачи — потестируйте немного, отправьте решение на проверку и, если оно набирает полный балл, то забудьте про эту задачу. Вот в противоположном случае тестируйте внимательнее.</p>
        
        <p>Возможно, будут еще какие-то неожиданности и отличия, будьте к ним готовы. По идее вам должны заранее объявить полные правила, хотя по факту это бывает редко. Но можете заранее спросить в школе, нет ли у них данных о том, как будет проводиться олимпиада; я со своей стороны попробую это тоже выяснить.</p>
        
        <p>Важный момент — не полагайтесь на Яндекс.Контест. Будьте готовы в случае чего сдавать решения по старинке в конце тура. В частности, не теряйте свои решения! Если вы отправили решение в Контест, не удаляйте его у себя, и уж тем более не начинайте решать другую задачу в том же файле. Контест может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, вы хотя бы сможете потом что-то поапеллировать. (Вряд ли будут какие-то совсем серьезные проблемы, но лучше быть готовыми ко всякому.)</p>
        </div>
    """, {id: "raion_olympiad"})

module20927_15 = () ->
    page("\nПро систему уровней", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О системе уровней</h1>
        <p>Весь материал в нашем курсе распределен по уровням, от самого простого до очень сложного. Уровни нумеруются последовательными числами (1, 2, 3, ...), в пределах уровня также введены подуровни, нумеруемые буквами (в уровне 1 — подуровни 1А, 1Б, 1В и 1Г, и т.п.)</p>
        
        <p>Большинство уровней имееют следующую структуру: подуровни А и Б содержат новый материал, а подуровни В и Г (последний есть не всегда) — дополнительные задачи повышенной сложности на закрепление этого материала. Иногда в уровнях В и Г могут быть особенно сложные задачи на материал существенно более ранних уровней (например, в уровне 5В может оказаться сложная задача на материал уровня 3). Иногда в уровнях В и Г выделены контесты по отдельным темам, иногда дополнительные задачи в этих уровнях идут в случайном порядке.</p>
        
        <p>Я предполагаю, что вы будете проходить подуровни последовательно, переходя к новому подуровню как правило тогда, когда вы "прошли" предыдущий подуровень. Исключение: если вы прошли какую-то тему в подуровне А или Б, и видите в подуровне В или Г контест продвинутых задач на эту же тему, то можете его порешать.</p>
        
        <p>Требования к "прохождению" каждого подуровня указаны под его заголовком. Как правило, для подуровней А и Б требуется прорешать все задачи, для уровней В и Г требуется прорешать часть (половину или треть) задач. Тем не менее это не обозначает, что оставшиеся задачи уровней В и Г решать не надо. Я рекомендую, если вы прорешали необходимый минимум задач уровней В и Г, переходить на следующий уровень, чтобы побыстрее приступить к изучению новой теории. Но при этом возвращайтесь регулярно к недорешенным задачам предыдущих уровней. Примерно можно оценивать так: когда вы переходите на уровень 4А, у вас должна быть решена половина задач уровня 3В, 3/4 задач уровня 2В и примерно 7/8 задач уровней 1В и 1Г. Аналогично, когда вы переходите на уровень 5А, у вас должна быть решена половина задач уровня 4В, а также 3/4 задач уровня 3В, 7/8 задач уровня 2В и почти все (за редким исключением особенно неприятных задач) задачи уровней 1В и 1Г. Аналогично для других уровней.</p>
        
        <p>Обратите внимание, что в уровнях В и Г задачи далеко не всегда упорядочены по сложности. Поэтому решайте их в том порядке, в каком вам удобнее!</p>
        
        </div>
    """)

koshp = () ->
    page("Про командную олимпиаду", String.raw"""
        <h1>Про командную олимпиаду</h1>
        <p><b>Часть информации относится только к нижегородским школьникам</b>. В других регионах свои отборочные олимпиады, и могут быть свои особенности.</p>
        
        <p>Предварительно 27 октября в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru/">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="https://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад. Также подробные правила я могу рассказать желающим.</p>

        <p>Я рекомендую все желающим, особенно у кого уровень выше 2В, участвовать.
        В Нижнем Новгороде будут проводиться централизованные тренировки, также я, возможно, смогу проводить тренировки для желающих.
        Если вы хотите участвовать, то сообщите мне. В идеале — соберите команду, но если у вас нет команды, то все равно напишите мне.</p>

        <p><b>Регистрация до 15 октября, не опоздайте!</b></p>

        <p>В этом году есть еще <a href="https://t.me/+NABhfKR2NoYyMzc6">чат для участников НКОШП</a>, в частности, там тоже можно поискать себе команду.</p>

        <p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-4В), и будет несколько сложных задач. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — возможно, я вам смогу поставить по ним тренировку).</p>
        
        <p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: в области есть сильные команды, поэтому на ВКОШП пройти достаточно сложно. Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>

        <p>Если вы пройдете на ВКОШП, то надо будет ехать в Санкт-Петербург в декабре.</p>
       </div>
    """, {id: "koshp"})

koshp_old = () ->
    page("Про командную олимпиаду", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про командную олимпиаду</h1>
        <p><b>Это относится только к нижегородским школьникам, а также к школьникам из других регионов, которые поедут на ноябрьскую смену Информатика.Регионы в Сириусе</b>. В других регионах свои отборочные олимпиады, и я не буду собирать команды из школьников других регионов. Тем не менее, если вы не из Нижегородской области, у вас нет команды, и вы хотите поучаствовать вместе с другими школьниками, занимающимися на алгопроге, можете мне написать, я может быть стыкую вас с другими такими желающими (если такие «другие желающие» будут). Но пока за пределами Нижегородской области не настолько много школьников, чтобы это имело смысл. Если вы не из Нижегородской области, но внезапно готовы ездить в Нижний Новгород на тренировки и на собственно командную олимпиаду, то напишите. Если вы едете в Сириус, тоже напишите.</p>
        
        <p>В ноябре (предварительно 14 ноября) в в Нижегородском техническом университете (политехе) состоится <a href="http://www.nnstuicpc.ru/">Командная олимпиада школьников Нижегородской области по программированию</a>, она же — отбор на <a href="https://neerc.ifmo.ru/school/russia-team/index.html">Всероссийскую командную олимпиаду школьников по программированию (ВКОШП)</a>. Участвуют команды из трех человек, подробные правила будут в информационном письме на сайте нижегородской олимпиады и на сайте ВКОШПа, они несколько отличаются от классических школьных олимпиад (пока на сайте нижегородской олимпиады еще ничего нет). Также подробные правила я могу рассказать желающим.</p>

        <p>В это время будет проходить смена Информатика.Регионы в Сириусе, скорее всего в Сириусе можно будет тоже написать отбор, поэтому скорее всего из школьников, едущих в Сириус, я буду составлять отдельные команды. В частности, если вы не-нижегородский школьник, но едете в Сириус, то можете написать мне, возможно, я подберу вам команду. (По слухам, нижегородский отбор будет проходить по задачам всероссийского интернет-отбора, поэтому, во-первых, в Сириусе, скороее всего, проблем его написать не будет, во-вторых, можно будет участвовать не только нижегородским командам.)</p>
        
        <p>Желающие могут участвовать, а именно:</p><p>
        </p><ol>
        <li>Из достаточно сильных школьников (примерно уровень 2В и выше), которые занимаются в моем курсе, я составлю команды. Я сам свяжусь с соответствующими школьниками в ближайшее время, или вы можете написать мне.</li>
        <li>Остальные могут составить команды сами. Сообщите мне на всякий случай, что вы хотите участвовать, возможно, я найду для вас команду, но в общем случае я не готов администрировать ваши команды (подавать заявку и т.п.). Тем не менее, во-первых, если в вашей школе есть много желающих участвовать, то можете подать заявку от школы (договориться с вашим учителем информатики и т.п.); во-вторых, если вы сами соберетесь в какую-нибудь сборную команду, даже из разных школ, то можете подавать заявку полностью самостоятельно. Я считаю, что вам может иметь смысл участвовать, если вы уже уровень 1В или выше, но, конечно, самостоятельно вы вольны подавать заявку как хотите.</li>
        </ol>
        
        <p>Уровень задач на олимпиаде, я думаю, стоит ожидать такой: будет одна-две простых задачи уровня школьной олимпиады (уровня 1Б), будет большая группа задач средней сложности — примерно от уровня районной до уровня областной олимпиады (примерно сложности 1В-4В), и будет несколько сложных задач. При этом, как всегда, не следует думать, что надо решать все задачи: думаю, основная борьба будет на уровне, где решены примерно половина задач. На сайте командной олимпиады вы можете посмотреть примеры задач прошлых лет (правда, если вы хотите участвовать в тренировках — см. ниже — то особенно не вникайте в задачи прошлых лет — возможно, мы как-нибудь напишем по ним тренировку). Для тех, кто понимает: по слухам, в этом году нижегородской отбор будет совмещен с интернет-отбором и проводиться по тем же задачам, т.е. задачи будут немного другого класса и скорее всего посложнее, чем обычно.</p>
        
        <p>Несколько лучших команд с нижегородской олимпиады проходят на Всероссийскую командную олимпиаду школьников по программированию (ВКОШП). Сразу предупреждаю: во-первых, в области есть сильные команды, поэтому самостоятельно собранным командам будет довольно сложно пройти на ВКОШП. Но участвовать имеет смысл и даже без цели прохода на ВКОШП. Во-первых, это интересно и весело, во-вторых, дипломы и (небольшие) призы получат не только те команды, которые пройдут на ВКОШП.</p>

        <p>По воскресеньям скорее всего будут командные тренировки к командной олимпиаде. Тренировки длиннее по времени, чем обычные занятия (4-6 часов), следите за объявлениями на страничке курса. Командам из п. 1 выше я настоятельно рекомендую участвовать (и я напишу в личку); если будут желающие участвовать из самостоятельно-собранных команд, то напишите мне.</p></div>
    """, {id: "koshp"})

module20927_5 = () ->
    page("FAQ для школьников", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h2>Общие вопросы (FAQ) по курсу</h2>
        <h3>Что это за курс?</h3>
        <p>Это курс по алгоритмическому программированию (фактически, по олимпиадным задачам). В первую очередь, он ориентирован на учеников лицея 40 Нижнего Новгорода, а также школьников Нижнего Новгорода и Нижегородской области, у которых в школе нет занятий по алгоритмическому программированию, или которых чем-то не устраивают такие занятия в их школе. Также в курсе могут участвовать все желающие не-нижегородские школьники.</p>
        
        <h3>Что за странный формат? Что за занятия в лицее 40?</h3>
        <p>В этом курсе можно заниматься полностью заочно — по многим темам материалы есть на сайте, и вы всегда можете написать вопрос мне. Кроме того, по материалам этого курса я веду очные занятия в лицее 40 (только для учеников лицея). Также могут быть очные занятия в других местах, которые ведут другие преподаватели. Но при этом у нас нет регулярных лекций по строгому расписанию, все школьники занимаются в своем темпе, поэтому можно ходить и в лицей, и в другие места , можно ходить не каждый раз. Поэтому это получается такой очно-заочный курс.</p>

        <p>Помимо занятий в лицее 40, есть также занятия в других местах, их ведут другие преподаватели, на них могут быть немного другие правила.</p>

        <p>Для не-нижегородских школьников занятия, конечно, чисто заочные. Хотя если вы окажетесь в Нижнем Новгороде и захотите зайти ко мне на занятие — заходите, я буду рад вас видеть. Только предупредите меня заранее.</p>
        
        <h3>Чему тут учат?</h3>
        <p>Основное направление — это алгоритмическое программирование. Начиная с основ программирования, и далее в алгоритмы и структуры данных. Это то, что по-английски называется Computer Science. С существенным уклоном в сторону олимпиадного программирования (в первую очередь по линии Всероссийской олимпиады школьников), тем более что задачи на олимпиадах — это как раз задачи на алгоритмы и структуры данных.</p>
        
        <h3>Чему тут НЕ учат?</h3>
        <p>Мы не будем специально заниматься "техническими" вопросами:</p>
        <ul>
        <li>Созданием пользовательских интерфейсов, кнопочек, окошек и т.д.</li>
        <li>Программированием под конкретные платформы: созданием web-приложений, программированием под Android, iOS и т.п.</li>
        </ul>
        <p>Мы будем изучать алгоритмы, которые лежат в основе многих таких программ (мы не будем обсуждать, как сделать кнопку "сортировать по алфавиту", но будем обсуждать, как реализовать сортировку, когда список объектов для сортировки уже есть).</p>
        <p>Кроме того, мы не будем специально готовиться к ЕГЭ или поступлению в вузы. Тем не менее, задачи части C ЕГЭ по информатике — это фактически довольно простые олимпиадные задачи, поэтому если вы хорошо решаете олимпиадные задачи, то проблем с ЕГЭ у вас быть не должно.</p>
        
        <h3>Вы действительно будете учить?</h3>
        <p>И да, и нет. Формат заочного курса подразумевает, что существенную часть материала вы будете изучать сами. Я буду скорее направлять вас, советуя, где можно посмотреть тот или иной вопрос, на каких задачах отладить навыки, а также буду довольно активно комментировать ваши программы. Кроме того, вы всегда можете со мной связаться (контакты на главной странице курса) и задать любой вопрос.</p>
        
        <h3>Какой язык программирования?</h3>
        <p>Сложный вопрос, точнее вопрос с длинным ответом.</p>
        <p>Если вы только еще начинаете программировать, то я рекомендую использовать Python 3. Теоретические материалы для начинающих я буду подбирать именно по Python.</p>
        <p>Еще один популярный вариант — C++, но я настоятельно не рекомендую его выбирать, если вы только начинаете учиться программировать. Если же вы где-то уже научились неплохо писать на C++ (контрольный вопрос: какой тип данных вы используете для работы со строками и насколько это для вас сложно), то можете писать на C++. Теории по C++ на начальных уровнях нет, но если вы его где-то уже изучили, то она вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>
        <p>Раньше был довольно популярный вариант — Паскаль. Раньше я его рекомендовал, но в современном мире единственная причина учить паскаль — если вас в школе учат на паскале, вы уже неплохо его знаете, и не хотите распыляться на два языка. На самом деле, даже в этом случае я рекомендую вам изучить питон и заниматься в этом курсе на питоне, но в принципе, если хотите, то можете заниматься и на паскале. Теории по паскалю на сайте нет, но если вы его изучаете в школе и неплохо его знаете, то теория вам не нужна :) Если же вы неуверенно знаете темы уровня 1, то лучше учите питон по материалам на сайте.</p>
        <p>Но в целом я не настаиваю на том или ином выборе языка. Вы можете заниматься на любом языке из тех, которые поддерживается этим сайтом (только еще раз хорошо взвесьте все плюсы и минусы); правда, я сам лучше всего знаю паскаль, питон и c++, поэтому по другим языкам моя помощь вам будет ограничена . Ну и теории по другим языкам на сайте нет.</p>
        <p>При этом в любом случае, начиная с уровня 2, начинаются уже алгоритмы, которые от языка не зависят, поэтому там уже не так принципиально, какой у вас язык программирования.</p>
        <p>Если у вас возникают вопросы, то свяжитесь со мной.</p>
        
        <h3>Что от меня требуется для занятий?</h3>
        <p>От вас требуется, в первую очередь, желание заниматься. Я не ваш школьный учитель, не ваш родитель, я не могу чего-то требовать от вас; ваше присутствие здесь — дело добровольное. Я не буду вас торопить, или ругать вас, если вы ничего не делаете неделями. Но при этом понимайте, что каких-либо результатов можно добиться только регулярными занятиями; если вы хотите конкретных цифр по тому, сколько времени надо выделить, то я бы считал, что как минимум два раза в неделю часа по 2-3 выделить надо, а лучше больше. (Для школьников, которые ходят ко мне на очные занятия, я рекомендую, в добавок в 2-3 часовому очному занятию, еще примерно столько же заниматься дома.) Но <b>следите за этим сами</b>, я не буду стоять у вас над душой. (Родителям и учителям: если вы хотите контролировать успехи ваших детей, см. отдельный документ в разделе "О курсе", и/или напишите мне.)</p>
        <p>Тот же принцип с моей стороны относится и к остальным вопросам: я лишь советую вам что-то, но не могу требовать. Если вы хотите выбрать определенный язык программирования вопреки моим рекомендациям — ну хорошо; и т.п.</p>
        <p>Но при этом учтите, что не только ваше участие здесь — дело добровольное, но и моя вам помощь — это во многом тоже дело добровольное. Естественно, я с большей радостью буду помогать школьнику, который активно занимается, чем школьнику, который что-то пытается делать раз в месяц, и т.п.</p>
        
        <h3>А какие изначальные знания требуются? И каких классов могут быть школьники?</h3>
        <p>По программированию — от никаких и выше. Вообще, заочный формат позволяет реализовать почти индивидуальное обучение (т.е. я готов каждому школьнику выдавать личные задания), поэтому я готов принимать школьников, начиная от тех, кто ничего не умеет, и до школьников существенно более высокого уровня.</p>
        <p>Важными являются предварительные знания по математике. Опыт показывает, что чем сильнее математическая подготовка у школьника, тем он лучше занимается программированием. Поэтому если вы участвуете (пусть и на невысоком уровне) в математических олимпиадах — это вам плюс.</p>
        <p>Я ожидаю здесь видеть школьников от 7 и до 11 класса. Если школьник сильный (участвует в олимпиадах или конкурсах по математике, или как минимум весьма хорошо знает школьную программу), то можно и 5-6 классы; есть успешные примеры когда школьники начинали заниматься и в 4 классе. Для сильных школьников чем раньше начать заниматься программированием, тем лучше. Со своей стороны я не ставлю никаких ограничений снизу по возрасту; я не буду возражать, даже если в курс запишутся детсадовцы (но и никаких скидок на возраст я делать не буду и дополнительно разжевывать материал не буду), хотя, конечно, для детсадовцев, скорее всего, от занятий особого толку не будет. Вообще, для начальной школы и, возможно, старших групп детского сада я бы лучше рекомендовал толковый кружок по математике.</p>
        
        <h3>Что надо сделать, чтобы начать заниматься?</h3>
        <p>Прочитайте документ "Инструкция для тех, кто здесь в первый раз" (ссылка в разделе "О курсе") и сделайте то, что там написано.</p>
        
        <h3>Когда можно начать заниматься? Когда "следующий набор"?</h3>
        <p>К курсу можно присоединится в любое время. Все равно занимающиеся школьники имеют довольно разный уровень подготовки, поэтому никакой единой программы типа "на этой неделе проходим то-то, на следующей то-то, а если вы пропустили или слишком поздно узнали о курсе, то ждите следующей группы или следующего года" нет.</p>
        <p>Единственное — во время праздников или летом у меня может быть ограничен доступ к интернету, поэтому я могу не так быстро отвечать на ваши письма, смотреть ваши решения и т.д. (Хотя стараюсь отвечать в течение суток, в крайних случаях — в течение 2-3 дней.)</p>
        <p>То же относится и к очным занятиям, можно присоединиться на любом занятии. Только проверьте, нет ли на главной странице курса объявления об отмене очередного занятия (например, из-за праздников); кроме того, летом занятий нет. На всякий случай можете мне заранее написать и уточнить, когда проходят занятия.</p>
        
        <h3><i>— И как думаешь, Василич? Будет от этой работы толк?</i></h3>
        <p><i>— А вот поработаешь, Петр Николаич, увидишь!</i><br>
        (Лев Успенский. Сопка «Камянистка», или торжество науки.)</p>
        <p>Конечно, я не гарантирую, что стоит начать заниматься, и вы сразу достигнете высоких результатов. Это зависит от многого, в том числе то того, что за пределами моего влияния — в первую очередь, математического образования, общей математической культуры, да и одаренности школьника; а также от трудолюбия и желания заниматься. Но думаю, что для большинства школьников, имеющих нужный склад мышления, эти занятия будут полезны.</p>
        
        <h3>А кто вообще вы такой?</h3>
        <p>Я — Петр Андреевич Калинин, к.ф.-м.н., старший разработчик компании Яндекс, выпускник ВШОПФ ННГУ. Я в свое время активно участвовал в различных олимпиадах: бронзовый призер международной олимпиады школьников по информатике (IOI) 2001 года, золотой призер IOI 2002 года; в составе команды ННГУ дважды участник финала чемпионата мира по командному программированию ACM (ACM ICPC). Я много лет езжу преподавателем в Летнюю компьютерную школу, крупнейшую российскую летнюю школу по алгоритмическому программированию (хотя последние годы — довольно редко); я постоянный член жюри Нижегородской городской олимпиады школьников по программированию (с 2014 года — председатель жюри). С 2017 по 2019 год я преподавал в Школе анализа данных Яндекса. Я ученик В.Д. Лелюха.</p>
        
        <p>В том или ином виде я учу школьников программированию с тех пор, как сам окончил школу в 2002 году (я ездил преподавателем в различные летние школы и т.п.); этот курс существует с 2013 года. Среди моих учеников — ряд участников и один победитель заключительного этапа Всероссийской олимпиады школьников по информатике (не считая моего брата Николая, в обучении которого я тоже принимал не последнее участие и который является абсолютным победителем заключительного этапа 2013 года и дважды — в 2013 и 2014 годах — золотым призером международной олимпиады школьников по информатике).</p>
        
        <p>Команды школьников под моим руководством регулярно участвуют в Нижегородской и Всероссийской командных олимпиада школьников по программированию. На большинстве прошедших к данному моменту Нижегородских командных олимпиадах абсолютное первое место занимала моя команда; на Всероссийской командной олимпиаде мои команды регулярно становятся призерами, нередко — медалистами, а два раза — занимали абсолютное первое место.</p>
        
        <p>Вы всегда можете связаться со мной, контактные данные указаны в разделе "О курсе".</p>
        
        <h3>А что за сайт informatics.msk.ru?</h3>
        <p>Informatics.msk.ru — это сайт дистанционной подготовки по информатике, организованный Московским центром непрерывного математического образования (МЦНМО) и Московским институтом открытого образования (МИОО); он очень удобен для организации курсов подобных этому, и, как вы можете видеть на главной странице сайта, реально широко используется, но в первую очередь для организации очных занятий. Я не имею непосредственного отношения к этому сайту (хотя и знаком с людьми, которые его создали и поддерживают).</p>
        
        <p>Этот курс строится на базе материалов с informatics и использует его в качестве тестирующей системы (а раньше вообще курс существовал только на informatics). Местами еще могли остаться ссылки на информатикс, если обнаруживаете такую, пишите мне.</p></div>
    """)

module20927_37 = () ->
    page("\nО франшизе", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Франшиза</h1>
        
        <p>Если вы уже учите кого-нибудь (школьников, студентов и т.д.) программированию, и хотите использовать алгопрог или его материалы в своих занятиях...</p>
        
        <p>...или если вы хотите начать учить кого-нибудь на базе алгопрога или с использованием его материалов...</p>
        
        <p>...или если вы хотите использовать движок алгопрога в своих занятиях, наполнив его своими материалами</p>
        
        <p>то этот текст для вас.</p>
        
        <h2>Материалы</h2>
        
        <p>Если вам нужен не функционал алгопрога, а только <i>материалы</i> — теоретические материалы, видеолекции, задачи и т.д. — то они доступны в том или ином виде свободно. Теоретические материалы, автором которых являюсь я, как правило, распространяются под той или иной свободной лицензией, вы можете их использовать. Она обычно указана в самом материале, если там лицензия не указана, то спросите меня. Материалы, автором которых являюсь не я, взяты с других сайтов, вы обычно тоже можете их использовать. Почти все задачи взяты с общедоступных сайтов <a href="https://informatics.msk.ru">informatics.msk.ru</a> и <a href="https://codeforces.com">codeforces.com</a>, на обоих этих сайтах вы можете формировать свои курсы из доступных там задач и т.д. (в частности, информатикс специально сделан для проведения различных курсов). Основное (хотя уже и подустаревшее) содержимое алгопрога есть на информатиксе: <a href="https://informatics.msk.ru/course/view.php?id=1135">informatics.msk.ru/course/view.php?id=1135</a> — собственно, весь алгопрог вырос из этого моего курса на информатиксе.</p>
        
        <h2>Движок</h2>
        
        <p>Сам движок алгопрога также <a href="https://github.com/petr-kalinin/algoprog">свободно доступен</a>, вы можете поднять собственный инстанс алгопрога и делать там что угодно. (Хотя, конечно, это не так просто, и я вряд ли буду вам помогать.)</p>
        
        <h2>Отдельный инстанс</h2>
        
        <p>Я могу поднять отдельный инстанс алгопрога для ваших учеников, с вашими материалами и задачами. Это требует отдельного обсуждения, но в принципе это возможно. Это будет платно, конкретная стоимость будет зависеть от необходимой работы по поддержке инстанса, необходимых доработок, и ожидаемого количества учеников. В качестве грубой предварительной оценки, если не требуется серьезных доработок, и ожидается 20-50 учеников, то стоимость отдельного инстанса будет составлять около 1000 рублей с ученика в месяц; если учеников будет меньше, то стоимость, конечно, будет повыше.</p>
        
        <h2>Занятия прямо на алгопроге по материалам алгопрога</h2>
        
        <p>Если вы хотите заниматься именно на алгопроге, то есть следующие варианты. Во-первых, ваши ученики может зарегистрироваться на алгопроге и заниматься как независимые ученики. С моей точки зрения это будут просто дополнительные ученики на алгопроге, вы сможете организовывать занятия, помогать ученикам и т.д., но у вас не появится никаких дополнительных возможностей на алгопроге (вы не сможете просматривать решения учеников и т.д.). Ваши ученики занимаются независимо, для них стоимость занятий будет, естественно, определяться <a href="/pay">по общим правилам</a>, с вас я, естественно, денег брать не буду (и вообще могу про вас и не знать :) ).</p>
        
        <p>Если вы хотите иметь дополнительные возможности — просматривать решения учеников, комментировать их, засчитывать/игнорировать, иметь отдельные сводные таблицы, то напишите мне. Это все (равно как и другие запросы с вашей стороны) вполне реально, но требует отдельного обсуждения. В качестве <b>базовых</b> вариантов есть следующие:</p>
        <ul>
        <li>Ваши ученики занимаются на алгопроге на равных правах с остальными, я их проверяю, комментирую, засчитываю/игнорирую их решения — и плюс вы можете делать то же самое; для ваших учеников будут отдельные таблички и т.д. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет такая же, как если бы они занимались независимо. (Т.е. никакой дополнительной оплаты за дополнительный функционал нет, но и скидок нет.)</li>
        <li>Я никак не взаимодействую с вашими учениками — не смотрю их решения, не засчитываю/игнорирую. Все это делаете, если хотите, вы. <b>Как правило</b>, стоимость таких занятий для ваших учеников будет в два раза меньше, чем если бы они занимались независимо.</li>
        </ul>
        <p>В обоих вариантах выше существенны слова «базовые» (варианты) и «как правило». Это обозначает, что, с одной стороны, это не публичная оферта — в конкретной ситуации возможны другие условия и другие цены; с другой стороны, возможны также и другие варианты по функционалу и по нашему с вами взаимодействию. Пишите, поговорим :)</p>
        
        <p>В частности, если для ваших учеников занятия на алгопроге были бы бесплатными если бы они занимались на алгопроге сами, то оба варианта выше будут, как правило, бесплатными.</p>
        
        </div>
    """)

achieves = () ->
    page(" \nПро ачивки", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про ачивки</h1>
        <p>На алгопроге каждый пользователь может заработать ачивки. Ачивки выдаются за разные вещи, в первую очередь за успешные занятия на алгопроге, а также за участие в различных олимпиадах. Заработанные пользователем ачивки показываются в его профиле, также три наиболее «крутые» ачивки показываются рядом с именем пользователя в сводных таблицах и т.д.</p>
        
        <p>Полный список доступных ачивок можно посмотреть <a href="/achieves">здесь</a>, а также в виде исходного кода <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/lib/achieves.coffee">здесь</a>. В любом месте (в том числе по ссылке в предыдущем предложении) можно кликнуть по ачивке и посмотреть список всех пользователей, имеющих данную ачивку.</p>
        
        <p>Часть ачивок выдается автоматически, часть ачивок (в основном за олимпиады) я устанавливаю вручную. Если вы считаете, что у вас должна быть какая-то ачивка, а у вас ее нет, то напишите мне. Я не всегда могу отслеживать все ваши олимпиады, поэтому пишите мне про свои олимпиады сами.</p></div>
    """)

tshirts = () ->
    page("Про футболки", String.raw"""
        <h1>Про футболки</h1>
        <h2>Бесплатные футболки</h2>
        <p>За достижения определенных уровней выдаются футболки по следующей схеме:</p>
        <ul>
        <li>Достижение уровня 3В — фиолетовая футболка «двоичный поиск»</li>
        <li>Достижение уровня 5В — синяя футболка «пересечение прямых»</li>
        <li>Достижение уровня 7В — оранжевая футболка «компоненты сильной связности»</li>
        <li>Достижение уровня 9В — красная футболка «декартово дерево»</li>
        <li>Достижение уровня 11В — черная футболка «паросочетание»</li>
        </ul>
        <p>Футболки выдаются бесплатно всем занимающимся на алгопроге (нижегородским школьникам, включая лицей 40, другие очные занятия и занимающихся заочно;
        не-нижегородским школьникам и не-школьникам). Нижегородцам я готов выдать футболки на занятии, не-нижегородцам по России я готов отправить 
        транспортной компанией (СДЭК или Боксберри) за мой счет (за исключением труднодоступных регионов, куда не возят ни СДЭК, ни Боксберри); 
        если вам нужна отправка в труднодоступный регион или за пределы России — то пересылка за ваш счет.</p>
        <p>Чтобы я выдал вам футболку, напишите заранее, чтобы я ее принес на занятие. Футболки бывают в разных размерах, мужские и женские. 
        Пишите размер и крой. Футболки за уровень 3В есть «в наличии», скорее всего, я просто принесу нужную вам футболку на ближайшее занятие,
        или вышлю в течение пары дней. Футболки за более высокие уровни делаются на заказ, в течение нескольких недель.</p>
        <p>Футболки также выдаются и тем, кто занимался на алгопроге раньше, а сейчас не занимается (в том числе тем, кто раньше занимался платно,
        но у кого сейчас аккаунт не оплачен — если вы раньше назанимались на футболку, я вам с радостью ее бесплатно выдам). 
        Тем, кто занимался на до-реформенном алгопроге 
        (со старой системой уровней), а также тем, кто занимался до введения системы уровней в принципе, я тоже готов выдать футболки,
        но соответствие текущих (указанных выше) уровней и тех уровней/тем, которые были раньше, я буду устанавливать каждый раз в индивидуальном порядке.
    """, {id: "tshirts"})

module20927_17 = () ->
    page("\nПро очные занятия для школьников", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Про очные занятия для школьников</h1>
        <h2>Общая информация</h2>
        
        <p>Для учеников лицея 40 в течение учебного года проходят очные занятия по вторникам, на них можно ходить только ученикам лицея 40.</p>
        
        <p>На очные занятия рекомендуется приходить <b>только тем, кто решил хотя бы одну задачу в курсе</b>. Зарегистрируйтесь на сайте,
        прочитайте сами раздел "О курсе", решите хотя бы одну задачу, потом приходите. Если возникают какие-то вопросы, пишите мне.</p>
        
        <p>Занятия проходят <b>по вторникам в КЦ</b>. Я обычно бываю в лицее с 14.30 до 17.00, иногда чуть позже. Можно приходить и уходить в любое время, но см. ниже про нехватку компьютеров.</p>

        <p>Помимо занятий в лицее 40, могут быть занятия по тем же материалам в других местах, их ведут другие преподаватели, на них могут быть немного другие правила и немного другой формат.</p>
        
        <h2>Формат занятий</h2>
        
        <p>Очные занятия у нас проходят полностью в формате практики. У нас нет каких-либо общих лекций, я не рассказываю на занятиях новую теорию «для всех» (за исключением отдельных, специально анонсированных, занятий). Вы приходите, садитесь за компьютер, заходите на алгопрог, и продолжаете заниматься с того места, где остановились в прошлый раз — решаете задачи и/или читаете теорию. Самостоятельно. Я время от времени прохожу по классам, смотрю, кто что решает, могу что-то помогать, советовать, объяснять, но в основном вы занимаетесь самостоятельно.</p>
        
        <p>То есть вы занимаетесь так же, как если бы вы занимались из дома. Единственное отличие очных занятий от занятий из дома состоит в том, что на очных занятиях присутствую я, и вы всегда можете меня спросить о чем-либо, и как правило я достаточно быстро отвечу. (Правда, учтите, что на очных занятиях помимо вас обычно еще присутствует пара десятков школьников, у которых тоже есть свои вопросы :) ).</p>

        <p>Если вы на занятии добрались до новой теории — скажите мне. Возможно, я вам ее расскажу. Но, возможно, я отправлю вас читать теорию на сайте.</p>
        
        <p>Каждый школьник в итоге занимается полностью в своем режиме, у нас нет календарного плана типа «сегодня проходим такую-то тему, завтра такую-то,
        если вы пропустили занятие, то надо наверстывать» и т.п. Вы занимаетесь в своем темпе, если у вас получается быстро проходить новые темы —
        отлично, значит вы быстро двигаетесь вперед, если нет — вы можете потратить столько времени на каждую тему, сколько надо, никто вас не торопит.</p>
        
        <p>В частности, поэтому расписание занятий у нас нестрогое. Вы можете опоздать на занятие, можете уйти раньше, можете пропустить часть занятий, можете, наоборот, ходить на два занятия — всё на ваше усмотрение. Конечно, чем больше вы занимаетесь, тем лучше у вас, наверное, будут результаты, но я не требую какого-то строгого посещения занятий.</p>

        <p>По той же причине у нас нет домашнего задания: вы сами знаете, где вы остановились, и вполне можете продолжать решать задачи из дома. 
        Более того, хотя я формально ничего не задаю, но конечно заниматься из дома также надо, одних очных занятий, скорее всего,
        вам будет недостаточно.</p>

        <p><b>Занятия по воскресеньям для старших уровней</b> немного отличаются по формату: мы решаем разные старые контесты, а потом обсуждаем задачи, см. <a href="/material/ochn_high">отдельный текст про это</a>.</p>
        
        <h2>Про нехватку компьютеров</h2>
        
        <p>Занятие в лицее 40 официально начинается в 14.30; как правило, к этому моменту свободные компьютеры еще есть. Если вы опоздали, не обижайтесь, если вам не хватило компьютеров. С другой стороны, как правило, уже в районе 15.30-16.00 компьютеры начинают освобождаться (далеко не все школьники сидят до конца занятия), поэтому если вам не хватило компьютера, можете просто подождать (например, поделав домашние задания по другим предметам).</p>
        
        <p>Универсальный способ избежать пробему нехватки компьютеров — приносить свой ноутбук. Но <a href="/material/module-16024_1" onclick="window.goto('/material/module-16024_1')();return false;">см. отдельные правила про это</a>.</p></div>
    """, {id: "ochn"})

module20927_17_ochn_high = () ->
    page("\nПро очные занятия для старших уровней ", String.raw"""
        <h1>Про очные занятия для старших уровней</h1>

        <p><b>На данный момент очные занятия для старших уровней не проводятся.</b></p>
        
        <p>Для старших уровней (примерно уровень 3 и выше, но см. еще следующий абзац) по воскресеньям проводятся дополнительные занятия. А именно, я заранее готовлю некоторый контест (обычно — какой-нибудь старый div2-раунд с codeforces), в воскресенье во время обычного занятия вы его решаете, потом мы обсуждаем задачи и обсуждаем какую-нибудь еще информацию,
        в первую очередь про нижегородские олимпиады.</p>
        <p>Я ожидаю на занятиях учеников уровня 3 и выше, хотя, если у вас уровень ниже 3, но вы хотите участвовать — пожалуйста, но будьте готовы к тому, что может быть сложновато. </p>
    """, {id: "ochn_high"})

module20927_29 = () ->
    page("\nФормулы расчета рейтинга, активности и т.д.", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>Формулы расчета рейтинга и т.д.</h1>
        <p>В сводных таблицах показывается рейтинг, активность, рейтинг на codeforces, взвешенное изменение рейтинга на codeforces и взвешенное количество контестов на codeforces.</p>
        
        <h2>Рейтинг</h2>
        <p>(Кому интересно, конкретный код расчета рейтинга и активности есть <a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateRatingEtc.coffee">вот здесь</a>.)</p>
        
        <p>Рейтинг определяется просто набором решенных задач. А именно, каждая задача стоит некоторое фиксированное количество баллов рейтинга, определяемое уровнем этой задачи.</p>
        
        <p>Задача уровня 1А стоит $2.5$ балла рейтинга. Задача уровня 2А стоит $2.5^2$ баллов рейтинга. Задача уровня 3А стоит $2.5^3$ баллов рейтинга, и т.д. Задача уровня $N$А стоит $2.5^N$ баллов рейтинга.</p>
        
        <p>Задачи промежуточных уровней стоят промежуточное число баллов. А именно, задача уровня $N$Б стоит $2.5^{N+0.25}$ баллов рейтинга, уровня $N$В — $2.5^{N+0.5}$, уровня $N$Г — $2.5^{N+0.75}$ баллов.</p>
        
        <p>Задачи с региональных олимпиад считаются как задачи с уровня 3А. Если одна и та же задача есть на нескольких уровнях, то учитывается только самый высокий уровень этой задачи.</p>
        
        <p>При выводе рейтинга в таблицы он округляется до целых, но при подсчете все считается вещественными числами.</p>
        
        <p>Табличка стоимости (округленная до двух знаков после запятой):</p>
        <pre>          А          Б          В          Г
         1       2.50       3.14       3.95       4.97
         2       6.25       7.86       9.88
         3      15.62      19.65      24.71      31.07
         4      39.06      49.12      61.76
         5      97.66     122.80     154.41     194.16
         6     244.14     306.99     386.02
         7     610.35     767.48     965.05    1213.49
         8    1525.88    1918.69    2412.63
         9    3814.70    4796.73    6031.57    7584.29
        10    9536.74   11991.82   15078.91
        11   23841.86   29979.55   37697.29   47401.83
        12   59604.64   74948.87   94243.22
        13  149011.61  187372.18  235608.05  296261.43
        </pre>
        
        <h3>Идеология</h3>
        <p>Баллы за задачу растут очень быстро, специально для того, чтобы на высоких уровнях было не так важно, что вы решали на младших уровнях. Например, если вы уже на уровне 5, то, скорее всего, задачи уровня 1 не представляют для вас вообще никакой сложности. Поэтому не важно, сколько вы решили на уровне 1. И это получается за счет того, что задачи уровня 5 стоят намного больше, чем задачи уровня 1.</p>
        
        <h2>Активность</h2>
        <p>(Конкретный код расчета — по той же ссылке)</p>
        
        <p>Активность — показатель того, насколько активно вы решали задачи последнее время. Каждая задача, которую вы когда-либо решали, дает свой вклад в активность. У каждой задачи есть "базовые" баллы активности — это квадратный корень из номера уровня. (У всех задач уровня 1 "базовый" балл равен 1, у каждой задачи уровня 2 базовый балл равен 1.4, и т.д.) Этот базовый балл умножается на $0.55^{t/\tau}$, где $t$ — время, прошедшее с того момента, как вы сдали эту задачу, а $\strut\tau$ равно 1 неделе. Например, если вы сдали задачу только что, то базовый балл учитывается полностью. Если вы сдали задачу ровно сутки назад, то базовый балл умножается на $0.55^{1/7}\approx 0.92$. Если вы сдали задачу ровно две недели назад, то базовый балл умножается на $0.55^2\approx0.3$. Если вы сдали задачу 8 недель назад, то базовый балл умножается на $0.55^8\approx0.0083$, т.е. эта задача уже почти не учитывается.</p>
        
        <p>Суммарное значение активности по всем задачам делится на 0.45, в результате получается эдакое среднее число "задач" в неделю.</p>
        
        <p>Получается, что на самом деле учитываются только недавно сданные задачи, а те, которые вы решали давно, не учитываются. Но при этом падение этой "учитываемости" плавное. Если вы перестанете решать задачи, то ваша активность будет постепенно падать со временем (хотя и никогда не станет ровно нулем). В таблицах активность выводится округленной до одного знака после запятой, но на самом деле активность — настоящее вещественное число.</p>
        
        <p>В ряде сводных таблиц сначала указываются школьники, активность которых больше 0.1, и только потом все остальные.</p>
        
        <h2>Цвет</h2>
        <p>Имена школьников в таблицах рисуются цветом, определяемым их рейтингом и активностью. А именно, активность определяет яркость цвета (от почти черного до насыщенного), а рейтинг определяет оттенок (от фиолетового через все цвета радуги до красного). Например, школьник с рейтингом 1 и активностью 10 будет иметь ярко-фиолетовый цвет, школьник с рейтингом 1 и активностью 0.1 будет иметь темно-фиолетовый цвет, школьник с рейтингом примерно 100000 и активностью 10 будет иметь ярко-зеленый цвет, а с активностью 0.1 — темно-зеленый цвет; красный цвет соответствует рейтингу 4500000.</p>
        
        <p>Конкретная формула: в <a href="https://ru.wikipedia.org/wiki/HSV_(%D1%86%D0%B2%D0%B5%D1%82%D0%BE%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C)">модели HSV</a> цвет участника имеет следующие компоненты:</p>
        $h = k\cdot \log(r+r_0) + b$<br>
        $v = 0.3 + 0.7 \cdot \log(a+1) / \log(A + 1)$<br>
        $s = 1$<br>
        <p>здесь $r$ и $a$ — рейтинг и активность, $A=7$, $r_0=200$, а константы $k$ и $b$ подбираются так, чтобы двух опорных точек (рейтинг 600 и рейтинг 4500000) получались правильные цвета (сине-фиолетовый и красный).</p>
        
        <p>Еще есть мелкие поправки на краях возможных интервалов значений. Код <a href="https://github.com/petr-kalinin/algoprog/blob/master/client/components/UserName.coffee">здесь</a>.</p>
        
        <h2>Параметры codeforces</h2>
        <p><a href="https://github.com/petr-kalinin/algoprog/blob/master/server/calculations/calculateCfRating.coffee">Код</a></p>
        
        <p>Рейтинг на CF берется прямо с CF, обновляется раз в сутки.</p>
        
        <p>Взвешенное количество контестов вычисляется так: каждый написанный вами контест дает вклад, равный $0.5^{t/\tau}$, где $t$ — время, прошедшее с написания контеста, а $\tau$ равно 4 неделям. Все такие вклады суммируются. Т.е. только что написанный контест дает вклад 1, контест, написанный 4 недели назад — 0.5, и т.д.</p>
        
        <p>Взвешенное изменение рейтинга вычисляется так: каждый написанный вами контест дает вклад, равный $\delta\cdot0.5^{t/\tau}$, где $\delta$ — изменение рейтинга в этом контесте, $t$ — время, прошедшее с написания контеста, а $\tau$ равно 4 неделям. При этом самый первый в жизни написанный контест не учитывается, т.к. там изменение рейтинга — это бессмысленная вещь.</p></div>
    """, {id: "about_rating"})

school_olympiad = () ->
    page("Про школьную олимпиаду", String.raw"""
        <div class="box generalbox generalboxcontent boxaligncenter clearfix"><h1>О школьной олимпиаде</h1>
        <font color="red">Эта информация касается школьной олимпиады в Нижегородской области. В других регионах могут быть отличия, но базово информация должна быть верна.</font>
        <h3>Краткое содержание того, что ниже</h3>
        <ul>
        <li>В школьной олимпиаде стоит участвовать как минимум всем, у кого уровень 1В и выше.</li>
        <li>Участвовать надо по задачам за 9-11 класс, даже если вы в младших классах.</li>
        <li>Заранее выясните, где и когда будет олимпиада, и попросите вам дать возможность писать на том языке, на котором вы хотите.</li>
        <li>На самой олимпиаде:</li>
        <ul>
        <li>Тщательно тестируйте свои задачи, и заранее поймите, будет ли в течение тура возможность протестировать на тестах жюри!</li>
        <li>Неполные решения также оцениваются.</li>
        <li>Прочитайте все задачи сразу, не тратьте всё время на одну задачу.</li>
        <li>Регулярно сохраняйте решения</li>
        <li>Не бойтесь задач, самые сложные обычно примерно соответствуют уровню 1Г-2А, и не обязательно решать всё, чтобы пройти дальше.</li>
        <li>Если что-то забыли, ищите обходные пути.</li>
        <li>Ищите закономерности.</li>
        <li>Применяйте здравый смысл.</li>
        </ul>
        <li>Как только узнаете свой результат, скажите его мне.</li>
        <li><b>(Только нижегородцы) Если информация, которую вам говорят в школе, противоречит написанному ниже (особенно если отличается дата проведения), срочно пишите (лучше в телеграмм) или даже звоните мне!</b></li>
        <li><b>(Только нижегородцы) По любым вопросам, а особенно если что-то идет не так, сразу и в любое время звоните мне!</b></li>
        </ul>
        <h3>О чем речь?</h3>
        <p>Школьная олимпиада по информатике в Нижнем Новгороде и Нижегородской области состоится, видимо, <b>23 октября</b>, но обязательно уточните сроки заранее в своей школе. (Школьники не из области — тоже уточняйте у себя в школе).</p>
        <p>Школьная олимпиада — это первый этап в системе Всероссийской олимпиады школьников. Победители школьной проходят на районную олимпиаду, с районной — на областную и далее на собственно всероссийскую и международную, поэтому это — самая важная последовательность олимпиад в году, и школьная олимпиада является "входом" в нее. Не пропустите.</p>
        
        <h3>Кому стоит участвовать?</h3>
        <p>Я очень рекомендую участвовать всем, кто на момент олимпиады будут иметь уровень 1В и выше (независимо от класса). Если у вас на момент олимпиады еще не будет уровня 1В, но вы хотите, то можете тоже участвовать — хотя, возможно, задачи вам покажутся несколько сложными. Я думаю, что уровня 1В, скорее всего, будет достаточно, чтобы пройти на районную олимпиаду (с учетом уточнений про сложность ниже).</p>
        <p>Если вы в прошлом году участвовали в олимпиадах и стали призером (или победителем) районной или областной олимпиады, то школьную олимпиаду в этом году можете пропустить — вы проходите автоматом на ту олимпиаду, на которой стали призером год назад. (К городской олимпиаде им. В.Д.Лелюха это не относится, она не входит в систему Всероссийской олимпиады школьников.) Но я все равно советую вам участвовать в школьной олимпиаде, если у вас нет серьезных причин в ней не участвовать. (Т.е. если вы куда-то уезжаете, болеете и т.д. — то ничего страшного, пропускайте олимпиаду. А если вы выбираете, написать олимпиаду или пойти гулять, то лучше напишите.)</p>
        
        <h3>Что надо сделать, чтобы участвовать?</h3>
        <p>Заранее, как можно раньше, подойдите к своему учителю информатики и скажите ему/ей, что вы хотите участвовать. Ближе к дате олимпиады вам, наверное, скажут, где и когда именно она будет проходить; если не сказали, то еще раз подойдите к учителю и уточните. Пожалуйста, контролируйте сами, что вы все знаете про олимпиаду — я не могу связаться с каждой школой и сказать, чтобы вас не забыли.</p>
        <p>Если вы младше 9 класса, то обязательно скажите, что <b>вы хотите писать задачи за 9 класс</b> (см. про это подробнее ниже). Младше 9 класса могут быть очень странные задачи, очень странная организация и т.д. — ни в коем случае не соглашайтесь участвовать по задачам младше 9 класса, даже если вы сами намного младше :)</p>
        <p>Заранее уточните, на каком языке программирования вы сможете писать. Постарайтесь уговорить учителей, чтобы вам дали написать вашем любимом языке, будь то Free Pascal, PascalABC, Python, С++ c Code::Blocks или с MSVS или что угодно еще; если нужно, предложите, что вы сами установите нужные программы (компиляторы, среди разработки) на компьютер(ы), на которых будет олимпиада.</p>
        <p>Если возникают какие-то проблемы, обязательно пишите или даже звоните мне (только нижегородцы)! Я не уверен, что смогу чем-то помочь, но вдруг. Не тяните с проблемами до последнего.</p>
        
        <h3>Как проходит олимпиада</h3>
        <p>Олимпиады по информатике, по крайней мере наиболее распространенные, проходят в следующем формате. Вам предлагается несколько (обычно от 2 до 5) задач, по каждой задаче вам надо написать программу. Задачи имеют такой же формат, как у нас на этом сайте: вводятся какие-то данные, надо вывести ответ. Как и у нас, гарантируется, что входные данные соответствуют ограничениям, указанным в условиях. В общем, все весьма похоже на то, как вы решаете задачи на сайте.</p>
        
        <p>Но есть важное отличие — на сайте результат проверки задачи сообщается вам сразу же, и вы можете сдавать одну и ту же задачу несколько раз. На олимпиадах же бывают разные системы;
        бывает, что вы точно также во время тура можете отправлять решения на проверку и узнавать результаты, бывает, что вы узнаете лишь частичные результаты, а полные — только после тура, бывает, что вообще тестирование ваших решений будет только после тура. В двух последних случаях <b>у вас не будет возможности исправить какие-то ошибки в программе</b> после того, как вы узнаете результат тестирования, поэтому тщательно проверяйте свои решения, про это еще см. ниже. Скорее всего, в этом году результат проверки будут сообщать сразу, но стоит быть готовыми ко всему.</p>
        
        <p>Олимпиада длится ограниченное время (школьный этап — обычно около двух часов), поэтому внимательно контролируйте время. Не зависайте над одной задачей; если что-то не получается, то подумайте, может быть, стоит переключиться на другую задачу?</p>
        
        <p>В частности, <b>прочитайте все условия всех задач сразу в начале тура,</b> до того, как начнете что-либо программировать. От жюри можно ожидать, что они разместят задачи по возрастанию сложности, но этого может и не быть (не говоря уж о том, что ваше восприятие сложности может отличаться от того, как это воспринимает жюри). Поэтому сначала прочитайте задачи, убедитесь, что вы их понимаете, а потом уже начинайте решать — причем с тех, которые выглядят проще. Ни в коем случае не должно быть такого, что «я все время решал первую задачу, а остальные даже не прочитал или даже не подумал над ними».</p>
        
        <p>Еще одно отличие от сдачи задач на сайте — на олимпиаде у вас <b>будут оцениваться также и неполные решения</b>. По каждой задаче будет подготовлено несколько тестов, и за каждый тест вы будете получать определенное количество баллов (могут быть и более хитрые системы, но на школьном этапе — маловероятно). Поэтому если у вас не получается придумать решение, которое будет работать всегда — напишите хотя бы решение, которое будет работать иногда. Постарайтесь, чтобы по каждой задаче у вас было хоть что-то сделано, чтобы у вас <b>не было нулевых баллов ни по одной задаче.</b></p>
        
        <p>Сохраняйте решения! Во время олимпиады может произойти что угодно — отключиться свет, перезагрузиться компьютер и т.п. Если у вас из-за этого пропадет несохраненное решение, то это будут полностью ваши проблемы. Вообще, полезно привыкнуть сохранять свое решение каждые 10-20 секунд. В частности, не рассчитывайте на то, что решения, отправленные в тестирующую систему, будут там всё время доступны, сохраняйте решения и на своем компьютере.</p>
        
        <p>Не теряйте свои решения! Если даже вы думаете, что ваше решение неправильное и его надо переписать — не удаляйте его, просто пишите в новом файле (ну или скопируйте старое решение куда-то про запас). В частности, ни в коем случае не перезатирайте свои решения, и не пишите решения новых задач поверх решений старых!</p>

        <p>Имейте в виду, что вам не обязательно решать всё. Чтобы пройти на районную олимпиаду, часто достаточно набрать половину баллов (а в этом году может быть достаточно будет и меньше), поэтому не бойтесь, если у вас не получается решить самую сложную задачу (или две самых сложных, если задач много). (Но все равно постарайтесь по ним хоть что-то написать.) Для 11-классников порог прохода на район может быть выше.</p>

        <p>Последние годы школьный этап проходит на платформе Сириуса, и в этом году, как я понимаю, будет так же.</p>

        <h3>О задачах за разные классы</h3>
        <p>Традиционно, исторически (и на то есть ряд дополнительных причин) на олимпиадах по информатике набор задач был общий для всех классов. Итоги потом подводятся по классам по отдельности, но задачи общие.
        Последнее время на школьном и районном этапе делают разделение по классам, и делают отдельные задачи для младших классов, но выше районной олимпиады по 8 и младше классам вы все равно там не пройдете. Плюс для младших классов могут быть всякие странности в организации (хотя последние годы это маловероятно).</p>

        <p>При этом региональный этап проводится только для 9 и старше классов. Но это вовсе не значит, что младшеклассники не могут участвовать за 9 класс и проходить на региональный этап и выше — даже если вы младше 9 класса, вполне можете писать за 9 класс,
        но для этого надо со школьного этапа начинать выступать за 9 класс.</p>

        <p>Поэтому я настоятельно рекомендую школьникам младше 9 класса участвовать за 9 класс. Убедитесь, что вы выступаете за 9 класс и пишите по тем же задачам, что и 9-классники. Скажите учителям заранее, что вы хотите участвовать за 9-й класс. На самой олимпиаде тоже проверьте, что вы решаете задачи за правильный класс. Не бойтесь этого; как я уже писал, если у вас уровень 1В или выше, то вам эти задачи будут по силам. И даже если вы решите их плохо, все равно вы получите ценный опыт, который вам пригодится через год.</p>
        
        <h3>О результатах</h3>
        <p>Как только будут известны ваши результаты, сообщите их мне. Результаты — это общее число набранных баллов (а хорошо бы и распределение баллов по задачам) и проходите вы на район или нет. Про район иногда сообщают сразу, иногда не сразу — если вы пока знаете только баллы, то сообщите мне только баллы, потом как будет известно про район, сообщите мне.</p>
        
        <h3>Какие будут задачи?</h3>
        <p>Последние годы менялись организаторы и формат олимпиады, поэтому задачи за совсем старые годы особого смысла смотреть нет. На алгопроге есть задачи нескольких последних лет.</p>
        
        <p>Есть небольшой риск, что задачи будут заметно сложнее тех, что бывали раньше, условно говоря, на уровне районных олимпиад прошлых лет. Само по себе это не очень плохо, потому что уровень школьников в целом по области не поменялся; если задачи будут сложнее, то просто все выступят хуже, но относительный ваш результат не особо изменится. Но есть риск, что проходной балл на районную олимпиаду установят не исходя из определенного количества участников района (т.е. не просто возьмут топ-N участников), а, например, установят проходной балл равным 50% от максбалла; тогда, если задачи будут сложные, то на район пройдут мало кто. Но это тоже не очень страшно; в конце концов, проход на районную олимпиаду — это не ахти какое достижение, участие в районной олимпиаде не особо вам что дает. Достижением можно считать проход с районной на областную, а это вряд ли будет в этом году сложнее, чем в прошлые годы, потому что задачи на школьной олимпиаде этого года вряд ли будут сложнее, чем на районной прошлых лет. Если на школьном этапе в этом году будут сложные задачи, и проходной балл поставят 50%, то это значит, что на район пройдет немного народу, но тогда на районе не будет особой конкуренции за выход на область; в итоге просто получается как будто школьный этап будет играть роль районного в плане прохождения на область. Короче говоря, не пугайтесь, если задачи будут сложнее прошлых лет, они будут сложнее не только для вас, но и для остальных участников.</p>

        <p>Еще есть небольшой риск, что в каких-нибудь районах или школах будут проводить олимпиаду по-своему, не через Сириус. Если у вас возникает такое подозрение, в частности, если информация от школы (дата проведения, длительность, формат и т.д.) противоречит тому, что я писал выше — срочно сообщите мне.</p>

        <p>Возможно даже, что в принципе олимпиада будет как-то по-новому, я не искал детали организации в этом году.</p>

        </p><h3>Какие знания могут потребоваться?</h3>
        <p>Вообще, я думаю, что знаний уровней 1А-1Б (т.е. основ языка), вместе со здравым смыслом, скорее всего будет достаточно, чтобы набрать половину баллов и пройти на район (для 11-классников может потребоваться чуть больше). Уровни 1В и 1Г очень полезны в том плане, что они содержат нестандартные задачи как раз типа тех, что будут на олимпиаде. Кроме того, в ряде задач могут потребоваться следующие знания:</p>
        
        <h4>int64</h4>
        <p>В паскале есть очень полезный тип данных, про который вы, возможно, не знаете. Это <code>int64</code> — 64-битное целое число. Он может хранить числа от (примерно) -2<sup>63</sup> до 2<sup>63</sup>; это примерно от -9e18 до 9e18. Он полезен, если значения, которые вам нужны в вашей программе, не влезают в integer.</p>
        <pre>var a:int64;
        begin
        a:=1000000000;
        a:=a*1000000000;
        writeln(a); // выведет 1000000000000000000
        end.
        </pre>

        <p>В C++ тоже есть аналогичный тип (long long int), но если вы пишете на C++, то скорее всего вы про него знаете.</p>
        
        <h4>Тестирование задач</h4>
        <p>Очень важная вещь на олимпиаде — аккуратно протестировать задачи. На эту тему есть мой <a href="https://notes.algoprog.ru/testing/06_testing_main.html">длинный текст</a> (ссылка на него также есть в уровне 1В). Прочитайте его и следуйте его рекомендациям. Конечно, вам пока не обязательно использовать совсем уж продвинутые вещи типа стресс-тестирования или assert'ов, но практически весь остальной текст вам будет полезен. Не жалейте времени на аккуратное тестирование.</p>
        
        <p>Полезно хотя бы немного отработать навык тестирования до олимпиады. Постарайтесь порешать несколько задач из еще не решенных вами с учетом рекомендаций по тестированию.</p>
        
        <h4>Работа с файлами</h4>
        <p>Ниже — про паскаль; про работу с файлами в питоне см. текст на уровне 2А.</p>
        <p>На школьной олимпиаде, возможно (хотя и маловероятно), вам придется вводить данные не с клавиатуры, а из указанного в условии задачи файла, и аналогично выводить данные не на экран, а в файл. В паскале это делается это так: вы заводите переменную специального типа <code>text</code>, а потом командами <code>assign</code> и <code>reset/rewrite</code> "открываете" файл на чтение/запись соответственно. Далее в командах <code>read/readln</code> и <code>write/writeln</code> <i>первым</i> аргументом указываете файл (переменную), откуда читать или куда выводить. После работы с файлом "закрываете" его командой <code>close</code>. При этом тогда ваша программа <b>не должна ничего вообще</b> читать с клавиатуры! Т.е. по нажатию Ctrl-F9 черное окошко должно мелькать на мгновение, после чего должно возвращаться синее окошко паскаля.</p>
        
        <p>Пример кода, который читает из файла <code>input.txt</code> два числа и выводит в файл <code>output.txt</code> их сумму:</p>
        <pre>var f,g:text;
            a,b:integer;
        begin
        assign(f,'input.txt');reset(f); // "открыли" файл input.txt для чтения
        read(f,a,b); // из файла f прочитали числа a и b
        close(f); // "закрыли" файл
        assign(g,'output.txt');rewrite(g); // "открыли" файл output.txt для записи
        writeln(g,a+b); // вывели сумму чисел в файл g
        close(g); // "закрыли" файл
        end.
        </pre>
        
        <p>Как тестировать такую программу? В оболочке паскаля вы можете открыть несколько окон (через меню File - Open). В одном набираете программу (и сохраняете файл как <code>чтонибудь.pas</code>), в другом редактируете входной файл (и сохраняете как требуется по условию), в третьем открываете выходной файл.</p>
        
        <p>Переключаться между окнами можно, нажав Alt-0 — будет окошко со списком всех открытых файлов. Можно также заметь в правом верхнем углу каждого окошка цифру (1, 2, 3 и т.д.) и переключаться в это окошко, нажав Alt-1, Alt-2 и т.п. Я, например, предпочитаю иметь в окошке "1" исходный текст программы, в окошке "2" входной файл, в окошке "3" выходной файл. Я не советую вам иметь много открытых окон — оставляйте открытыми только те окна, которые нужны для текущей задачи. Когда переключаетесь на новую задачу, закрывайте все окна от старой задачи и открывайте окна для новой задачи.</p>
        
        <p>Соответственно, теперь вводите тест в окошко с входным файлом, не забываете его сохранить (!), и запускаете программу. Если в одном из окон у вас открыт выходной файл, то после запуска программы паскаль вам будет выводить диалоговое окно вида "File output.txt has changed on disk. Reload?" ("Файл output.txt изменился на диске. Перезагрузить?"; точный английский текст я не помню.) Нажмите "yes" — и в окошке с выходным файлом его содержимое автоматически обновится.</p>
        
        <p>Тестировать программу так даже удобнее, чем при вводе с клавиатуры: если вы отлаживаете программу на конкретном тесте, то вам не надо его вводить заново при каждом запуске.</p>
        
        <p>Обязательно попробуйте работать с файлами <b>до олимпиады</b>!. Если на олимпиаде у вас не получается быстро наладить работу с файлами, то лучше попросите разрешения работать по старинке — с клавиатуры и на экран. Не теряйте время на то, чтобы разобраться с файлами на олимпиаде!</p>
        
        <h4>Алгоритмы</h4>
        <p>В основном большинство задач на школьной олимпиаде вряд ли будут требовать специальных знаний, особенных алгоритмов. Задачи, скорее всего, будут требовать только аккуратного размышления и аккуратной реализации; ничего такого, что мы с вами не проходили, не потребуется. Возможно, придется пописать что-то на бумажке, сделать какое-то моделирование и т.п. Все будет довольно похоже на задачи уровней 1В и 1Г. </p>
        
        <p>В наиболее сложных задачах, возможно, потребуются алгоритмы, обсуждаемые в уровнях 2А и 2Б — в первую очередь НОД, сортировки, простые числа и разложения на множители, может быть ДП. Если у вас уже решено хотя бы задач 10-15 уровней 1В/1Г, можете переключиться на эти темы на уровне 2, но не тратьте много времени — лучше порешайте еще задач с уровней 1В/1Г и научитесь тестировать задачи. Конечно, если у вас уже много задач уровней 1В/1Г решено и вы уже находитесь на уровне 2, то изучите эти темы.</p>
        
        <h4>Сложность алгоритмов</h4>
        <p>Важной вещью может оказаться определение того, насколько долго работает придуманный вами алгоритм на больших входных данных. Это обязательно стоит проверить, в идеале — еще до написания программы. Для этого существует понятие <i>сложности алгоритма</i>, про нее можно почитать <a href="https://notes.algoprog.ru/complexity/index.html">тут</a> (в первую очередь читайте часть 1; самое главное — в разделе 4.1.3, про 100 миллионов действий).
        
        </p><h4>Используйте компьютер по полной</h4>
        <p>Помните, что вы можете на компьютере не только писать программы-решения задач. Если вы, например, думаете над задачей, и вам стало важно узнать, чему равно 163*634, то не надо умножать числа в столбик. Воспользуйтесь калькулятором на компьютере или напишите отдельную программу из одного print. Если у вас в задаче описан какой-то процесс (есть N бактерий, они размножаются по каким-нибудь правилам, или что-нибудь подобное), не бойтесь написать отдельную программу, которая промоделирует этот процесс, выведет что вам надо, чтобы вы могли поискать какие-нибудь закономерности. И так далее. Не бойтесь писать вспомогательные программы.</p>
        
        <h4>Ищите закономерности</h4>
        <p>Иногда бывают задачи, в которых легко находится та или иная закономерность. Если вы не можете решить какую-то задачу для всех входных данных, то решите ее на бумажке для маленьких входных данных (или, с учетом предыдущего пункта — напишите простую программу, которая решит задачу для маленьких и средних входных данных), и посмотрите на ответы и решения глазами: вдруг вы найдете какую-нибудь закономерность.</p>
        
        <h4>Если чего-то не знаете, ищите обходные пути</h4>
        <p>Если вы понимаете, что в задаче требуется что-то, чего вы не помните, не знаете, "не проходили" — попробуйте придумать обходной путь — как сделать то же самое, пусть сложнее, но с использованием тех вещей, которые вы знаете. Или как вообще решить задачу по-другому, не используя это знание вообще. Например, если вы не помните, какая функция переводит число в строку — подумайте, как написать такую функцию самостоятельно (подсказка: по аналогии со всякими задачами про цифры с уровня 1А). Или подумайте, а может быть, вам и не надо переводить число в строку вообще? Если вы поняли, что вам нужна сортировка, но вы не знаете, как ее делать — попробуйте или придумать, или придумать, как решать задачу без сортировки. Зачастую это получится. И так далее.</p>
        
        <h4>Здравый смысл</h4>
        <p>Ну и главное. Применяйте здравый смысл. Думайте головой, постоянно думайте над тем, что вы делаете, и помните, что <b>ваша цель на олимпиаде — как можно лучше выступить по сумме заданий.</b></p>
        
        <p>В частности, тут я написал много рекомендаций, дал ссылки на много текстов. Если вы их все прочитаете и поймете — хорошо. Но если вы успели прочитать не все, или не во всем разобрались — не так страшно. Если вы чего-то не поняли, не применяйте это на олимпиаде (ну или точнее, подумайте, не сможете ли вы на олимпиаде быстро допонимать). Не суетитесь и не переживайте, а спокойно решайте задачи.</p>
        </div>
    """, {id: "school_olympiad"})

about_find_mistake = () ->
    page("Про раздел «Найди ошибку»", String.raw"""
        <h1>Про раздел «Найди ошибку»</h1>
        <p>Когда вы сдали решение по задаче и получили по ней «Зачтено», у вас появляется возможность искать ошибки в решениях других учеников по этой задаче. А именно, на страничке задачи появляется ссылка «Найди ошибку», по которой открывается список специально отобранных неверных решений этой задачи.
        (Конечно, ссылка появляется не в каждой задаче, а только в тех задачах, где такие специально отобранные решения есть.)
        Также в меню сайта есть раздел «<a href='/findMistakeList'>Найди ошибку</a>», где есть ссылки на все решения, в которых вы можете искать ошибки
        (не все из этих решений вам доступны — вам доступны решения только по тем задачам, по которым вы получили «Зачтено»).</p>

        <p>Про каждое из решений, в котором вам надо найти ошибку, известно, что ошибку можно исправить, сделав не более 15 правок в коде решения. Правкой считается добавление, удаление или изменение одного символа (т.е. на самом деле считается <a href='/material/p1791'>расстояние Левеншнейна</a>). Ваша задача — найти ошибку, исправить ее, и получить ОК по задаче. Вам даже с запасом дается возможность сделать до 23 правок.</p>

        <p>В интерфейсе поиска ошибки вам сразу дается текстовый редактор, в котором открыт код решения. Я настоятельно рекомендую искать ошибки прямо в этом редакторе, не копируя код никуда к себе (в свою IDE или редактор), и соответственно не используя отладчика и т.п., а только вглядываясь в код глазами. Но в наиболее сложных случаях можете и скопировать код к себе и тщательнее в нем разобраться.</p>

        <p>Решения в разделе «Найди ошибку» есть на разных языках программирования. Не бойтесь искать ошибки даже на тех языках, которых вы не знаете. Я стараюсь не допускать до поиска ошибок те решения, в которых ошибка вызвана именно языковыми проблемами, почти всегда ошибки имеют более алгоритмические причины, и, соответственно, вы можете их найти, даже если не знаете особенностей языка.</p>

        <p>Решения, отправленные через раздел «найди ошибку», я глазами не смотрю и не комментирую (в частности, по ним нельзя получить «зачтено»), и на ваши результаты в общей таблице они не влияют. Конечно, если у вас не получается найти ошибку, можете написать мне, я что-нибудь посоветую.</p>

        <p>Каждое решение, помимо задачи, характеризуется также индивидуальным номером (комбинация из четырех букв или цифр). Используйте этот номер, чтобы различать решения для поиска ошибок по одной и той же задаче; в частности, если вы хотите спросить меня по такому решению, то указывайте и название задачи, и номер решения (ну или просто присылайте ссылку на страничку поиска ошибок именно в этом решении).</p>

        <p>Пока в принципе решений, в которых можно искать ошибки, не очень много; со временем, думаю, их будет становиться больше.</p>
    """, {id: "about_find_mistake"})

reg_about = () ->
    page("Про областную (региональную) олимпиаду", String.raw"""<h1>Про областную (региональную) олимпиаду</h1>
        <p><i>(C) Петр Калинин, 2015-н.в. Этот текст можно свободно распространять на условиях лицензии Creative Commons Attribution-ShareAlike 2.0 (CC-BY-SA). Пожалуйста, при ссылках на этот текст используйте адрес <a href="https://algoprog.ru/material/reg_about">algoprog.ru/material/reg_about</a></i>

        <p><font color="red">Часть информации касается только Нижегородской области, часть относится ко всем регионам.</font></p>

        <p>Областная олимпиада по информатике (формально — региональный этап Всероссийской олимпиады) пройдет в два тура 18 и 20 января.</p>

        <h2>Отбор на область</h2>

        <p>Отбор на нее осуществляется следующим образом. Решения районной (она же городская в ряде городов области — Дзержинске, Арзамасе и т.д.) олимпиады сводятся по каждому классу в единую таблицу, и в этой таблице проводится граница: для каждого класса выбирается проходной балл, и все, кто набрал столько баллов или больше, проходит на область. Кроме того, вне зависимости от результатов районной олимпиады, на областную проходят призеры прошлогодней областной олимпиады.</p>

        <p>Проходные баллы в Нижегородской области в этом году: 150 баллов по 9 классам, и 200 баллов по 10 и 11 классам.</p>

        <h2>Формат областной олимпиады</h2>
        <p>Ну, во-первых, областная олимпиада — это фактически первая серьезная олимпиада для многих из вас. Школьная и районная олимпиады — это скорее игрушки, как по тому, какие задачи предлагаются, так и по организации вообще и по сложности прохода на следующий этап. Сильные школьники должны проходить на область «на классе», т.е. абсолютно уверенно, не прилагая особенных усилий, чисто за счет уже давно имеющихся навыков. Областная же олимпиада — это совсем другое, там и задачи ощутимо более сложные, и организация лучше. Областная олимпиада проходит в одно и то же время по одним и тем же задачам по всей России, так что это фактически крупнейшая олимпиада по информатике в России.</p>

        <p>Областная олимпиада проходит в два тура по пять часов каждый. На каждом туре вам, скорее всего, будут предложены 4 задачи. Примеры прошлогодних задач вы можете посмотреть и попробовать посдавать на этом сайте, в разделе «региональные олимпиады». Но сначала прочитайте до конца этот текст.</p>

        <p>Вообще, если раньше вы в областных олимпиадах не участвовали, то я рекомендую вам в зимние каникулы или в другое время найти свободные пять часов и сесть и порешать какой-нибудь тур с одной из олимпиад последних лет, представляя, что вы реально сидите на олимпиаде. Еще лучше сделать это пару раз. Во-первых, если вы ни разу раньше не писали серьезные пятичасовые туры, это вам будет полезно как минимум с точки зрения понимания того, насколько вам сложно просто думать над задачами 5 часов подряд. Во-вторых, вы поймете примерно, чего вы можете ожидать на области.</p>

        <h2>Языки программирования</h2>
        <p>Набор языков программирования будет определяться жюри. Почти наверняка будут Free Pascal и C++ (Visual Studio, по идее должен быть минимум C++11). Скорее всего будут C# и Python. Будет ли Pascal ABC, я не знаю. Обычно жюри старается включить разумный набор языков, но и вы со своей стороны можете попросить школу официально заявить вам нужный язык и проверить, что он будет. С другой стороны, вроде последние годы серьезных проблем с языками на области не было.</p>

        <p>(Вообще, по поводу общения с жюри в целом — я, конечно, могу что-то написать в жюри, и жюри зачастую прислушивается ко мне, но надо понимать, что я не являюсь официальным представителем вас, вашей школы и т.д., поэтому жюри может и полностью проигнорировать мой вопрос. Поэтому помимо того, что я могу общаться с жюри неофициально, вы лично, а также ваши родители и ваша школа могут общаться с жюри официально, и в случае каких-то серьезных проблем это может быть полезно.)</p>

        <h2>Система оценивания</h2>
        <p>До 2014<sup>1</sup> года включительно областная олимпиада оценивалась по «классической» системе: вы пять часов писали задачи, после чего жюри брало ваши решения и проверяло на заранее подготовленных тестах; при этом каждый тест оценивался отдельно. В процессе этой проверки вы уже ничего не могли исправить в своих решениях.</p>

        <p><sup>1</sup> Областная олимпиада всегда проводится после Нового года, поэтому здесь и ниже, говоря «олимпиада 2014 года», я имею в виду олимпиаду 2013-14 уч. года, и аналогично про другие годы.</p>

        <p>С 2015 года введена новая система — так называемая система с подзадачами и фидбеком (обратной связью). Она работает примерно следующим образом.</p>

        <h4>Подзадачи</h4>

        <p>Во-первых, в каждой задаче выделяются <i>подзадачи</i> — вариации той же задачи, как правило, с меньшими ограничениями или с дополнительными условиями. Например, если в основной задаче сказано $1\leq N\leq 10000$, $1\leq K \leq 10$, и еще задан массив $a$, а в задаче идет речь про то, что надо как-то ходить направо и налево, то подзадачи могут быть, например, такими:</p>
        <ul>
        <li>Подзадача 1: $N\leq 100$ и $K=1$;</li>
        <li>Подзадача 2: $N\leq 100$, но $K>1$;</li>
        <li>Подзадача 3: $K=1$, но $N>100$;</li>
        <li>Подзадача 4: все элементы массива $a$ одинаковы;</li>
        <li>Подзадача 5: в оптимальном решении никогда не надо ходить налево;</li>
        <li>Подзадача 6: никаких дополнительных ограничений нет.</li>
        </ul>
        <p>В каждой подзадаче все не указанные явно ограничения подразумеваются взятыми из основной задачи, например, в четвертой подзадаче подразумевается, что $N\leq 10000$, $K\leq 10$ и нет никаких дополнительных условий по тому, как выглядит ответ.</p>

        <p>Таким образом, подзадачи — это упрощенные варианты основной задачи. Как правило, для каждой подзадачи существует свой алгоритм решения, который проще, чем алгоритм, решающий полную задачу. Поэтому, если вы можете написать решение полной задачи, то пишите его (почти всегда у задачи есть естественное «полное» решение, которое автоматически решает и подзадачи, поэтому если вы можете без проблем его написать, то напишите, и не думайте про подзадачи), а если нет, то пишите решения подзадач.</p>

        <p>При этом подзадачи оцениваются хитро. В некоторых подзадачах, как и раньше, каждый тест оценивается независимо: за каждый тест начисляется несколько баллов, и чем больше вы тестов прошли, тем больше у вас баллов. Но в некоторых подзадачах (обычно в более простых) баллы начисляются по принципу «всё или ничего», т.е. вы получаете не ноль баллов за эту подзадачу <b>только если у вас прошли все тесты этой подзадачи</b>. Т.е. если вы прошли все тесты этой подзадачи, вы получаете полный балл за нее, иначе вы получаете ноль баллов за эту подзадачу. Собственно сами подзадачи обычно оцениваются независимо, но бывает даже так, что очередная подзадача оценивается только если в предыдущих подзадачах все тесты пройдены. Правила оценивания каждой подзадачи указаны в условиях; посмотрите примеры задач прошлых лет, чтобы понять, как это.</p>

        <p>Это обозначает, что вам как правило нет смысла писать какие попало решения. Вы должны написать решение, которое как минимум абсолютно корректно решает как минимум простые подзадачи. Навыки тестирования задач становятся очень важны; если вы все еще не читали <a href="https://notes.algoprog.ru/testing/06_testing_main.html">мой текст</a> про это, то прочитайте,
        а если читали, то прочитайте еще раз.</p>

        <h4>Фидбек</h4>

        <p>Но, чтобы компенсировать увеличение сложности от введения подзадач, также был введен так называемый фидбек. А именно, <b>в течение тура вы можете отправлять ваши решения на проверку</b>. Решения будут проверяться на всех финальных тестах, и после проверки вы можете попросить, чтобы вам сообщили результат этой проверки. Скорее всего, будет использоваться Яндекс.Контест или Codeforces, в котором вам сразу будут сообщать результаты ваших посылок и, узнав результат, вы можете дальше планировать свою работу.</p>

        <p>Бывают три варианта того, что вам сообщают в качестве результата, и это зависит не только от задачи, но и от подзадачи. В каких-то подзадачах вам могут сообщать информацию по каждому тесту, прошел он или нет (или даже если не прошел, то почему — неправильный ответ, превышение предела времени и т.п. — всё очень похоже на то, что вы видите на этом сайте на вкладке «результаты»). В других подзадачах вам могут только сообщать полный балл за эту подзадачу. В третьих подзадачах — первый непройденный тест и вердикт на нем (как на командных олимпиадах). Что именно вам сообщают, обычно указывается в условии.</p>

        <p>При этом может быть установлено ограничение на количество посылок вида, например, «по каждой задаче за весь тур вы можете сделать не более 50 попыток», или что-то подобное. Тогда, после того, как у вас кончились эти 50 попыток, вы, видимо, больше не можете решать эту задачу.</p>

        <h4>Итоговая оценка</h4>

        <p>Итоговая оценка за каждую задачу — это максимальный балл из всех отправленных вами решений. Итоговый суммарный результат, конечно, есть сумма баллов по всем задачам.</p>

        <p>Максимальный балл по каждой задаче — 100, соответственно, общий максимальный балл — 800. В последние годы также ввели новую норму, что есть «первичные» и «итоговые» баллы,
        и итоговые баллы равны первичным, деленным на 8 (т.е. баллы приводятся в диапазон от 0 до 100). Это какие-то бюрократические заморочки, реально все используют «первичные» баллы, но в формальной итоговой таблице могут указывать «итоговые».</p>

        <p>Тут важны два момента. Во-первых, учитываются только <i>отправленные</i> в систему решения, а не просто сохраненные вами в вашем рабочем каталоге. Во-вторых, если одно из ваших решений набирает баллы только по одной подзадаче, а второе — только по второй, но вы не сдали решения, которое набирало бы баллы по обеим подзадачам, то вы получите баллы только за одну подзадачу (от того решения, которое набирает больше баллов). Аналогично если одно решение проходит только два теста из некоторой подзадачи, в которой все тесты оцениваются независимо, а другое решение проходит только два других теста, то вы не получите суммарного балла.</p>

        <h4>Тесты из условия</h4>
        <p>Раньше присутстввало требование, что ваше решение <b>обязано проходить все тесты из условия</b>, даже если эти тесты не попадают под ограничения той подзадачи, на которую вы нацелились. Например, в примере подзадач, приведенном выше, если в условии есть тест с $K=2$, то, даже если вы придумали только решение для $K=1$ и рассчитываете только на баллы за соответствующую подзадачу, то все равно от вас могут потребовать, чтобы вы прошли тест из условия с $K=2$. Если хотя бы один тест из условия не пройден, то вы получаете ноль баллов за это решение.</p>

        <p>Последние годы такого вроде нет, но все равно, будьте к этому готовы. В таком случае обязательно убедитесь, что вы умеете проходить все тесты из условия. Если надо, то добавьте соответствующий <code>if</code>, и просто напишите <code>print</code> с тем ответом, который указан в условии. Типа того:
        <pre><code># пусть в условии есть следующие тесты:
        # n=3, k=1, решается основным алгоритмом
        # n=3, k=2, ответ 42
        # n=5, k=2, ответ 137
        n, k = map(int, input().split())
        if k == 2:
            if n == 3:
                print(42)
            else:
                print(137)
            sys.exit(0)
        # дальше решение для k=1
        </code></pre>
        <p>В условии обычно не так много тестов, и не так уж и сложно написать ряд <code>if</code>'ов, которые будут все эти тесты различать.</p>

        <h4>Явный if</h4>
        <p>Вот выше я уже написал, что тесты из условия можно отличать, написав явный <code>if</code> и <code>print</code>. Ничего в этом зазорного нет. Аналогично вы можете писать явный <code>if</code> для различения подзадач. Если вы придумали одно решение для $K=1$ и еще одно решение для случая, когда все элементы массива $a$ равны, то не стесняйтесь написать в программе <code>if</code>, отличающий эти два случая, и запускать разные алгоритмы в зависимости от теста — именно так, если у вас есть решения двух подзадач, вы их можете объединить в одно решение.</p>

        <p>Кстати, еще важный момент — если ваша программа видит, что ей попался тест, который не попадает ни под одну подзадачу из тех, для которых у вас есть решение, то не надо сразу вылетать. Хуже не будет, если вы для этого теста запустите решение какой-нибудь подзадачи, вдруг тест-другой так и пройдут.</p>

        <h2>Особенности задач</h2>
        <p>Задачи на областной олимпиаде могут быть сильно варьирующимися по сложности. Как правило, самая простая задача будет действительно простой, не требующей ничего знать, примерно уровня 1В. Самая же сложная будет очень сложной, может требовать хитрых знаний, может быть даже уровня эдак 20-го; вообще, год из года только несколько человек по всей России на областных набирают полный балл (800).</p>

        <p>Обычно задачи в туре устроены так: первая задача самая простая. Она обычно не требует ничего знать; вы ее должны решать на полный балл. Вторая задача чуть посложнее. Ее тоже хорошо бы решить на полный балл, но это получается не всегда. Третья обычно довольно сложная, но для самых крутых из вас она вполне должна быть по силам. Четвертая же задача обычно очень сложная, почти наверняка никто в области не решит обе четвертых задачи.</p>

        <p>Но бывает по-разному. То, что написано в предыдущем абзаце — это наиболее распространенная схема, см, например, первый тур 2014 года как один из самых ярких примеров таких сильно распределенных по сложности задач. Но бывает и так (и последние годы все чаще и чаще), что распределение задач по сложности намного менее выражено. Вполне может первая задача оказаться не самой простой, а последняя вполне посильной; вполне может вторая задача оказаться сравнимой по сложности или даже проще первой. Тем не менее обычно задачи все-таки идут более-менее в порядке возрастания сложности.</p>

        <p>Но всегда помните, что в каждой задаче есть подзадачи! Как правило, даже в самых сложных задачах первые подзадачи очень простые; часто в них достаточно перебрать все возможные решения парой вложенных <code>for</code>'ов или т.п.; в крайнем случае написать рекурсивный перебор или какой-нибудь простой алгоритм. Поэтому обязательно решайте не только первые задачи туров, но и последние (пишите в них простые подзадачи)! Обязательно постарайтесь, чтобы <b>по каждой задаче у вас было ненулевое количество баллов!</b></p>

        <p>Вообще, на самом деле, как показывает опыт, вполне реально в каждом туре набрать хотя бы 200 баллов, поэтому и постарайтесь это сделать. В идеале надо решать полностью первые две задачи каждого тура, но, даже если не получилось, то недостающие до 200 баллы можно набрать в более сложных задачах. 400 баллов в сумме за два тура — это вполне достойный результат. 
        (И почти всегда в Нижегородской области это обозначает статус призера.) 
        (Конечно, это общая рекомендация; ясно, что сильные школьники должны набирать больше, а для не очень сильных и 200-300 в сумме будет хорошо. Но тем не менее баллов 150 в каждом туре обычно можно набрать вообще не думая, поэтому 200 за тур — это хорошая цель для большинства из вас.)</p>

        <p>Для сравнения, баллы прохождения на собственно Всероссийскую олимпиаду обычно примерно такие: по 9 классам — 450-580, по 10 классам — 500-600, по 11 классам 550-650. Проход на Россию — это очень и очень хороший результат. (Ну, для всех, кроме тех, кто на Россию уже ездил :) )</p>

        <p>Возможно, будет ввод из файла, хотя скорее всего будет будет только ввод с клавиатуры.</p>

        <h2>Про языки программирования</h2>

        <p>Про питон: на питоне вы, возможно, не сможете в принципе решить отдельные задачи на полный балл (возможно, не сможете решить вторую, а может быть, даже первую) — потому что решение не будет успевать по времени. (Но это не обозначает, что любые проблемы в задаче надо списывать на то, что это питон. Конечно, решения на питоне могут не успевать по времени из-за того, что это питон, но также они могут не успевать просто потому, что это неоптимальное решение. Поэтому обязательно (!) оцените сложность алгоритма и прикиньте, успел ли бы такой алгоритм на C++; если вы придумали явно неоптимальный алгоритм, то надо все-таки придумать нормальный алгоритм.) Но эту невозможность решить задачи на полный балл вы можете компенсировать тем, что на питоне вы можете заметно быстрее и легче писать небольшие подзадачи в сложных задачах, да и первую задачу вы, возможно, напишете быстрее, чем ваши друзья, пишущие на C++. С другой стороны, если вы хотите иметь хороший результат на областной олимпиаде, то, конечно, надо бы уже знать C++ (но если вы хотите иметь хороший результат, то наверное вы уже минимум на 3 уровне, а тогда про C++ вы уже читали).</p>

        <p>Если же вы знаете и C++, и питон, то, конечно, по каждой задаче выбирайте, на каком языке лучше писать.</p>

        <p>Паскаль по производительности сравним с C++, поэтому там проблем со временем работы быть не должно.</p>

        <h2>Тактика поведения на туре</h2>
        <p>Во-первых, все мои рекомендации из <a href="/material/school_olympiad">текста про школьную олимпиаду</a> справедливы. Прочитайте все условия сразу, еще до того, как что-то программировать. Контролируйте время, не зависайте над одной задачей надолго. Как я уже писал выше и как писал в тексте про школьную олимпиаду, старайтесь, чтобы по всем задачам у вас был не ноль. Сохраняйте решения, чтобы, если у вас зависнет компьютер или выключится электричество, решения не пропали; вообще, полезно привыкнуть нажимать «сохранить» (F2 или Ctrl-S в разных средах программирования) каждые минуту-другую.</p>

        <p>Обязательно внимательно сравнивать ответ с примером. Один раз был случай, когда участник выводил два числа на двух разных строках, а в задаче требовалось вывести два числа на одной строке — и тестирующая система нашего местного жюри отказывалась засчитывать это решение (хотя это и не соответствовало требованиям центрального всероссийского жюри). Конечно, это вина жюри, но школьнику от этого было не сильно легче (после тура мы отапеллировали эти баллы, но время на туре было все равно потрачено). Поэтому если вы видите, что ваша программа выводит не совсем то, что в примере, тщательно перепроверьте, правда ли, что ваше решение правильное.</p>

        <p>Но наличие фидбека и четко выделенных подзадач вносит свои нюансы в тактику. Во-первых, если вы видите, что задача простая, то напишите ее, сдайте, убедитесь, что у вас 100 баллов, и забудьте про нее вообще. Более конкретно: если вы считаете, что какая-то задача простая, если вы думаете, что там особенно негде ошибиться, то напишите ее, слегка потестируйте, не тестируйте подробно (!) и сдайте. Если у вас 100, то забудьте про нее. Если же нет, то начинайте тестировать. Не тратьте время на простые задачи, если вы можете сразу проверить, работают они или нет. (Если есть ограничение на количество попыток по задаче, то сказанное выше справедливо, если у вас еще было немного попыток по задаче. В таком случае помните про ограничение количества попыток по задаче; чем меньше у вас остается попыток, тем тщательнее тестируйте и аккуратнее расходуйте попытки.)</p>

        <p>В более сложных задачах часто бывает полезно написать первую подзадачу, если она простая и пишется недолго. А именно, подумайте над сложной задачей. Если сразу ничего, что могло бы решить задачу полностью, в голову не приходит, то попробуйте придумать решение к первой подзадаче. Если получилось придумать простое решение, то напишите его и сдайте — у вас уже станет не ноль баллов, и заодно вы будете уверены, что вы понимаете задачу верно. Наконец, простое решение потом можно использовать для стресс-тестов. Но это только для не самых простых задач; в простых задачах не тратьте время на подзадачи, если вы можете написать полностью задачу!</p>

        <p>Наоборот, если вы написали «полное» решение, оно на ваших тестах работает, но у жюри упорно набирает мало баллов, то можно написать простое решение первой подзадачи, отправить его, убедиться, что уж оно-то верное, и дальше написать стресс-тестирование. Очень полезно заранее научиться стресс-тестированию (см. еще раз <a href="https://notes.algoprog.ru/testing/06_testing_main.html#stresstesting">текст про тестирование задач</a>)!</p>

        <p>Контролируйте время до конца тура. Если вы придумали сложное решение, которое может решить сложную задачу полностью, но видите, что вы рискуете не успеть его дописать (и помните, что вам наверняка придется его отлаживать и тестировать! — вряд ли оно сразу 100 наберет), то может быть проще прерваться и написать простое решение по той же задаче, чтобы уж гарантированно иметь не ноль.</p>

        <p>Если есть ограничение на количество попыток по задаче, то контролируйте количество оставшихся попыток. 50 попыток — это реально много и в подавляющем большинстве случаев достаточно, но если вы будете их активно расходовать, то они могут внезапно кончиться. Вообще, по всем задачам, кроме самых сложных, думаю, реально использовать не больше 5 попыток за тур.</p>

        <p>Конечно, даже если самую простую подзадачу вы уже решили, это не значит, что надо сразу бросаться на полное решение — все вышеописанные соображения применимы, но к следующим подзадачам. Если не получается придумать или написать полное решение, то напишите решение к еще одной подзадаче, объедините с написанным ранее и сдайте. Помните, что подзадачи сделаны не просто так, каждая подзадача имеет какое-то более простое решение.</p>

        <p>Не теряйте решения! Вообще, постарайтесь сохранять все свои решения, которые вы отправляете в систему и которые там набирают какие-то баллы. Будет очень неприятно, если вы решили простую подзадачу, потом стали писать общий алгоритм, он в результате не заработал даже для простой подзадачи, а решения простой подзадачи у вас уже нет. Конечно, правило оценки лучшего решения вас частично от этого спасает, но лучше подстрахуйтесь. Еще хуже если вы решили первую подзадачу, начали писать вторую подзадачу, она у вас даже заработала, но при этом сломалось решение первой. Вам бы объединить два решения, но для этого надо иметь решение первой подзадачи.</p>

        <p>В частности, не полагайтесь на то, что вы сможете скачать решение из тестирующей системы! Система может заглючить, может потерять ваши решения, и т.д. — если и вы их тоже потеряете, все будет совсем плохо. А если решения останутся у вас на компьютере, то, на худой конец, вы сможете их использовать для апелляции.</p>

        <p>Вообще, я бы считал, что у успешного участника должны быть примерно следующие «вехи» во времени (конечно, это «средняя температура по больнице», т.е. варьироваться может очень и очень сильно, но тем не менее) (время везде от начала тура):</p>
        <ul>
        <li>0:10: прочитаны все задачи;</li>
        <li>0:45-1:00: есть 100 по одной из задач;</li>
        <li>2:00-2:30: есть 100 по двум задачам или в крайнем случае 100+60;</li>
        <li>3:30: написаны простые подзадачи в двух сложных задачах, соответственно есть 100+100+30+20 или в крайнем случае 100+60+30+20;</li>
        <li>оставшееся время добиваем недорешанные задачи.</li>
        </ul>
        <p>Еще раз: это очень среднее, и это «идеал» для такого «среднего», и это из предположения, что задачи сильно распределены по сложности. Но это очень грубый ориентир.</p>

        <p>Да, все написанное про подзадачи выше подразумевает, что у каждой задачи есть естественное правильное решение, автоматически решающее и все подзадачи тоже; в таком случае вы теоретически можете решить задачу полностью, не думая про подзадачи вообще; так обычно и бывает. Но я не исключаю, что могут быть и задачи, где подзадачи различны настолько, что даже в самом простом и правильном решении удобнее их рассматривать отдельно.</p>

        <h2>Особенности C++</h2>
        <p>Если вы пишете на C++, то есть ряд особенностей, которые вам полезно и даже необходимо знать. (Этот же текст есть в <a href="http://blog.algoprog.ru/cpp/">блоге алгопрога</a> и в <a href="https://notes.algoprog.ru/cpp/additional.html">теории про C++</a>).</p>

        <h4>Быстрый ввод-вывод</h4>
        <p>Стандартный ввод/вывод через <code>iostream</code> (т.е. с использованием <code>cin</code>/<code>cout</code>) по умолчанию работает медленно на больших данных. Если вам надо ввести, допустим, 100000 чисел, то с использованием <code>cin</code> вы наверняка получите time limit; аналогично если вам надо выводить много данных. Это связано с двумя проблемами.</p>

        <p>Во-первых, медленно работает <code>endl</code> (для тех, кто понимает — вывод в <code>cout</code> буферизуется, но <code>endl</code> каждый раз сбрасывает буфер, реально выводя данные на диск, а реальный доступ к диску работает медленно). Поэтому не используйте <code>endl</code> вообще, используйте <code>'\n'</code>.</p>

        <p>Во-вторых, есть еще проблема синхронизации с <code>stdio</code> (не буду сейчас подробнее писать, что это значит). Чтобы эту проблему побороть, есть три способа:</p>
        <ul>
        <li>Работать с файлами, а не с клавиатурой/экраном (если это будет допустимо на олимпиаде). У <code>fstream</code> таких проблем со скоростью работы нет.</li>
        <li>Использовать для ввода/вывода конструкции из <code>stdio.h</code> (<code>scanf</code> и <code>printf</code>), а не из <code>iostream</code>.</li>
        <li>Написать в самом начале программы две магические строчки (их надо выучить наизусть): 
        <pre>
        std::ios_base::sync_with_stdio(false);
        std::cin.tie(nullptr);
        </pre></li></ul>

        <p>Лично я вам рекомендую использовать первый или последний вариант.</p>

        <p>Еще раз: есть <b>две</b> проблемы: одна с <code>endl</code>, другая с синхронизацией stdio и iostream. Одна решается тем, что вы не используете <code>endl</code>, другая — вот одним из трех описанных выше способов. Вам надо решить <b>обе</b> проблемы, т.е. и не использовать <code>endl</code>, и как-то разобраться с синхронизацией. Типичная ошибка — написать в начале программы этот страшный код с <code>sync_with_stdio</code>, но выводить все равно через <code>endl</code>. Получите time limit exceeded все равно.

        <h4>Установка стека в Visual Studio</h4>
        <p>В популярных компиляторах C++ по умолчанию установлен очень маленький размер стека. Если в вашей программе глубокая рекурсия (например, если вы пишете поиск в глубину), то программа может упасть.</p>

        <p>В GCC попросить большой размер стека из самой программы невозможно, это должно настраивать жюри при настройке компиляции. На нормальных олимпиадах жюри прописывает большой размер стека в настройки компиляции, будет ли это на нашей области — я не знаю.</p>

        <p>Но в Visual Studio можно установить необходимый размер стека прямо из программы примерно следующей конструкцией (проверьте заранее!): <code>#pragma comment(linker, "/STACK:32000000")</code>, здесь число — это необходимый вам размер стека в байтах (в этом примере 32 миллиона байт, т.е. примерно 32 Мб). Размер стека можете посчитать в уме исходя из вашей программы, а можете и подобрать опытным путем — 32-64 Мб обычно достаточно. Учитывайте еще, конечно, ограничение по памяти.</p>

        <p>Поэтому если жюри на олимпиаде нормально настроит стек в gcc (это должно быть видно в строках компиляции gcc в памятке участника), то сдавайте под gcc. Иначе если ваше решение под gcc не влезает в стек, то добавьте эту магическую строку и сдавайте под Visual Studio.</p>

        <h2>Про надежность тестирующих систем</h2>
        <p>Скорее всего будет использоваться Яндекс.Контест или Codeforces. С любой системой возможны различные проблемы, например, тестирующая система нашего жюри может неправильно оценивать корректность решений (см. выше пример с выводом в одной строке или на разных строках), а конкретно Яндекс.Контест печально известен тем, что регулярно не справляется с нагрузкой на первом туре и тестирует решения по несколько часов (!); на втором туре все обычно работает нормально. Правда, последние годы вроде с этим уже не было проблем; надеюсь, что и в этом не будет. Но в любом случае, будьте готовы к тому, что что-то пойдет не так, и тогда думайте головой и действуйте по обстоятельствам. Например, если ваши решения тестируются долго — не паникуйте, а просто переключайтесь на другие задачи, ну и тщательнеее сами тестируйте те решения, которые вы отправляете на проверку.</p>

        <h2>Дополнительные замечания</h2>
        <h4>Не пугайтесь!</h4>
        <p>Год из года регулярно многие школьники на областной олимпиаде показывают результат хуже, чем от них можно было ожидать. Возможно, многие пугаются непривычной системы задач, системы тестирования и т.д. Так вот, не пугайтесь. Вы вполне способны показать весьма неплохой результат.</p>

        <h4>Ищите обходные решения проблем</h4>
        <p>Если у вас что-то не получается, вы не помните, как что-то сделать в вашем языке программирования и т.п. — подумайте, как эту проблему можно обойти. Если вы не помните простого способа что-то сделать, то, может быть, есть более сложный? Если у вас не работает какой-то код, может быть, можно написать как-то по-другому, пусть и сложнее, но надежнее? И т.д.</p>

        <h4>Неполадки на туре</h4>
        <p>Если у вас на туре что-то из оборудования работает не так, как вы хотите, сразу же спрашивайте жюри! Если, например, не работает клавиатура, или если программа не запускается с очень непонятными сообщениями об ошибках, то сразу зовите жюри! У нас в ННГУ часто бывает так, что антивирус мешает нормальной работе (например, удаляя exe-шник сразу после его создания, или очень задерживая запуск программы) — сразу зовите жюри и просите отключить антивирус. Если жюри решает вашу проблему долго, требуйте компенсации времени.</p>

        <h4>Не уходите, не убедившись, что все закончилось</h4>
        <p>Раньше после каждого тура у вас был  обед, потом разбор задач и объявление итогов тура. Последние годы эту программу сокращают, но в любом случае я очень вам рекомендую дождаться окончания официальных мероприятий, в частности, если будут оглашать какие-то итоги, выдавать какие-нибудь бумажки с результатами, то дождаться их и проверить, что все подсчитано верно. Бывают проблемы с подсчетом баллов, бывает еще что-то, поэтому лучше дождитесь и проверьте, что все соответствует вашим ожиданиям. Конечно, вы по идее должны знать свои баллы за счет фидбека, но лучше все-таки дождитесь бумажки.</p>

        <p>Если окажется, что вам неправильно посчитали баллы, то можно попробовать как-то поругаться с жюри. Но если вы уйдете раньше и не получите бумажку с результатами, то ругаться будет сложнее. (Конечно, может быть, что по программе ничего не будет, и никаких бумажен выдавать не будут, тем более что последние годы вы видите всё в системе, поэтому если никакие бумажки вообще не выдают, то ждать не нужно.)</p>

        <h4>Укажите меня своим преподавателем</h4>
        <p>Как я где-то уже писал, <b>пожалуйста, укажите меня своим преподавателем</b>, если наши занятия были для вас достаточно полезными. А именно, попросите школу указать меня преподавателем в заявке. На регистрации на олимпиаду перед первым туром обычно можно проверить, кто у вас указан и, если хотите, наверное можно будет исправить.</p>

        <h4>Прочитайте этот текст еще раз перед олимпиадой</h4>
        <p>Я могу вспомнить что-то и добавить в этот текст новую информацию. Поэтому прочитайте его перед олимпиадой еще раз.</p>

        <h4>Местное жюри и вариации</h4>
        <p>Все написанное выше написано по мотивам официальных правил областной олимпиады. К сожалению, наше местное жюри не всегда понимает эти правила до конца. (Правила, равно как и условия задач и тесты, составляются централизованно на всю Россию.) Например, в 2015 году они не хотели обеспечивать фидбек. Поэтому будьте готовы к каким-нибудь вариациям (например, они могут сказать, что финально будет оцениваться только то решение, которое вы оставите у себя в рабочем каталоге, а не то, которое вы сдавали). Мое мнение — пока эти вариации не сильно вам портят жизнь, не стоит ругаться с жюри; если же это что-то серьезное, то будем ругаться.</p>

        <p>Например, если они хотят, чтобы вы оставляли свое решение в рабочем каталоге — ну так сохраните свое лучшее решение и оставьте, не так уж это и сложно, так и вам и мне и жюри спокойнее. Конечно, если в итоге вы сохраните по ошибке не то решение и потеряете баллы из-за того, то будем ругаться, но лучше до этого не доводить.</p>

        <p>Но последнее время вроде никаких таких особенностей не было.</p>

        <p>Полные официальные Требования к проведению регионального этапа, которые обязательны к соблюдению во всех регионах, можно почитать <a href="https://olympmo.ru/news_img/20242025/vos/reg/treb-vos-reg-2025.pdf">вот здесь</a> (тут один документ на все предметы, там есть подразделы по предметам). Рекомендую почитать всем, кто участвует в регионе не первый раз и серьезно рассчитывает на высокий балл.</p>

        <h1>Советы от <b><a href="https://algoprog.ru/user/254947"><span class="_client_components_UserName__name" style="color:#7b0000">Алексея Упирвицкого</span></b></a></h1>

        <p>(c) Алексей Упирвицкий, CC-BY-SA, 2019</p>

        <p>В этом тексте представлены мои личные идеи относительно регионального тура ВСОШ. Я основываюсь на своем опыте и опыте своих товарищей.</p>

        <p>Самым лучшим способом подготовки к региону будет прорешивание прошлогодних регионов и подготовка своей стратегии.
        Так как тур идет 5 часов, ближе к концу вы можете устать и быть куда менее продуктивными нежели в самом начале, и если вы не распределите время заранее, то можете что-то не успеть. Поэтому я предлагаю вам написать 2-3 тура и засечь, сколько времени у вас занимает та или иная задача. </p>

        <p>Например: <br/>
        задача А — 45 минут;<br/>
        задача В — 1.5 часа; <br/>
        что-то разумное в С — час;<br/>
        полный перебор в Д — 20 минут.</p>

        <p>Имея такой приблизительный план, вы не будете терять время на туре, думая: что бы мне сейчас порешать. </p>

        <p>Вообще, в идеале стратегия должна выглядеть так:</p>

        <p>А — до часу. Если так происходит, что через час задача А не решена — нельзя отчаиваться и продолжать ее пихать. Нужно переключиться на задачу В и полностью погрузиться в работу над ней.</p>

        <p>В — еще час после А вы решаете задачу В. Записываете все свои мысли и пишете какое-нибудь решение. Пусть не на 100, но на 40-60 баллов оно должно быть. </p>

        <p>Теперь, когда прошло 2 часа от начала тура, я рекомендую оставить А и В и открыть D (конечно, нельзя оставлять задачу если вы прямо сейчас ее пишете или у вас есть абсолютно верная идея на очень много баллов).</p>

        <p>Наверное, большинство из вас удивится выбору задачи D, но это правильный выбор. Всегда в этой задаче есть подзадача на ~10 баллов, которая сдается полным перебором (вообще, я рекомендую потренироваться сдавать полный перебор заранее, это полезный навык — быстро и аккуратно написать его). Таким образом вы сможете избавиться от задачи D и отдохнуть от А и В. Возможно, это позволит взглянуть на них по-новому и придумать новое решение. </p>

        <p>Эти полчаса не думайте о других задачах. Да, это сложно, так как написание перебора зачастую не требует активной мыслительной деятельности, но вам нужен перерыв.</p>

        <p>Таким образом, прошло 2.5 часа от начала контеста, у вас сдана D на максимум который может набрать тупняк, и вы остаетесь с тремя задачами. Сейчас нужно посмотреть на А и В. Уделите каждой из них по полчаса. Скорее всего после перерыва вы сможете сгенерировать новые идеи. Прошло 3.5 часа, и нужно открывать задачу С. По моему мнению, задача С — это самое странное, что есть на регионе (но об этом позже), именно поэтому я рекомендую ее открывать последней. </p>

        <p>Дальше все зависит от задачи. В 2017-2018 году была задача 
        <a href="https://algoprog.ru/material/p113763">«Красота фейерверка»</a> и она была простой. Даже проще В, на мой взгляд (и многих других участников того года).
        Но с другой стороны, порой бывают очень сложные С. Поэтому важно быстро понять, сдавать ли ее на 100 или на частичные. Мой совет: первые  полчаса старайтесь придумать ее на 100, а если не получилось — полчаса сдавайте ее на частичные баллы. Так у вас останется полчаса, и идеальной будет разбалловка вида: 100 100 50± 20±
        Если она не такая, не надо отчаиваться, потому что получить идеальный результат сложнее, чем кажется.</p>

        <p>Теперь стоит сказать несколько слов про каждую позицию на контесте:
        Я специально не буду рассматривать задачи с прошлого года [текст был написан перед олимпиадой 2020 года, поэтому речь идет про олимпиаду 2019 года]. Почему — объясню позже.</p>
        <p>A — обычно простая задача. Очень часто формула, например: <a href="https://algoprog.ru/material/p113757">«Улучшение успеваемости»</a> или <a href="https://algoprog.ru/material/p113443">«Автоматизированное управление доставкой»</a></p>
        <p>В — конструктив/дп/бин-поиск не сложные темы. Просто нужно догадаться до решения. Очень часто помогает перебор всех известных вам алгоритмов, которые хоть как то могут сюда подойти.</p>
        <p>С — обычно что то очень идейное или структуры данных. Хорошим результатом будет сдать все подгруппы, не требующие мощных структур, и, может, еще одну с использованием неоптимальных структур. </p>
        <p>D — Что то очень сложное, что порой практически никто не сдает в стране. </p>

        <p>Почему я не касаюсь прошлого [2019] года? Потому что тур был очень сложным. Неоправдано сложным. По моему мнению, в этом [2020] году тур будет сильно проще. Например, как в 2016-17 или 2017-18 году. </p>

        <p>Мое мнение относительно тем по задачам: </p>
        <p>А — будет один конструктив и один бинпоиск</p>
        <p>В — думаю, что будет алгоритм на графах/конструктив/простые структуры данных. Например, дерево отрезков.</p>
        <p>С — в последние годы была подозрительная мода на интерактивные задачи, поэтому будьте готовы к ним. Будет забавно, если опять будет Декартово Дерево. Поговаривают про дп и его оптимизации. Но я больше думаю про что-то на графах/структурах данных. В задаче С всегда есть подвох. Она либо простая, либо сложная. Про нее не понятно, что можно дать, поэтому изворачиваются как могут.</p>
        <p>D — какая-то сложная, никому не известная тема, или старый добрый баян. Тут возможны оптимизации дп. Но если это так, то всем рекомендую оптимизацию buben вида: ну давайте переберем не все, а ±константу. Например, если в дп вам приходится пересчитывать значение через все предыдущие, но у вас есть подозрение, что вас не интересуют некоторые, смело пишите что-то в духе
        <pre><code>for (int i = 0; i < n; ++i)
            for (int j = i; j >= max(0, i - buben); --j)
        </code></pre>
        Возможно, будут очень сложные строки.</p>

        <p>Вообще, есть такая тема как Сканлайн, и она может быть на любой позиции, потому что на нее можно накрутить практически что угодно.</p>

        <p>Также у каждого из вас есть тема, про которую вы уверены, что ее не будет, и потому не нужно ее учить. Поверьте моему опыту, именно она и будет. Так что повторите все, по чему у вас просадки. Сдайте пару прошлых регионов. Потренируйтесь писать перебор.</p>

        <p>Постарайтесь изучить корневую эвристику. Она позволяет делать полезные трюки и получать много баллов.</p>

        <p>Еще: подзадачи вам даны не только для того чтобы пихать, а для того чтобы тестировать! Что я имею ввиду: у вас есть идея на много баллов но почему то wa. Вы берёте и начинаете по частям код разбирать.</p>

        <p>Например есть подзадача на квадрат и есть на N log N.
        Вот вы берёте и основную идею оставляете, а то что делает лог заменяете на простой алгоритм, работающий за линию.
        Так вы можете понять в какой части кода ошибка.</p>

        <p>Вообще не рекомендую сразу писать код на 100.
        Лучше выделить несколько ключевых идей и протестировать их так.
        Да, вы потратите время, но избавите себя от возможного дебага.</p>
        <p>Ещё иногда подзадачи могут натолкнуть на правильное решение. 
        Берете простую подзадачу, которую знаете как решать, берете более сложную и начинаете думать, чем таким эти задачи отличаются, можно ли из решения простой подзадачи сделать решение сложной, или наоборот, сложную подзадачу свести к простой.</p>

        <p>Полезные статьи на codeforces (<i>это в первую очередь для уже реально крутых школьников, уровня эдак 6-7+ — П.К.</i>):<br/>
        <a href="https://codeforces.com/blog/entry/44351">https://codeforces.com/blog/entry/44351</a><br/>
        <a href="https://codeforces.com/blog/entry/63823">https://codeforces.com/blog/entry/63823</a><br/>
        <a href="https://codeforces.com/blog/entry/45223">https://codeforces.com/blog/entry/45223</a><br/>
        </p>""", {id: "reg_about"})

label_ochn = () ->
    label("""
        <h3>Лицей 40</h3>
        <p><b>Только для учеников лицея 40</b></p>
        <p>Занятия проходят по вторникам в <b>14:30</b> в КЦ.</p>
        <ul>
        <li>Новичкам (кто не ходил ни разу и не решал задач заочно) 
            <b>рекомендуется, прежде чем приходить на занятие, зарегистрироваться на сайте и решить хотя бы одну задачу</b>. 
        </li>
        <li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, 
            могут приходить каждую среду.</li>
        </ul>
        <!--<h3>ВШЭ</h3>
        <p><b>Только для школьников</b></p>
        <p>Занятия проходят по воскресеньям в нижегородском филиале ВШЭ по адресу ул. Костина, д. 2б (вход с пл. Горького, дверь справа от центра оперативной печати, проходите здание насквозь и во дворе вход в нужное здание), аудитория 203 (2 этаж).</p>
        <p><b>Берите с собой паспорт или свидетельство о рождении.</b> Если вас не пускает охрана, звоните мне.</p>
        <ul>-->
        <!--<li>Проходит два занятия: с 14.00 до 15.30 и с 15.30 до 17.00.</li>-->
        <!--<li>Занятие проходит с 14.00 до 17.00.</li>
        <li>Новичкам (кто не ходил ни разу и не решал задач заочно) <b>прежде чем приходить на занятие, 
            необходимо зарегистрироваться на сайте и решить хотя бы одну задачу</b>. 
            Исключение — занятия для новичков, которые объявляются особо (обычно второе занятие года), 
            туда можно приходить всем новичкам вообще. Осенью 2021 года такое занятие состоится 26 сентября.</li>
        <li>Те, кто уже был хотя бы один раз, или решил в курсе хотя бы одну задачу заочно, могут приходить каждое воскресенье.</li>
        <li>Чтобы вам точно хватило компьютеров, 
            <b><a href=\"/checkins\" onclick=\"window.goto('/checkins')();return false;\">зарегистрируйтесь на занятие</a></b>. 
            Без регистрации приходить можно, но если компьютеров хватать не будет, то преимущество будет у тех, кто записался. 
            Каждую неделю надо регистрироваться заново.</li>-->
        <!--<li>Регистрироваться на два занятия нельзя, но те, кто записались на 14.00, могут остаться на второе занятие, 
            если будут места. Те, кто со своими ноутбуками, тоже могут приходить на оба занятия.</li>-->
        </ul>
        <h3>ННГУ</h3>
        <p><b>Только для школьников</b></p>
        <p>Занятия проходят по воскресеньям в 14.00 в 2 корпусе ННГУ, аудитории 110 и 114.</p>
        <p>Есть занятия для начинающих и для продвинутых учеников. Занятия для начинающих ведет Диана Алясева (студентка ИИТММ, призёр 1/4 ICPC), для продолжающих Илья Хлюстов (дважды финалист ICPC, член жюри Нижегородской городской олимпиады им. В.Д. Лелюха, ведущий инженер в Huawei NNRC).</p>
        <p>Контакты: Диана: вконтакте: <a href="https://vk.com/diall3819">https://vk.com/diall3819</a>, Илья: телеграм: <a href="https://t.me/Riladavin">@Riladavin</a>, вконтакте: <a href="https://vk.com/ikhlyustov">https://vk.com/ikhlyustov</a>.
        <hr>""")

contacts = () ->
    label("""
        <div class=\"algoprog-contacts\">
        <h2>Контакты</h2>
        <b>Петр Андреевич Калинин</b> (занятия в лицее 40, заочные занятия)
        <ul>
        <li>e-mail: petr@kalinin.nnov.ru</li>
        <li><a href=\"https://vk.com/petr.kalinin\">https://vk.com/petr.kalinin</a>*</li>
        <li>+7(910)794-32-07**</li>
        <li>Телеграм: <a href="https://t.me/pkalinin">@pkalinin</a></li>
        <li>Телеграм-канал с важными объявлениями: <a href=\"https://t.me/algoprog_news\">@algoprog_news</a>. 
            Тут объявления в первую очередь про очные занятия. 
            Рекомендую всем подписаться. (Если ссылка на t.me заблокирована, просто в телеграмме поищите канал «algoprog_news».)</li>
        <li>Телеграм-чат для всех учеников алгопрога: <a href="https://t.me/+Ff0fS3PMo85iNmZi">Алгопрог-чат</a>.
        Чтобы вступить, сначала укажите у себя в профиле на алгопроге ваш аккаунт в телеграмме, иначе вас не пустят.</li>
        </ul>
        <p>Мои контактные данные можно свободно распространять по любым вопросам, связанным с работой курса или 
        с олимпиадным программированием в Нижегородской области вообще.</p>
        <p><b>Если у вас есть какие-то проблемы с работой в курсе, какие-то вопросы и т.п., сразу пишите мне!</b></p>
        <p>* Политика добавления в друзья во вКонтакте: я не возражаю, если вы добавите меня в друзья, 
        но я буду добавлять только тех, кто уже давно и успешно занимается.</p>
        <p>** Пожалуйста, звоните по телефону только в экстренных случаях. Если ваш вопрос не очень срочный и может 
        подождать несколько часов, напишите мне любым указанным выше способом — во вКонтакте, в Телеграм или на email.</p>

        <!--<b>Николай Михайлович Рябикин</b> (занятия в ННГУ)
        <ul>
        <li>e-mail: n.m.ryabikin@yandex.ru</li>
        <li><a href=\"https://vk.com/ryabsky\">https://vk.com/ryabsky</a></li>
        <li>Телеграм: <a href="https://t.me/ryabsky">@ryabsky</a></li>
        <li>Телеграм-канал с важными объявлениями: <a href="https://t.me/joinchat/c2vT24ZFY782Yzli">Algoprog ННГУ — Объявления</a></li>
        </ul>
        </div>-->
        <hr>""")

links = () ->
    label("""
        <h2>Полезные ссылки</h2>
        <font size=\"+1\"><a href=\"https://www.dropbox.com/s/1n5g6w6hkryqwcw/Free%20Pascal%202.6.4%20-%20installer%20.exe?dl=0\">
            Ссылка на установщик Free Pascal</a></font>
        <hr>
        <font size=\"+1\">Установщики питона: <a href=\"https://www.python.org/ftp/python/3.5.2/python-3.5.2.exe\">сам Python</a> 
            и <a href=\"https://wingware.com/pub/wingide-101/5.1.12/wingide-101-5.1.12-1.exe\">Wing IDE 101</a></font>
        <hr>
        <font size=\"+1\">\n<a href=\"https://petr-kalinin.github.io/keyb/\">Клавиатурный тренажер</a> на скорость набора программистского текста. </font> 
        Ориентировочные результаты: 150 символов/минуту — довольно неплохо, 200 символов/минуту — очень круто. 
        <a href=\"/material/in20938\" onclick=\"window.goto('/material/in20938')();return false;\">Подробнее</a>.
        <hr class=\"algoprog-main-page-separator\">
        <h2>Текущие олимпиады и т.п.</h2>""")

telegram_bot = () ->
    page("Про ваш телеграм-аккаунт", """
        <h1>Про ваш телеграм-аккаунт</h1>
        <p>В профиле на алгопроге вы можете указать id своего телеграм-аккаунта. Указать надо именно id (он состоит только из цифр),
        а не username и не телефон. Чтобы узнать ваш id, зайдите в телеграм и 
        найдите бота <a href='https://t.me/getmyid_bot'>@getmyid_bot</a> (или наберите в поиске @getmyid_bot 
        и выберите из списка бота с названием 'Get My ID'), нажмите на кнопку запуска 
        (или напишите /start), бот отправит вам сообщение с вашим id.</p>
        <p>Это позволит вам:</p>
        <ul>
        <li>вступить <a href="https://t.me/+Ff0fS3PMo85iNmZi">в телеграм-чат для всех учеников алгопрога</a>,</li>
        <li>получать уведомления о зачтенных/проигнорированных решениях, и о комментариях к решениям, для этого начните диалог с <a href="https://t.me/algoprog_bot">ботом алгопрога @algoprog_bot</a>.
        </li>
        </ul>
        """, {id: 'telegram_bot'})


export default level_about = () ->
    return level("about", "О курсе", [
        module20927_1(),
        module20927_3(),
        label("<h2>Самая главная информация</h2>\n\n<div><a href=\"https://www.youtube.com/watch?v=kTC7z1NpOb4\">\nВводная видеолекция про занятия на алгопроге (дублирует основную информацию ниже)</a></div>\n\n<div style=\"height:1ex;\"></div>\n\n<div><b>Для начала</b></div>"),
        module20927_5(),
        module20927_7(),
        module20927_9(),
        label("<div style=\"height:1ex;\"></div>\n\n<div><b>Про то, как тут заниматься</b></div>"),
        work_with_site(),
        module20927_13(),
        module20927_15(),
        module20927_17(),
        dist_cons(),
        #module20927_17_ochn_high(),
        telegram_bot(),
        label("<div style=\"height:1ex;\"></div>\n\n<div><b>Про оплату</b></div>"),
        pay(),
        label("<div><a href=\"/payment\" onclick=\"window.goto('/payment')();return false;\">Оплатить занятия</a></div>"),
        module20927_21(),
        label("<div style=\"height:1ex;\"></div>\n\n<div><b>И еще немного...</b></div>"),
        module20927_23(),
        module20927_25(),
        module20927_27(),
        # label("<div><a href=\"https://docs.google.com/document/d/1YrAWXEK4ak9lE07Sx8C7vLZ0kgJav86IouaNU91GNGM/pub\">\nПримерный план уровней</a></div>"),
        module20927_29(),
        achieves(),
        tshirts(),
        about_find_mistake(),
        # module20927_33(),
        module20927_35(),
        module20927_37(),
        label("<div style=\"height:1ex;\"></div>\n\n<div><b>«Стажировка» на алгопроге</b></div>"),
        module20927_39(),
        label("<h2>Очные занятия</h2>\n<font size=\"+1\"><a href=\"/material/ochn\" onclick=\"window.goto('/material/ochn')();return false;\">Подробная информация</a></font><br>"),
        module16024_1(),
        label_ochn(),
        contacts(),
        links(),
        school_olympiad(),
        koshp(),
        raion_olympiad(),
        reg_about(),
        #nnoi(),
        #label("<p><a href=\"https://codeforces.com/blog/entry/70187\">Олимпиада Технокубок</a></p>"
        #label("<p><a href=\"https://olympiads.ru/zaoch/\">Открытая олимпиада школьников по программированию (также известная как \"заочка\")</a> — очень известная и крупная олимпиада, заодно еще и поступательная. Советую участвовать, особенно если у вас уровень 3+, хотя задачи не самые простые.</p>"),
        # label("<hr>\n\n<h2>Летняя компьютерная школа</h2>\n<p>\nЛетняя компьютерная школа (ЛКШ) — это очень круто, у нее только один недостаток: она платная (поездка стоит около 50 тыс. рублей).</p>"),
        #sis(),
        #label("<p><b>Я настоятельно рекомендую:</b></p>\n<ul>\n<li>Всем 8-классникам и младше, имеющим уровень как минимум 1Б, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем 9-классникам, имеющим уровень как минимум 1Г, и имеющим возможность поехать (т.е. если ваши родители готовы хотя бы частично оплатить поездку) — постараться поступить и поехать;</li>\n<li>Всем вообще (кроме 11-классников, конечно), имеющим уровень как минимум 2Б, даже если у вас нет возможности поехать — все равно как минимум постараться поступить, если поступите, то будем думать, как вам поехать.</li>\n</ul>"),
        #summerSchools(),
        label("<h2>Архивы старых олимпиад</h2>")
        label("<a href=\"/raion_archive.pdf\">Архив прошлых районных олимпиад</a> (в тестирующей системе их скорее всего нигде нет)
            <ul>
            <li><a href=\"https://www.youtube.com/watch?v=ERm4nurDfk4\">Видеозапись занятия про районную олимпиаду от 05.12.2021</a></li>
            <li><a href=\"https://www.youtube.com/watch?v=9IgDerlwelY\">Видеозапись занятия про районную олимпиаду от 08.21.2019</a> (в частности, 
            там есть обсуждение более старых задач)</li>
            </ul>
            <hr>
            <a href=\"/material/reg\">Областные олимпиады прошлых лет</a> (у нас в тестирующей засчитываются только полные баллы, но на реальной олимпиаде частичные решения тоже оцениваются)"),
    ])
